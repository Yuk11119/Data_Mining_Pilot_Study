id,question,reference_answer,provided_answer,answer_feedback,verification_feedback,score,mapped_score,predicted_score,similarity
294ee57d9f81437d9283465857d5e783,State at least 4 of the differences shown in the lecture between the UDP and TCP headers.,"Possible Differences : The UPD header (8 bytes) is much shorter than the TCP header (20-60 bytes) The UDP header has a fixed length while the TCP header has a variable length Fields contained in the TCP header and not the UDP header : -Sequence number -Acknowledgment number -Reserved -Flags/Control bits -Advertised window -Urgent Pointer -Options + Padding if the options are UDP includes the packet length (data + header) while TCP has the header length/data offset (just header) field instead The sender port field is optional in UDP, while the source port in TCP is necessary to establish the connection","In TCP there is a Sequence Number field to identify packets individually for reliability. There is no Sequence Number in UDP. The UDP header does not have an options field, while the TCP header does. In TCP there is an Advertised Window field for the Sliding Window Protocol for Flow Control. There is no Flow Control and therefore no Advertised Window field in UDP. In TCP there there is only a Data Offset field that specifies the header length. In UDP the whole Packet Length is transmitted.",The response correctly identifies four differences between TCP and UDP headers.,Correct,1.0,0,0,0.5158116
3cafbab1273d41f09b20d27b40912f6a,State at least 4 of the differences shown in the lecture between the UDP and TCP headers.,"Possible Differences : The UPD header (8 bytes) is much shorter than the TCP header (20-60 bytes) The UDP header has a fixed length while the TCP header has a variable length Fields contained in the TCP header and not the UDP header : -Sequence number -Acknowledgment number -Reserved -Flags/Control bits -Advertised window -Urgent Pointer -Options + Padding if the options are UDP includes the packet length (data + header) while TCP has the header length/data offset (just header) field instead The sender port field is optional in UDP, while the source port in TCP is necessary to establish the connection","TCP has a Error Control. So the users can be sure, that all packages have been transmitted in the right order. TCP has an included flow control, to assure, that the two clients don't get an overflow of packages. Mulitplexing: In UDP you only have on port at the receiver, where to send the data. For TCP you have to, one at each side. Connections are established and torn down in TCP, with the three-way-handshake. For UDP there is no guarantee the connection is established or closed.",The response states general differences between UDP and TCP while the question requirement is to identify TCP and UDP header differences.,Incorrect,0.0,0,0,0.4446141
1419baa6d7e34374b64f6c015e05bf30,State at least 4 of the differences shown in the lecture between the UDP and TCP headers.,"Possible Differences : The UPD header (8 bytes) is much shorter than the TCP header (20-60 bytes) The UDP header has a fixed length while the TCP header has a variable length Fields contained in the TCP header and not the UDP header : -Sequence number -Acknowledgment number -Reserved -Flags/Control bits -Advertised window -Urgent Pointer -Options + Padding if the options are UDP includes the packet length (data + header) while TCP has the header length/data offset (just header) field instead The sender port field is optional in UDP, while the source port in TCP is necessary to establish the connection","In TCP the ports are at both ends. In TCP it has error control, flow control, congestion avoidance while in UDP has only checksum.",The question requirement is to identify the difference between UDP and TCP headers while the response states general differences between UDP and TCP.,Incorrect,0.0,0,0,0.42390046
542ffb3bc2074150a8ed1e8b08a9155f,What is the “Dynamic Host Configuration Protocol (DHCP)”? What is it used for?,"The Dynamic Host Configuration Protocol (DHCP) is a network management protocol used in Internet Protocol (IP) networks, whereby a DHCP server dynamically assigns an IP address and other network configuration parameters to each device on the network. Further, DHCP has largely replaced RARP (and BOOTP) Uses of DHCP are: Simplifies installation and configuration of end systems. Allows for manual and automatic IP address assignment. May provide additional configuration information (DNS server, netmask, default router, etc.)",It is used to assignIP addresses to hosts in a network.,"The response does not give a definition and does not specify how DHCP assigns the IP addresses, i.e. dynamically or automatically.",Partially correct,0.25,0,0,0.54475474
be964548e8ec49dc85c2b053425530c7,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","Transport Layer, in which it writes an error detection and correction also increases energy efficiency. Network Layer, in which it adapts routing protocols and multicast routing.",The response doesn’t answer any challenges of mobile routing.,Incorrect,0.0,0,0,0.44417986
d0cebb8817eb47bc93fffb46565e5c56,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","- Hidden Terminal Problem: Assume we have 2 senders s1,s2 and one receiver r build like this: s1 → r ← s2 The radius of s1 can just sense the receiver and s2 can also just sense the receiver. S1 is sending something to r. But since S2 cannot sense s1 it assumes the receiver is free and starts sending to r too. Hence s1 is hidden to c the collison detection fails → Hidden Terminal Problem. - Exposed Terminal Problem: Assume we have 2 senders s1,s2 and two receiver r1, r2 build like this: r1 ← s1 --- s2 → r2 Now s1 sends to r1. s2 wants to send to r2 but it gets the signal from s1 that it is sending data at the moment. Since s1 is sending to r1 and s2 can not sense r1, it assumes r2 is busy, and hence waits unnecessarily. --> Exposed Terminal Problem","The response related to the hidden terminal is partially correct as s1 assumes the medium instead of the node to be free. The description of the exposed terminal problem is partially correct as well. S2 senses the medium is busy and waits, not because it assumes r2 busy. The wait is unnecessary as S2 wants to send data to R2, and R2 is out of the range of S1.",Partially correct,0.75,0,0,0.379137
4d79a4d4b8db41ac885a9c214311e999,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","1.Hidden Terminals: it is when two stations simultaneously transmit data to one of the stations is unaware that reception is already receiving data from another station and a collision occurs at the receiving station. E.g. We have three station A,B,C -A sends to B, C cannot receive A -C senses a “free” medium (carrier sense fails) , C sends to B -Collision at B, A cannot detect the collision (collision detection fails) -A is “hidden” for C and vice versa 2.Near and Far Terminals: it's when a weak signal drowns out a strong signal. Terminals A and B send, C receives -Signal strength decreases proportionally to square of distance -Stronger signal of B therefore drowns out A’s weaker signal -C cannot receive A",The response correctly explains the hidden and near and far terminal challenges.,Correct,1.0,0,0,0.50976014
ee695615d03e412c902731d6057cfe76,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.",HIDDEN TERMINAL Because there no cable connecting every Terminal together it can happen that two or more station can not reach each other and therefor hidden. This can be a problem if for example a terminal has to be quiet so it doesn’t disturb the communication of a neighbor but it can’t get the communication request signal from the communication partner because it is hidden. This can be solved by using a busy signal or by listening to acknowledgments from the neighbor. NEAR AND FAR TERMINALS A signal from a station gets weaker with distance by the inverse square law. This lead to the situation that nearer stations are overpowering stations which are further away and drowning there signal. As a result stations which would normally be able to communicate with each other can’t do so anymore. This can be a severe problem and can only be handled with precise power control.,"The response correctly describes the near and far terminal problem. In the hidden terminal, two stations cannot reach each other because they are out of one other's detection range, not just because they are wireless nodes.",Partially correct,0.875,0,0,0.58162755
2d892e47e54c4281971127dc3b171a4a,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","1. application layer - the discovery of services - you will need service awareness and need places for the services security - outside you can always be attacked, or the mobile routing could be disturbed.","The response states application layer related challenges, but there is no clear relation to the wireless network routing challenges. The second point does not specify what is meant by outside. Even the optical fiber lines of wired networks are laid outside, even in seas.",Partially correct,0.25,0,0,0.3448947
67f931a2deb04f80a80a22a0ec153a8d,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","In mobile routing autonomous systems are not stationary or in fixed location unlike fixed and wired networks. Autonomous system is free to come and join one network at one time and later leave and join another network while maintain same communication session between sender and receiver and vice versa. Two challenges: 1. Reconnecting sender and receiver when they try to connect through different intermediary networks while being on motion. 2. At user application level awareness by the sender that receiver has left, so save the user session, so that when receiver reconnects, sender is automatically notified and previous user session is resumed.",Both challenges are correct.,Correct,1.0,0,0,0.51375365
44a81e9660c9442081383d1b307e26dd,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","- The network structure is changing fast, so the routing tables must be adapted to these changes. The routing algorithm needs to converge fast. - Because all nodes share the same communication medium (the ether), the signaling overhead needs to be minimized, to reduce the load in the medium.","In the second challenge, it should be made explicit that the usable frequency is limited.",Partially correct,0.875,0,0,0.4571945
ff2831704b4f463aa73963b3b5cdae51,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","CSMA/CD does not work for wireless transmission. Main issue is the broadcast nature of mobile transmission. * Hidden Terminal Problem: Firstly, carrier sense fails because a station that want to send cannot “see” another station already sending to its destination as it is not in the transmission range of the other sending station. Secondly, there is no collision detection after the collision arised. This leads to a higher amount of collisions, a wastage of resources and unreliability. For example: * station A sends to station B; station C is not in the range of A, thus, does not receive A’s signal * C performs carrier sensing as it wants to send to B, senses a free medium * C sends to B which causes collision at B; A cannot detect the collision (as it is a wireless scenario) * station A and C are hidden from each other * Exposed Terminal Problem: The “exposed” station is waiting to transmit a signal, as it hears a signal from another transmitting station. Thus, it tries to prevent a collision which actually will not occur as the receiver of the other sending station is outside of its range. This leads to underutilization of the channel and a decreased effective throughput. For example: * station B sends to station A; station C wants to send to another station outside of B’s transmission range * C performs carrier sensing and senses a busy medium, thus it has to wait * A is outside of C’s transmission range, thus, C actually does not need to wait as it would not cause a collision at A; C is exposed to B",The response correctly states two challenges of mobile routing.,Correct,1.0,0,0,0.5893215
f757b3c9e40447ea826faf8af3833fd3,WHAT are the challenges of Mobile Routing compared to routing in fixed and wired networks? Please NAME and DESCRIBE two challenges.,"Possible Challenges: 1.Adaptation: The network has to handle the dynamic positioning of the nodes/topology changes. Additionally, nodes can leave or join the network anywhere (within signal range) at any time. 2.Security: Interception of packets or injection of faulty packages is easily possible in wireless networks. This may necessitate encryption and authentication. 3.Medium Access Control: Wireless networks feature new possibilities for inference and collisions of the transmitted signals. See the following correct example challenges: i)Hidden Terminal: Nodes’ transmissions may collide at other nodes without them noticing, because they are out of detection range of each other (A and C in this example) and therefore sense the medium to be free even though there is an overlap of the transmission ranges. ii)Exposed Terminal: Nodes (C in this example) may not realize they could send collision-free, because a node in their detection range (B) is sending and they, therefore, detect the medium as busy, but the sending node (B) is out of the detection range of the destination node (D) so that no collision would occur. iii)Near and Far Terminals: Signal strength decreases proportionally to the square of distance, so closer nodes may drown out the weaker signals of nodes farther away. 4.Quality of Service (QoS): Due to the rapidly changing network topology, imprecise network information, and resource constraints of participating nodes, it is challenging to provide the desired QoS. Additionally, signal quality may also decline due to noise and occlusion. 5.Scalability: Since it is not possible to know the number of participating nodes beforehand, it is vital that routing protocols, etc. are capable of dealing with increasing network sizes and workloads. 6.Heterogeneity: Nodes may have different capabilities, responsibilities, and constraints, e.g. processing capacity, transmission ranges 7.Dependability: Providing consistent, performant, and reliable routing behavior that higher-level services can trust is challenging in such a dynamic environment. 8.Power Consumption: As most mobile devices are battery-powered, power consumption becomes an important optimization factor in routing, etc.","(Due to the question in the forum, i will relate to slide 3, not to Challenges in Mobile Communications, which are on slide 10ff). One basic challenge in Mobile Networking is the Power control: mobile devices have only a limited amount of power which should be used wisely and as little as possible. In addition, the routing in Mobile Networking has to deal with a high amount of dynamic so it needs to find new routes as nodes move or conditions change.",The response correctly states and describes two challenges of mobile routing.,Correct,1.0,0,0,0.44308603
1c0cfab8391b493ea65d820e5844c218,What requirement has to be met so that you can use the piggybacking extension to the sliding window protocol?,Piggybacking only makes sense if there is a full-duplex or semi-duplex connection between sender and receiver i.e. two-way communication or Frames must contain additional field for acknowledgement.,Both sides must send data to use piggybacking to be able to attach ACKs to data frames otherwise the sender will assume a frame loss.,"The response is incorrect as there will not always be data to send, in such cases a dedicated timer timeout is used to signal the absence of sufficient data and trigger the sending of separate acknowledgment.",Incorrect,0.0,0,0,0.5050553
fc0c2f676d1d4dc4b608cae105153d16,What requirement has to be met so that you can use the piggybacking extension to the sliding window protocol?,Piggybacking only makes sense if there is a full-duplex or semi-duplex connection between sender and receiver i.e. two-way communication or Frames must contain additional field for acknowledgement.,"Need to know the initial sequence number, aswell as the next sequence number and acknowledgement.",The response is incorrect as the above points are not specific to piggybacking but hold for the sliding window protocol in general.,Incorrect,0.0,0,0,0.02930316
b30d3cc317514e79b068f0bf34429a76,What requirement has to be met so that you can use the piggybacking extension to the sliding window protocol?,Piggybacking only makes sense if there is a full-duplex or semi-duplex connection between sender and receiver i.e. two-way communication or Frames must contain additional field for acknowledgement.,"To use the piggybacking extension to the sliding window protocol, we have to be in a duplex mode.",The response answers the underlying requirement correctly.,Correct,1.0,0,0,0.5741831
e79339cd4a2c489fa41275c9c89c16db,What requirement has to be met so that you can use the piggybacking extension to the sliding window protocol?,Piggybacking only makes sense if there is a full-duplex or semi-duplex connection between sender and receiver i.e. two-way communication or Frames must contain additional field for acknowledgement.,A receiver of a data frame has to send data frames the ACKs are piggybacked onto at a rate that is high enough so that the sender doesn't have to wait for too long for the ACKs to arrive. Otherwise a timeout might occur and the sender sends the frame again.,The response states duplex communication indirectly but a dedicated timer timeout can also be on the receiver side to send acknowledgment separately when sufficient data is not present.,Partially correct,0.5,0,0,0.38878733
b3933375086a42ab86b3aab0e85faa8d,What requirement has to be met so that you can use the piggybacking extension to the sliding window protocol?,Piggybacking only makes sense if there is a full-duplex or semi-duplex connection between sender and receiver i.e. two-way communication or Frames must contain additional field for acknowledgement.,"The requirement that has to be met that you can use the piggybacking extension to the sliding window protocol is, that we need the ACK field in the frame header that costs only a few bits. A seperate frame would need more costs: ACK, header and a checksum.","The response is correct, a duplex connection is also required.",Correct,1.0,0,0,0.35214347
c0495c36eddd4ae0a7c5f0d424cc51ec,What requirement has to be met so that you can use the piggybacking extension to the sliding window protocol?,Piggybacking only makes sense if there is a full-duplex or semi-duplex connection between sender and receiver i.e. two-way communication or Frames must contain additional field for acknowledgement.,"There must also be frames directed towards A (sender) in the transmission, so that B (receiver) sends frames back to A in a reasonable amount of time. In addition to that the amount of frames size of both parties must be similarly big, because the acknowledgement is added to frames directed at A. As a result there must be a certain balance of frames in both directions.","The response correctly implies duplex operation. However, a balanced approach is difficult to achieve in real scenarios, so there are ways to overcome it, like a dedicated timer signaling a timeout in the absence of data to be sent.",Partially correct,0.5,0,0,0.48501417
d320327c66d34c839f45290e1606d3f1,"Let us assume that you flip a coin 6 times where the probability of heads (H) showing up is 0.6. Please arrange the following events in the increasing order of their likelihood (i.e., least probable → most probable): ● Event A: you see at least three H’s ● Event B: you see the sequence HHHTTT ● Event C: you see exactly three H’s Include justification in your answer headers.","The correct sequence is BCA , where B is the least probable. One of the following justifications should be given: ● Event B is a subset/part/special case of C, and C is a subset/part/special case of A ● Event B is more specific/strict than C and C is more specific/strict than A ● An actual, correct calculation of the probabilities: ○ P(B) = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 *0.4 = 0.6^3 *0.4^3 = 0.013824 ○ P(C) = (6 choose 3) * P(B) = 0.27648 ○ P(A) = P(C) + P(Y=4) + P(Y=5) + P(Y=6) = 1 - P(Y=0) - P(Y=1) - P(Y=2) = (6 choose 3) * 0.6^3 * 0.4^3 + (6 choose 4) * 0.6^4 * 0.4^2 +(6 choose 5) * 0.6^5 * 0.4 + (6 choose 6) * 0.6^6 = 0.27648 + 15 * 0.020736 + 6 * 0.031104 + 1 * 0.046656 = 0.8208 ○ The answer may be rounded to up to 2 decimal places, e.g. P(B) = 0.01 or P(B) = 0.014 ○ It is also sufficient to give a formula without the actual calculation, if it is apparent that P(B) less than P(C) less than P(A), e.g. by stating P(C) = 20 * P(B)","B -> C -> A B is the least propable, because there is only this one combination out of 64 possible combinations. The propability is 1,38% ( 0,6*0,6*0,6*0,3*0,3*0,3). C is more propable, because out of the 64 combinations, 20 combinations can satisfy this condition (formula would be 6!/3!*3!) and results in 27,63% propability. The most propable case is A, because it contains B and has the propabilities of having 4 Hs, 5Hs and 6Hs added onto it, which results in 82,08% propability.",The response correctly answers the order of the events with appropriate justification but the probability of event C is incorrect. The correct value is 27.648% (rounding mistake).,Partially correct,0.75,0,0,0.5790367
c88fdaad3a424cc4823084415ad4105d,"Let us assume that you flip a coin 6 times where the probability of heads (H) showing up is 0.6. Please arrange the following events in the increasing order of their likelihood (i.e., least probable → most probable): ● Event A: you see at least three H’s ● Event B: you see the sequence HHHTTT ● Event C: you see exactly three H’s Include justification in your answer headers.","The correct sequence is BCA , where B is the least probable. One of the following justifications should be given: ● Event B is a subset/part/special case of C, and C is a subset/part/special case of A ● Event B is more specific/strict than C and C is more specific/strict than A ● An actual, correct calculation of the probabilities: ○ P(B) = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 *0.4 = 0.6^3 *0.4^3 = 0.013824 ○ P(C) = (6 choose 3) * P(B) = 0.27648 ○ P(A) = P(C) + P(Y=4) + P(Y=5) + P(Y=6) = 1 - P(Y=0) - P(Y=1) - P(Y=2) = (6 choose 3) * 0.6^3 * 0.4^3 + (6 choose 4) * 0.6^4 * 0.4^2 +(6 choose 5) * 0.6^5 * 0.4 + (6 choose 6) * 0.6^6 = 0.27648 + 15 * 0.020736 + 6 * 0.031104 + 1 * 0.046656 = 0.8208 ○ The answer may be rounded to up to 2 decimal places, e.g. P(B) = 0.01 or P(B) = 0.014 ○ It is also sufficient to give a formula without the actual calculation, if it is apparent that P(B) less than P(C) less than P(A), e.g. by stating P(C) = 20 * P(B)",Order: B-C-A The probability of having HHHTTT is the lowest because its the most specific outcome. Only one possible path. The probability of seeing exactly three H’s is the second lowest. It includes the probability of HHHTTT and all other possible orders to achieve exactly three H’s. Having at least three H’s is the most probable outcome of those three. It includes the probability of B and C plus all outcomes with more than three H’s.,The response correctly answers the order of the events with appropriate justification.,Correct,1.0,0,0,0.5259673
0f73374d82ff4996a3a584a99b009285,"Let us assume that you flip a coin 6 times where the probability of heads (H) showing up is 0.6. Please arrange the following events in the increasing order of their likelihood (i.e., least probable → most probable): ● Event A: you see at least three H’s ● Event B: you see the sequence HHHTTT ● Event C: you see exactly three H’s Include justification in your answer headers.","The correct sequence is BCA , where B is the least probable. One of the following justifications should be given: ● Event B is a subset/part/special case of C, and C is a subset/part/special case of A ● Event B is more specific/strict than C and C is more specific/strict than A ● An actual, correct calculation of the probabilities: ○ P(B) = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 *0.4 = 0.6^3 *0.4^3 = 0.013824 ○ P(C) = (6 choose 3) * P(B) = 0.27648 ○ P(A) = P(C) + P(Y=4) + P(Y=5) + P(Y=6) = 1 - P(Y=0) - P(Y=1) - P(Y=2) = (6 choose 3) * 0.6^3 * 0.4^3 + (6 choose 4) * 0.6^4 * 0.4^2 +(6 choose 5) * 0.6^5 * 0.4 + (6 choose 6) * 0.6^6 = 0.27648 + 15 * 0.020736 + 6 * 0.031104 + 1 * 0.046656 = 0.8208 ○ The answer may be rounded to up to 2 decimal places, e.g. P(B) = 0.01 or P(B) = 0.014 ○ It is also sufficient to give a formula without the actual calculation, if it is apparent that P(B) less than P(C) less than P(A), e.g. by stating P(C) = 20 * P(B)",B -> C -> A A: 0.6^3 * 0.4^3 * 20 + 0.6^4 * 0.4^2 * 15+ 0.6^5 * 0.4 * 6 + 0.6^6 = 0.8208 B: 0.6^3 * 0.4^3 = 0.013824 C: 0.6^3 * 0.4^3 * 20 = 0.27648,The response states the correct order of events with the calculation of all event probabilities.,Correct,1.0,0,0,0.45588818
41959a1144bc4421b0c0dd4ebadc3cea,"Let us assume that you flip a coin 6 times where the probability of heads (H) showing up is 0.6. Please arrange the following events in the increasing order of their likelihood (i.e., least probable → most probable): ● Event A: you see at least three H’s ● Event B: you see the sequence HHHTTT ● Event C: you see exactly three H’s Include justification in your answer headers.","The correct sequence is BCA , where B is the least probable. One of the following justifications should be given: ● Event B is a subset/part/special case of C, and C is a subset/part/special case of A ● Event B is more specific/strict than C and C is more specific/strict than A ● An actual, correct calculation of the probabilities: ○ P(B) = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 *0.4 = 0.6^3 *0.4^3 = 0.013824 ○ P(C) = (6 choose 3) * P(B) = 0.27648 ○ P(A) = P(C) + P(Y=4) + P(Y=5) + P(Y=6) = 1 - P(Y=0) - P(Y=1) - P(Y=2) = (6 choose 3) * 0.6^3 * 0.4^3 + (6 choose 4) * 0.6^4 * 0.4^2 +(6 choose 5) * 0.6^5 * 0.4 + (6 choose 6) * 0.6^6 = 0.27648 + 15 * 0.020736 + 6 * 0.031104 + 1 * 0.046656 = 0.8208 ○ The answer may be rounded to up to 2 decimal places, e.g. P(B) = 0.01 or P(B) = 0.014 ○ It is also sufficient to give a formula without the actual calculation, if it is apparent that P(B) less than P(C) less than P(A), e.g. by stating P(C) = 20 * P(B)","- Event B (lowest probability because there is only one sequence fulfilling this property) - Event C (superset of Event B and additionally containing all other sequences containing three H's) - Event A (superset of Event C and additionally containing all sequences with four H's, five H's and six H's)",The response correctly answers the order of the events with appropriate justification.,Correct,1.0,0,0,0.5883081
408af08475a74de9b575e67e9507262b,"Let us assume that you flip a coin 6 times where the probability of heads (H) showing up is 0.6. Please arrange the following events in the increasing order of their likelihood (i.e., least probable → most probable): ● Event A: you see at least three H’s ● Event B: you see the sequence HHHTTT ● Event C: you see exactly three H’s Include justification in your answer headers.","The correct sequence is BCA , where B is the least probable. One of the following justifications should be given: ● Event B is a subset/part/special case of C, and C is a subset/part/special case of A ● Event B is more specific/strict than C and C is more specific/strict than A ● An actual, correct calculation of the probabilities: ○ P(B) = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 *0.4 = 0.6^3 *0.4^3 = 0.013824 ○ P(C) = (6 choose 3) * P(B) = 0.27648 ○ P(A) = P(C) + P(Y=4) + P(Y=5) + P(Y=6) = 1 - P(Y=0) - P(Y=1) - P(Y=2) = (6 choose 3) * 0.6^3 * 0.4^3 + (6 choose 4) * 0.6^4 * 0.4^2 +(6 choose 5) * 0.6^5 * 0.4 + (6 choose 6) * 0.6^6 = 0.27648 + 15 * 0.020736 + 6 * 0.031104 + 1 * 0.046656 = 0.8208 ○ The answer may be rounded to up to 2 decimal places, e.g. P(B) = 0.01 or P(B) = 0.014 ○ It is also sufficient to give a formula without the actual calculation, if it is apparent that P(B) less than P(C) less than P(A), e.g. by stating P(C) = 20 * P(B)","Event B = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 * 0.4 = 0.013824 Event C = P(k = 3) = 6 über 3 * (0.6)^3 * 0.4^3 = 0.27648 Event A = P(k >= 3) = 6 über 3 * (0.6)^3 * 0.4^3 + 6 über 4 * (0.6)^4 * 0.4^2 + 6 über 5 * (0.6)^5 * 0.4^1 + 6 über 6 * (0.6)^6 = 0.8208 From least to most probable = B,C,A",The response correctly answers the order of the events with appropriate justification.,Correct,1.0,0,0,0.4595009
f076b3fc5e594613a7de8fbec979a3be,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",Binary encoding should be used in this network because all three end systems have perfect clocks wherefore a self-clock feature isn't necessary. It also provides better utilization of the bandwidth than Manchester encoding or differential Manchester encoding.,Correct.,Correct,2.5,1,1,0.71301174
96d136cbffb7427187b532fcf76c937c,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","They should use ""Binary Encoding"" because of the perfekt timed clocks and furtermore this mechanism has the best transfer rate (1 bit per Baud).",Correct.,Correct,2.5,1,1,0.7081424
e5ead8d68deb4e10867d31889a72cfe2,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Bianry Encoding, since it has good utilization of bandwidth which could solve the traffic problem. On the other hand, the 3 users have already perfect clocks, the no ""self-clocking"" feature of binary coding could be neglected.",Correct.,Correct,2.5,1,1,0.7561437
de01b6580f24430d952fd6a2d331f158,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",I would use Binary Encoding. It is efficient since it uses 1 bit per baud. It has no self-clocking feature but that is not needed since all user have perfect clocks.,Correct.,Correct,2.5,1,1,0.7971915
e8a8f92c80014aada0537f98b769e0f2,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",Binary encoding can be used. It has the highest bandwidth (1 bit per Baud) and is simple and cheap. The 'self-clocking' feature of the more complex manchester encoding and differential manchester encodings is not necessary since the users have perfect clocks.,Correct.,Correct,2.5,1,1,0.75028324
1d29fe5a84494080a610351dfca82c0e,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","I would use the binary encoding in this network. The ""self-clocking"" feature of the Manchester Encoding isn't an advantage in this scenario since all users have perfect clocks. Therefore the perfect clocks can even out the Binary Encoding's disadvantage of not having a ""self-clocking"" feature and only the advantages of being cheap, simple and the good utilization of the bandwidth remain.",Correct.,Correct,2.5,1,1,0.77563804
80259d8b9ffa42c084d7672be0eb3dd2,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Because all users have a perfect clock, the binary encoding is best to be used. It is simple, cheap and the bandwith is with 1 bit/Baud well utilized. (The Manchester encodings in comparison have only 0.5 bit/Baud.)",Correct.,Correct,2.5,1,1,0.7193485
7d7106f912d84354b9cd9588bcffe129,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","I would suggest to use binary encoding, because they are all interconnected and have perfect clocks, that is why they do not need a self-clocking encoding and it is simple and cheap, so it has a good utilization of the bandwidth ( 1 bit per Baud), what helps against congestion.",Correct.,Correct,2.5,1,1,0.7979666
14835f75095a4407a3ca36cb391abd71,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Since we want to transmit with as high of a baud rate as possible we first look at binary encoding. For binary encoding we need perfectly synchronous clocks. Since all our users have perfect clocks, binary encoding is better, since the baud rate is twice as high.",Correct.,Correct,2.5,1,1,0.6936094
f9b9a7f5e7604f16b204577971dd448d,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","I would use binary encoding, since the premise is that all users have perfect clocks. This makes the ""self-clocking"" feature of the other two encoding methods not necessary. Binary encoding also makes good utilization of the bandwidth (1bit per baud) which is good, since the 3 users generate lots of traffic.",Correct.,Correct,2.5,1,1,0.80217826
c722b046ff224cb79476dead7a7e084f,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","In this local network with 3 users, the encoding technique Binary Encoding should be used. This technique is simple, cheap, and has a good utilization of the bandwidth. The disadvantage of the no ""self-clocking"" feature is compensated through the fact that the users have perfect clocks. In contrast, the Manchester and Differential Manchester Encoding have a worse utilization of the bandwidth (0.5 bit/baud) than Binary Encoding (1 Bit/Baud) and the ""self-clocking"" feature is unnecessary in this case.",Correct.,Correct,2.5,1,1,0.77095985
6efb094124aa4047af4c2c7e2947b000,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","A binary encoding would be most beneficial. Since all clients have perfect clocks, it doesn't need a self clocking feature as used by Manchester encoding and differential Manchester Encoding. It also can transmit a double of the data, effectively increasing the channels capacity",Correct.,Correct,2.5,1,1,0.7695404
610e3a89ce244329a63e3d75b0d2a013,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",Binary encoding should be used. Perfeclty clocked users do not need any self-clocking encoding such as Manchester. More traffic would benefit from more efficient encoding technique.,The response is correct.,Correct,2.5,1,1,0.6860801
6a73616796c24eb1b031a33e908c02c6,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Baudot time multiplex system. 3 users have perfect clocks, so all channels can be processed in a fixed grid within a certain time. Each channel is assigned a fixed time window (time slot).The time windows can be synchronized and of the same length or asynchronous and depending on requirements. This is Time Division Multiplex.",The question asks for the type of encoding rather the channel access type.,Incorrect,0.0,0,0,0.5080124
911e5332765042adaa0fd1d9923b0463,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Because the network has a perfect clock, we don't need an encoding technique with the self-clocking feature. Because the network is often congested we need a good utilization of the bandwidth (1 bit per Baud).",Correct.,Correct,2.5,1,1,0.75230676
e0170025e4aa4a38966d5752e6dda1b0,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",The network should use binary encoding: - Because of the perfect clocks there is no need for a self-clocking encoding - Binary encoding has better bandwith utilization than Manchester/differential Manchester encoding which is important because this network is often congested,Correct.,Correct,2.5,1,1,0.66868895
fbbd86bebd8245889a8d554eeb7f20d7,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Recommended encoding technique: Binary Encoding (NRTZ). Reasons: 1. Of all the encoding techniques presented in the lecture, binary encoding offers the best use of bandwidth (1 bit per baud versus 0.5 bits per baud for (differential) Manchester encoding) for the scenario described (heavy link utilization). 2. Since all participants have perfect clocks, there is no risk of clock drift/deviation.",Correct.,Correct,2.5,1,1,0.6422564
2375e1c3e99a43d5a1c636b6193d79bb,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","Binary encoding. 1.All users have perfect clocks, so good ""self-clocking"" feature is not necessary. 2.It is mentioned that all users generate more traffic than the link’s capacities. But the utilization of the bandwidth of Manchester Encoding or Differential Manchester Encoding is 0.5 bit/Baud, only half of the utilization of Binary encoding.",Correct.,Correct,2.5,1,1,0.71011597
2db28f0a9bcc420ab9ec451983558147,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",Binary Encoding as it is simple to implement and uses the bandwidth well. It's also easily doable as all parties have a perfect clock and therefore there is no problem receiving and differentiating multiple bits of the same type after another.,Correct.,Correct,2.5,1,1,0.743881
63adee7dffda41398cd1a177984d8aec,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.","In this scenario, the simple Binary Encoding technique should be used. That is, because it has the best utilization of the bandwidth among the presented techniques, which is important to use such a congested network as efficiently as possible. Furthermore, the downside of the technique not having a self-clocking feature is not a problem here since all users are interconnected and have perfect clocks.",Correct.,Correct,2.5,1,1,0.8012407
4018c3639fb14ecd896d7681e153a497,Assume you have a local network with 3 users that are all interconnected and have perfect clocks. Typically the network is often congested as all users generate more traffic than the link’s capacities. Which of the encoding techniques introduced in the lecture should be used in this network to encode bitstreams? Give two reasons for your answer in 2-4 sentences.,"Binary Encoding, as it is the most efficient in terms of bandwidth since you get a full bit per baud instead of only 0.5. Additionally, you do not have to deal with clock drift and various ticking rates as all clocks are perfect. Therefore, self-clocking / clock recovery is not as necessary. Simple and cheap is also acceptable as one of the reasons.",Character oriented encoding is used.,The response is not related to the theme of the encoding types.,Incorrect,0.0,0,0,0.30329025
7793dec596f5428a916e39f47d81de37,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.","The collision domain diameter will shrink, exactly by the same Factor Value we increase the speed of Transmission. i.e .. when we have with Transmission rate of 10 Mbps and a Distance of 3000m, then we gonna have by Transmission rate of 100Mbps just a distance of 300m between the locations the speed ist possible.",The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.49134797
52814adc8a95436bbb0e548f4ecdb327,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",It is divided by the same factor of 10.,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.10976167
dd933fb12dca46a986b51b1b23109c0c,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.","The collision domain diameter is reduced by the same factor, e.g. from 3km to 300m.",The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.58559847
d90988c14c5044588ba509f2752ca738,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",The collision domain diameter decreases by a factor of 10. That means the maximum distance between two locations on the network has to be 10 times smaller.,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.5111162
ddf912abac844e688f4c8626170572ba,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",this “ collision domain diameter” will decrease by a factor of 10,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.58927715
988770907a0e4a7e8d1f07c3fb667189,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.","The collision domain diameter will shrink with the same factor,so when the original speed is 10Mb/s and the collision domain diameter is 3km, an increase of the speed by the factor 10 to 100Mb/s will decrease the collision domain diameter to 300m.",The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.5378285
497a3972819e4e7095afd2e7610ca1d0,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",the collision domain diameter have to shrink (divided by 10),The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.52500445
89e69798c61d4032b10920b2dfddbb66,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",The maximum distance has to shrink by the factor of 10 and the LAN also has to get smaller which is not possible or at some point not feasible.,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.4730119
bfd96b84c1af4e5ea7d6d11d715d4b3c,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",The collision domain diameter decreases by the factor 10.,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.57583386
6f96bc68d1e74bccb0b93045762ffc24,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.","For doing so you have to shrink the maximal distance between two locations. In the given example the speed of the network should be increased by factor 10 from 10 Mb/s to 100 Mb/s. To achieve this without changing everything else, you have to reduce the collision domain diameter by factor 10.",The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.47196987
d9e9eafa5048492a9eeeb3d45c6650a9,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",The collision domain diameter will be reduced by the factor of 10.,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.54181033
551f951cef7d43baaab337ad013ad07a,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.","The collision domain diameter = 412m, i.e., ca. 300m instead of ca. 3000m",The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.5145803
63475bedb7fa487ba24e8b839235cb7a,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.",The sender must still be able to detect collisions during simultaneous transmission and must also not exceed the maximum network extension. The collision domain diameter for 100 Mb/s is 10 times smaller than for 10 Mb/s if you use CSMA/CD => 3000m to 300m.,The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.35944104
9bfa0279d9904a8194c52908737f92d4,"What happens to the ""collision domain diameter"" if you use CSMA / CD and increase the speed of a network by a factor of 10, eg from 10Mb / s to 100Mb / s (all else being equal)?","Diameter decreases by a factor of 10, e.g 300m to 30m.","With a speed increased by a factor of 10, the collision domain diameter does decrease by a factor of 1/10 when using the same minimum packet size (e.g. 64 byte with Ethernet). This is because the send does finish much quicker (10 times as quick) while the time the electricity change needs to travel from sender to receiver and backwards remains the same.",The response is correct as it answers the change in the diameter scale accurately.,Correct,1.0,0,0,0.33896506
72b79f6bc33d40689534b4bfe55950e8,"Consider a single server queueing system with a buffer of size 10. Let us assume that 9 packets arrive per second and 10 packets are served per second on an average. Assume you monitor the system for exactly one minute after the system reaches equilibrium. How many seconds would you expect the system to be in a state in which there are less than 10 packets waiting in the queue? You need to justify your answer by showing steps involved; calculations, however, need not be included. headers.","Since we have a buffer size (N) of 10, we will always have less than 10 packets waiting in the queue unless there are exactly 10 packets in the queue. Therefore, we first calculate the probability of the system being full/having 10 packets in the queue. This is also called “blocking probability” or P_B. P_B = ((1 - utilization) * utilization^N) / 1 - utilization^(N+1) = ((1-0.9) * 0.9^10) / (1 - 0.9^11) = 0.0508 Alternatively to the blocking probability, it is also valid to directly calculate P(X less than 10) = (1 -P_B) by summing up the probabilities for 0, 1, …, 9 packets to be in the queue. To calculate the expected time where the system is not blocked in the 60-second observation time-frame, we simply multiply the time frame with P(X less than 10) or the complement of P_B (0.25p) = 60 * (1-P_B) = 56.9512 seconds","λ = 9pkts/s µ = 10pkts/s ρ = 9/10 = 0,9 = 90% Utilization E[n] = (0,9/0,1) – ((11*0,9^11) / (1-0,9^11)) = 3,969 = 4 Expected number of customers in the system.","The response is incorrect because the question requirement is to find out the expected number of seconds where the system has less than 10 packets waiting in the queue while the response states the number of expected packets in the system, which is incorrect as well.",Incorrect,0.0,0,0,0.42927873
ae833bec03d64d0c98936e0fafd4e60a,"Consider a single server queueing system with a buffer of size 10. Let us assume that 9 packets arrive per second and 10 packets are served per second on an average. Assume you monitor the system for exactly one minute after the system reaches equilibrium. How many seconds would you expect the system to be in a state in which there are less than 10 packets waiting in the queue? You need to justify your answer by showing steps involved; calculations, however, need not be included. headers.","Since we have a buffer size (N) of 10, we will always have less than 10 packets waiting in the queue unless there are exactly 10 packets in the queue. Therefore, we first calculate the probability of the system being full/having 10 packets in the queue. This is also called “blocking probability” or P_B. P_B = ((1 - utilization) * utilization^N) / 1 - utilization^(N+1) = ((1-0.9) * 0.9^10) / (1 - 0.9^11) = 0.0508 Alternatively to the blocking probability, it is also valid to directly calculate P(X less than 10) = (1 -P_B) by summing up the probabilities for 0, 1, …, 9 packets to be in the queue. To calculate the expected time where the system is not blocked in the 60-second observation time-frame, we simply multiply the time frame with P(X less than 10) or the complement of P_B (0.25p) = 60 * (1-P_B) = 56.9512 seconds","The system reaches equilibrium when the arriving packet rate is the same as the serving packet rate. The system will never reach equilibrium because the arriving packet rate is less than the serving packet rate, thus the packets in the queue will always be less than 10 packets.","The response states that the system will never reach equilibrium, but it is stated in the question as an assumption already. Also, the given rates are not constant and can vary through time, so an average needs to be calculated for the given time. Instead of 60 seconds, the buffer is less than full for 56.9512 seconds on average.",Incorrect,0.0,0,0,0.4424253
db4955ce332b461187ac063a8e9234f6,WHAT is the purpose of Reverse Path Forwarding and Reverse Path Broadcast? HOW do they work?,"Purpose: Both implement a more efficient kind (in terms of duplicate packets) of broadcasting than flooding / to minimize the number of duplicate packets in the network when broadcasting. Reverse Path Forwarding: Each node has a routing table stemming from unicast routing algorithms. When receiving a packet of sender S from neighbor N at node X, check the routing table and only forward the packet to all adjacent nodes (except for N) when you would send packets to S over N → the assumption is that the packet used the BEST route until now. Reverse Path Broadcast: Nodes monitor unicast traffic to learn which paths in the network they are a part of, that is node X knows that is on the best path between two nodes A and B if it receives unicast packets coming from A and going to B or visa versa. In other words, each node knows which spanning trees it is part of in the network. Reverse Path Broadcasting works identical to Reverse Path Forwarding with the exception that it only forwards packets on edges that are part of a spanning tree (again excluding the incoming line to N).","The purpose is to reduce that overall network usage, and not produce unneeded traffic. You only send out the gotten packet if it came from a router you would route through to the sender, otherwise the packet gets droped as it can not be the optimal path.","While both algorithms reduce traffic, the main purpose is to minimize duplicate packets during broadcasting. Also, it's unclear to which algorithm the given description is explaining.",Incorrect,0.0,0,0,0.53987193
cbf4789710d040c7859ea335a9224d9a,"To model the packet arrivals as a poisson process, we assumed that the arrivals for each time interval Δt are independent. Does this assumption hold for real INTERNET traffic? Explain your answer in 2-5 sentences.","No. Real internet traffic often comes in bursts. Therefore, arrivals are not independent because the probability of an arrival happening at a node is influenced by previous arrivals at the node. For example, on-demand video streams selectively load the next video segments when needed. This means the actual network utilization depends on the current playback state on the client-side. The packet arrivals are not independent, as it is likely that there is a low utilization directly after the next segments have been loaded.","It’s not realistic, because in the Real-World the high traffic in the internet depends often on the day and the time of the day. For example, weekend or holiday and morning, afternoon or evening. So, it can be that in the morning there are many zeros in the time slots and the evening there much ones, because for example everyone is watching Netflix in the end of working day or is doing some other internet things. So there can be more than one on’s in time interval delta t.","One can use a function instead of a constant to model the arrival rate to reflect such large-scale behavioral patterns like having more traffic in the evening. The arrivals would not depend on previous arrivals then, only on the time of the day, which is known. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.52619994
f818f0264bc944a7ab500b7f47fd1a3d,"To model the packet arrivals as a poisson process, we assumed that the arrivals for each time interval Δt are independent. Does this assumption hold for real INTERNET traffic? Explain your answer in 2-5 sentences.","No. Real internet traffic often comes in bursts. Therefore, arrivals are not independent because the probability of an arrival happening at a node is influenced by previous arrivals at the node. For example, on-demand video streams selectively load the next video segments when needed. This means the actual network utilization depends on the current playback state on the client-side. The packet arrivals are not independent, as it is likely that there is a low utilization directly after the next segments have been loaded.",This assumption does not hold true for the internet as when someone uses the internet he will continue using it for a certain time and not just have a single request and then nothing for a while. Also a lot of traffic is in a burst like nature so some requests until a certain buffer is filled and then again when it is somewhat deplenished. So in general the previous state or states can hold information for future states.,The response is correct as it correctly associates the probability of a packet arrival happening at a node with previous arrivals at the node.,Correct,1.0,0,0,0.5288865
bc240e66eec147f58e7ac2e864b192cf,"To model the packet arrivals as a poisson process, we assumed that the arrivals for each time interval Δt are independent. Does this assumption hold for real INTERNET traffic? Explain your answer in 2-5 sentences.","No. Real internet traffic often comes in bursts. Therefore, arrivals are not independent because the probability of an arrival happening at a node is influenced by previous arrivals at the node. For example, on-demand video streams selectively load the next video segments when needed. This means the actual network utilization depends on the current playback state on the client-side. The packet arrivals are not independent, as it is likely that there is a low utilization directly after the next segments have been loaded.",This assumption can not hold for real internet traffic because the underlying assumption of independence is false. Over a higher timescale the behavior of the user is undergoing changes. For example a user checks his mails in the morning for which packets arrive but then he goes to work and in that time no packets arrive. Another example disproving the assumption of independence is the on/off bursty traffic while watching videos. For some time packets arrive continuously and then if the buffer is full no packets arrive until the buffer is empty again and needs to be refilled.,"The first example in the response is partially correct because the arrival process' parameters can be time-dependent. That can model such intra-day variations like people going to work. Knowing previous arrivals no longer has to capture this information for us, thus making the inter-arrival times independent in this regard. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.5948278
0e58cbd3ed094438abe64299d02fcf79,"To model the packet arrivals as a poisson process, we assumed that the arrivals for each time interval Δt are independent. Does this assumption hold for real INTERNET traffic? Explain your answer in 2-5 sentences.","No. Real internet traffic often comes in bursts. Therefore, arrivals are not independent because the probability of an arrival happening at a node is influenced by previous arrivals at the node. For example, on-demand video streams selectively load the next video segments when needed. This means the actual network utilization depends on the current playback state on the client-side. The packet arrivals are not independent, as it is likely that there is a low utilization directly after the next segments have been loaded.","No, because sometimes many users want to access the server at the same time, while at other times, only few request the server. For example a livestream of a football match: everybody sends requests to the server at kickoff, but only few do after the game (to watch the highlights). That means that the arrivals are not independent. They can depend on other events.","The arrival depends on other events in such cases but the dependency can also be observed in the normal scenario when no such event is happening. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.54682714
a0f9e11165c64bfe8aba92d16a678988,Transparent bridges manage a bridge table for the forwarding process. Please describe what information the table holds and how it is modified during the backwards learning phase. How is the table used in the forwarding process and what is one benefit of that? Please answer the question in 2-5 sentences.,"1.A mapping between destinations/stations (MACs) and outgoing LAN interfaces. 2.This table is initially empty and received packages are flooded on every line. When a bridge receives a frame (as the bridge runs in promiscuous mode it listens in on all the traffic arriving at its LAN links) with source address Q on LAN L, it adds the timestamped entry “Q can be reached over L” to the table and the next time a packet with destination Q arrives, it is forwarded on link L. The time-stamp is used to update or purge old entries. Therefore, it learns by observing the incoming traffic. 3.To do selective forwarding instead of flooding. 4.i)less duplication/unnecessary flooding is prevented. ii)less congestion. iii)better bandwidth usage than flooding.",table holds infromation that a certain address can be reached by a certain LAN. During backwards learning the bridge updates its table by the incoming traffic knowing that the source of the received packet is reachable over the LAN form where the packet came. Look if the address is in the table if yes then send it to the LAN over which it is reachable if not use flooding. No longer need to flood if the path is known. Another one would be that it is a rather simple approach.,"The response answers all the four requirements of the question correctly. Also note that if the source and destination LAN is the same, the packet is dropped.",Correct,1.0,0,0,0.58857465
47f747b961b14b90b27457550dcef882,Transparent bridges manage a bridge table for the forwarding process. Please describe what information the table holds and how it is modified during the backwards learning phase. How is the table used in the forwarding process and what is one benefit of that? Please answer the question in 2-5 sentences.,"1.A mapping between destinations/stations (MACs) and outgoing LAN interfaces. 2.This table is initially empty and received packages are flooded on every line. When a bridge receives a frame (as the bridge runs in promiscuous mode it listens in on all the traffic arriving at its LAN links) with source address Q on LAN L, it adds the timestamped entry “Q can be reached over L” to the table and the next time a packet with destination Q arrives, it is forwarded on link L. The time-stamp is used to update or purge old entries. Therefore, it learns by observing the incoming traffic. 3.To do selective forwarding instead of flooding. 4.i)less duplication/unnecessary flooding is prevented. ii)less congestion. iii)better bandwidth usage than flooding.","The table holds the routing entries to forward packets to their destination. The table is initially empty and will be filled with the information of routes during the backwards learning phase. The table entries will be scanned and updated when receiving frames, thus it will adapt to changes in topology, which is a benefit.","The response does not state which entries are present that are used for forwarding the packets. The backward learning process does not explain which packet information is inspected and used for building the table. The correct benefit is that there is less traffic because of selective forwarding, not just topological change adaption.",Incorrect,0.0,0,0,0.4950546
00e007d8140a41a1b9f9ce9c3a456466,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1. to use temporarily valid TSAPs, TSAP valid for one connection only,but process server addressing method not possible 2. to identify connections individually, each individual connection is assigned a new SeqNo and endsystems remember already assigned SeqNo, but endsystems must be capable of storing this information 3. to identify PDUs individually, individual sequential numbers for each PDU, SeqNo basically never gets reset, but higher usage of bandwidth and memory",The response is correct.,Correct,1.5,1,1,0.8133605
25423917820f4267a5e6ad1ced2d4a8a,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network",Temporarily valid TSAPs Identify connections individually Identify PDUs individually Pros TSAP valid for one connection only each individual connection is assigned a new SeqNo and endsystems remember already assigned SeqNo SeqNo never gets reset Cons server is reached via a designated/known TSAP endsystems must be capable of storing this information higher usage of bandwidth and memory,The response is correct.,Correct,1.5,1,1,0.7905456
fa576afb82964c24834b965e9b8b4194,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1) use a unique TSAP from the beginning till the end of the connection + ensures there won't be problem with misinterpreting connections at the same port - requires large name size of TSAP - practically impossible, because there exist ""well-known"" TSAP that exist always 2) define unique connection sequence number, with end systems also remembering previous sequence numbers + by remembering the previous connections too, the end systems can differentiate all the incoming data - can't work easily for connectionless services - end systems need enough space for storing this information 3) use sequence numbers for packets + you don't need to get bothered for resetting the sequence numbers, because for example (also stated in the lecture), a 48 bit number will practically never reach to an end - however, the bandwidth and the memory you need to send a packet gets increased, because the sequence numbers never get reset and need a number with many digits (e.g. 48 bits)",The response is correct.,Correct,1.5,1,1,0.69511473
d722cab1495148ebbb3485c2d933154e,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1. to use temporarily valid TSAPs adv:simple disadv:may cause some comflict with some ""well-known"" TSAPs 2. to identify connections individually adv: reliable disadv: end systems must be able to store SeqNos 3. to identify PDUs individually: individual seq num for each PDU adv: higher usage of bandwidth and memory disadv: higher cost",The response is correct,Correct,1.5,1,1,0.68886805
8b53925e7cc04964ac94057c747ee970,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1. Use of temporarily valid TSAPs [–] not applicable in most cases as TSAP must be known to address the correct process [+] in case of always changing TSAPs which are known to sender and receiver (i.e. through a known sequence) an attacker has a harder time tracing/interrupting the targeted traffic in case there are multiple senders/receivers 2. Identify connections individually by assigning new SeqNo [–] requires state / storing SeqNo (connection oriented system) [+] easy differentiation of connections 3. Identify PDUs individually with SeqNo's [–] a notion of a ""lifetime"" of a packet in the network is needed [–] higher usage of bandwidth and memory [+] works with connectionless system",The response is correct,Correct,1.5,1,1,0.7572036
0e420f86be8245eeb9c9dccdef0b66f4,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1. to use temporarily valid TSAPs. pro: sure would solve the duplicate problem contra: some servers should be reached through a known TSAP, which should not be discarded after single usage. 2.to identify connections individually pro: better than temporarily valid TSAPs, at least can be used to solve duplicate problem in a connection-oriented system. contra: in a connection-less system it does not work. 3.to identify packets individually pro:solve the duplicate problem with dexterity, man can choose the sequence number range for individual case. contra: the usage of bandwidth and memory will be higher due to the packet sequence number.",The response is correct.,Correct,1.5,1,1,0.71799976
e23a6e87c6a54f06bc39181e2dc0d162,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","Unique TSAP for each connection: + addresses duplicated across connections (e.g. after a crash) - usually limited number of TSAPs - some TSAPs are well known and therefore not usable (e.g. for HTTP)- doesn't address duplicates within the same connection Sequence Number for each connection: + solves problems specific to unique TSAPs - but also doesn't address duplicates within one connection - endsystems need to store sequence numbers, even after switching off Sequence Number for each PDU: + addresses duplicates between and within connections + only need info about last few used SeqNrs - higher usage of bandwidth/memory - have to choose a range for SeqNrs",The response is correct.,Correct,1.5,1,1,0.6611903
95df8c7e73454f28b3347e3ebb873b9d,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network",1. TSAPs Ad: TSAPs only for one connection Dis: process server addressing method not possible 2.identify connections individually Ad:each individual connection has a new Seq Dis: End system will be switched off 3. identify PDUs individually Ad: Seq never gets reset Dis:higher usage of bandwidth and memory,The response is correct,Correct,1.5,1,1,0.73636734
5ed8ede7f3ab461b926b623a78946bf6,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1. to use temporarily valid TSAPs Method: TSAP only valid for one conntection, generates always a new TSAP Advantage: complete unique connection Disadvantage: too many connections will be generated in worst case, in general not always applicable 2. to identify connections individually Method: each individual connection is assigned a new SeqNo Advantage: each connection relies on SeqNo and will be remembered from endsystems because of the assigned SeqNo Disadvantage: endsystem must be capable of storing this information 3. to identify PDUs individually Method: individual sequential numbers for each PDU, SeqNo basically never gets reset Advantage: packets have a ""lifetime"" within the network Disadvantage: higher usage of bandwith and memory",The response is correct,Correct,1.5,1,1,0.8146242
e5ee9787c06b48a6ac36b91ace0758e2,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1)Temporarily valid TSAPs Advantage: Easy to implement Disadvantage: Doesn't work for Connections that use a static and known TSAP.(server addressing) 2)Identifying the connections individually with SeqNo Advantage: Each connection gets its own SeqNo making it unique and easily idnetifiable. Disadvantage: The End Systems has to remember already assigned SeqNo. 3)Identifying the packets individually with SeqNo Advantage: Makes it easy to identify duplicates, as each packet has its own SeqNo. Disadvantage: Requires a lot of bandwidth and memory.",The response is correct.,Correct,1.5,1,1,0.78094995
c3815abdeb2e4cd59345d6d49a7d03db,Discuss 3 methods (each with at least one advantage and disadvantage) that address the problem of duplicate packets on the transport layer in a connection-oriented service.,"1. to use temporarily valid TSAPs -method: -TSAP valid for one connection only -generate always new TSAPs -evaluation -in general not always applicable:-process server addressing method not possible, because -server is reached via a designated/known TSAP - some TSAPs always exist as ""well-known"" 2. to identify connections individually -method: -each individual connection is assigned a new SeqNo and -endsystems remember already assigned SeqNo -evaluation -endsystems must be capable of storing this information -prerequisite: -connection oriented system (what if connection-less?) -endsystems, however, will be switched off and it is necessary that the information is reliably available whenever needed 3. to identify PDUs individually: individual sequential numbers for each PDU -method: -SeqNo basically never gets reset -e.g. 48 bit at 1000 msg/sec: reiteration after 8000 years -evaluation -higher usage of bandwidth and memory -sensible choice of the sequential number range depends on -the packet rate -a packet's probable ""lifetime"" within the network","1. To identify each connection, i.e., Each connection is assigned an unique number and endsystems remember already those number. Pro: + not complicate Con: - endsystems need largememory capacity to save this information. 2. To identify PDUs individually: Assign individual seq number for each PDU. Pro: + higher usage of bandwidth and memory. Con: - hard to choose a suitable sequential number range because of different packet rate and the limited lifetime of a packet within the network. 3. To use temporarily valid TSAPs Pro: + high availiablity Con: - not always applicable , sometimes no possible to address method",The response is correct.,Correct,1.5,1,1,0.6403737
35f08ec0d5d145279ba820b579de6063,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities",I would recommend to use token ring for the following reasons: - As they expect the channel load to be high it is no advised to use CSMA/CD or a variant of it as that will cause a lot of collsions. Whereas token still performs reasonable well during increased utilization - The other requirement is that it should support 20 systems and should be expandable later. Token ring can support a maximum of 250 stations and can be extended with coax or optic fiber later on (for increased transmission rate). One potential weakness is: - As their funding is tight CSMA could still be considered as it is a lot more cost efficient than token ring.,Extendability might be a strong suit but it has its flaws!,Partially correct,3.0,1,1,0.63673687
39f345cfe0d34f13bb6391be4ae55cac,"In the lecture you have learned about congestion control with TCP. Name the 2 phases of congestion control and explain how the Congestion Window (cwnd) and the Slow Start Threshold (ss_thresh) change in each phase (after initialization, where cwnd = 1 and ss_thresh = advertised window size) in 1-4 sentences total.","Slow start: ss_thresh is constant, increment cwnd by one every time a segment is acknowledged until ss_tresh is reached, then slowed increase of cwnd Congestion Avoidance: cwnd is reset to 1 after adjusting ss_tresh = cwnd / 2","The two phases are ""Slow start"" and ""Congestion Avoidance"". To make sure the network is not overloaded immediately, a TCP sender will start to send ""slowly"": First one segment, then as long as the segments get acknowleged double the rate each time, until the ss_thresh value is reached. This means after the first ACK is received, the sender will send two segments at once, then four, eight, etc until the ss_thresh value is reached or no ACK is received. If the ss_thresh value is reached (phase 2) the sender will increase the rate linearly by one each time. If a packet times out the ss_thresh value is set to 50% of the current rate and the cycle is repeated with phase 1.","In the slow start phase, what happens to the cwnd and threshold when the packet is lost before the threshold is reached. This needs to be explicit for both the phases.",Partially correct,0.88,0,0,0.5830087
4c3208bb187f481397a34926f54e65c5,What is the difference between asynchronous and synchronous transmission mode in the Data Link Layer.,"Asynchronous transmission: Every character a self-contained unit surrounded by a start bit and a stop bit, which is an easy and cheap pattern, but causes low transmission rates. Synchronous transmission: Several characters pooled to a continuous stream of data (frames), Frames defined by SYN or flag, higher complexity, but higher transmission rates. Requires synchronization between sender and receiver.","asynchronous: byte- and block-oriented synchronous: character-, count- and bit-oriented","The differences mentioned in the response are incorrect. The correct difference is: In asynchronous transmission, every character unit is surrounded by a start bit and a stop bit. In synchronous transmission, several characters are pooled into a frame.",Incorrect,0.0,0,0,0.5347311
a1214cc1f9ba496a83728c0967ab1f17,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","Yes. When low utilization makes it more likely that the corresponding path is used, the load on this path rises and a state might occur where the routing path starts oscillating. This will lead to inconsistency of the routing table of sender and receiver.",Correct,Correct,1.0,0,0,0.59558564
734ee0b96a6541da91c518db143f3baa,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","During the transmission of the data, the most favorable path could change, causing the second part of the data to take a different path. If the second part of the data arrives at the destination first, the receiver must wait for the second part and arrange the two parts correctly again.",Correct,Correct,1.0,0,0,0.548745
ee6e7073d7c24a2bb95bede53f4aa7f4,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","Ja, da es zu sogenanntem Oszillierendem Verhalten kommen kann wenn die aktuelle Auslastung einer Leitung als Metrik benutzt wird, wodurch permanent die Route gewechselt wird. Dies passiert dadurch das ein Packet über Route X zu G geschickt wird, wodurch die Auslastung dieser Route steigt, was wiederum A dazu animiert eine andere Route zu wählen -> usw.",But why is oscillating a problem?,Partially correct,0.75,0,0,0.22517239
9a4fbd9d9d0941ad8e1181fa49f0e099,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.",One problem can be that the selected path utilized so that it will have to take another path. This path will be longer and will need more traffic.,Correct,Correct,1.0,0,0,0.46728656
977b32d610ff49aabe50cfeb0d77e4c2,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","it certainly could, firstly, evaluating currend load without taking path transfer capacity into consideration could lead to misjudges. Secondly, avoiding certain busy path could lead to more hops, for example, a packet may take the path A-B-D-E-C-F-I-J-H-G, the packet may have avoid a few busy pathway but the total routing time could be longer.",Correct,Correct,1.0,0,0,0.547728
e52b7f8302bb4afe8cad08acfbae796e,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","Nein, denn dies führt zu Schwankungen, wenn es mehr als einen Pfad zwischen einem beliebigen Paar von Endsystemen im Netzwerk gibt. Das bedeutet, dass das Routing instabil ist und es gibt uneffiziente Paketumlagerungen.",Correct,Correct,1.0,0,0,0.21919829
8a62fb50838c4ad79cc9e16dc106b4fb,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","I think the network topology is perfect. Because there so many paths between A and G, A-B-C-F-G, A-E-I-F-G etc. If some paths is fail, the data could through another path to send. But the problem is the right part is a little simple. It's not reliable and steady. It will be better, if there are more connection between G and the other nodes in right part, for example G-I, or G-j.",The question is not about the network topology but about the routing strategy!,Incorrect,0.0,0,0,0.5218698
f43de9e3373e4af89e2db8dc5728c113,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.",A könnte viele packets in einer kurzen Zeit senden und damit G (oder einen der Zwischenknoten) überlasten. Flow control muss also beachtet werden.,But this is not a problem specific for the routing strategy,Partially correct,0.5,0,0,0.28713474
6fe79c2d01194a8cb269f1d2f54bb8f0,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.",It could be a problem that the packets are oscillating. So the packets will never arrive to G.,"Oscillating does not mean, that packets are never arriving in G!",Partially correct,0.5,0,0,0.3916716
abcc8400d43845d2a0d224f3b9929c78,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","Using metrics like load or utilization can lead to 'oscillations' - which means that every time the load or utilization changes, the path taken will change, and the load and utilization will change while packets are being routed.",But why is oscillating a problem?,Partially correct,0.75,0,0,0.57823896
9f3c3451dfe1433ab8b4c522fecdce0e,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","Yes, because the path load is then reduced for the chosen path and if the receiver needs a certain path on which throughput is critical (e.g. G to F), it can not use it properly, because the load is higher at the time of receiving. For example F to G is on the path from A to G, then the load on F to G is reduced at the time of receiving. If at the time of receiving the receiver G wants to send critical data fast to F, it cannot use the path G to F properly and needs maybe to elude to path G to H to F.",Correct,Correct,1.0,0,0,0.5081358
b519f276308344fba72d3e4742750ee1,"Consider the following network topology from the lecture:With routing, we want to find the best path for our packets. For this, we first need to define a metric to evaluate the quality of a path. One possible choice could be the current load (i.e. the current utilization in terms of sent packets/bytes) on this path. Assume that A wants to send data to G, could this routing strategy cause any problems at the receiver end? Please explain your answer in 1-2 sentences.","Yes, using the current load to find the best path can lead to fluctuations/oscillations when there is more than one path between any pair of end systems in the network (here: CF and EI). This can cause packet reorderings at the receiving side.","Yes this strategy could lead to problems as it could lead to oscillations. If there are two possible path (i.e link CF or link EI) the choice of which path to take could flip around as choosing one path increases the load on that path and in return making the other path more favorable increasing the load on this other path, so the decision on which path to take could swap around repeatedly.",But why is oscillating a problem?,Partially correct,0.75,0,0,0.5799616
4802d6cd6f1c4a2b9ae144b4ad3f8414,What are the objectives of IPv6? Please state at least 4 objectives.,"To support billions of end-systems. To reduce routing tables. To simplify protocol processing with Simplified header. To increase security. To support real time data traffic (quality of service). Flow label, traffic class. To provide multicasting. To support mobility (roaming). To be open for change (future): extension headers for additional change incorporation. To coexistence with existing protocols.",more/larger addresses; multicasting; mobility; better security; simplification of the protocol,The response correctly answers objectives of IPv6.,Correct,1.0,0,0,0.5403126
5ca7b44fc77f45a586936e47d7636048,What are the objectives of IPv6? Please state at least 4 objectives.,"To support billions of end-systems. To reduce routing tables. To simplify protocol processing with Simplified header. To increase security. To support real time data traffic (quality of service). Flow label, traffic class. To provide multicasting. To support mobility (roaming). To be open for change (future): extension headers for additional change incorporation. To coexistence with existing protocols.","Here are 5 objectives of the IPv6: -To support billions of End systems (2^128), much more than IPv4 (2^32). -To simplify the protocol. For example, the header of the IPv6 is much simpler than the header of IPv4. -To coexist with the older protocol. For example, thanks to tunneling, IPv6 can coexist with IPv4. -To add more security in the network. -To be open for eventual future evolutions (for example with the extension headers).",The response is correct because all stated objectives of IPv 6 are correct.,Correct,1.0,0,0,0.47002113
068aa7ba40b64beaa24ba5ee36d0adcc,What are the objectives of IPv6? Please state at least 4 objectives.,"To support billions of end-systems. To reduce routing tables. To simplify protocol processing with Simplified header. To increase security. To support real time data traffic (quality of service). Flow label, traffic class. To provide multicasting. To support mobility (roaming). To be open for change (future): extension headers for additional change incorporation. To coexistence with existing protocols.",IPv6 is able to support billions of end-systems because it is using much longer adresses than IPv4. Since IPv4 is still very popular and the internet protocols version can't be switched instantly IPv6 have to coexist with other protocols. The extension headers used by IPv6 enable changes in the future. To simplify protocol processing IPv6 uses simplified headers.,The response is correct as all the IPv6 objectives are completely accurate.,Correct,1.0,0,0,0.4580458
0e2da5ed945141d38a5383ea65a7180a,What are the objectives of IPv6? Please state at least 4 objectives.,"To support billions of end-systems. To reduce routing tables. To simplify protocol processing with Simplified header. To increase security. To support real time data traffic (quality of service). Flow label, traffic class. To provide multicasting. To support mobility (roaming). To be open for change (future): extension headers for additional change incorporation. To coexistence with existing protocols.","1. Enlarge the available address pool: By increasing the IP address length from 32 bits to 128 bits, a greater number of addresses can be assigned to end systems. 2. Simplify protocol processing: Any previous shortcomings in IPv4 can be removed and optimized in IPv6. 3. Provide Multicasting: Packets can now be sent to multiple destination addresses, which makes multicasting possible. 4. Better Security: Security means are already integrated in IPv6.",The response correctly states four objectives of IPv6 with explanations.,Correct,1.0,0,0,0.40288457
15fc35bc40b84666b36ec248279c3581,What are the objectives of IPv6? Please state at least 4 objectives.,"To support billions of end-systems. To reduce routing tables. To simplify protocol processing with Simplified header. To increase security. To support real time data traffic (quality of service). Flow label, traffic class. To provide multicasting. To support mobility (roaming). To be open for change (future): extension headers for additional change incorporation. To coexistence with existing protocols.",-Provide more adresses -simplify protocol processing -be usable while IPv4 is still in use -increase security,All four IPv6 objectives mentioned in the response are completely correct.,Correct,1.0,0,0,0.42945215
fe374dfec2f649368d7cc34e57b23e7b,"What is ""frame bursting""? Also, give 1 advantage and disadvantage compared to the carrier extension.","Frame bursting reduces the overhead for transmitting small frames by concatenating a sequence of multiple frames in one single transmission, without ever releasing control of the channel. Advantage :it is more efficient than carrier extension as single frames not filled up with garbage. Disadvantage :need frames waiting for transmission or buffering and delay of frames",To be able to transmit data over lager distances at higher speed and still avoiding collisions you send bigger sequences by collecting several packets and sending them all together. Advantage: You have a higher efficiency compared to carrier extension. You have a minimum of 70 percent (frame size 64 byte and user data 46 byte) user data compared to a minimum 9 percent of. Disadvantage: You have a delay in time while waiting for other packets until you have collected enough to send.,The response is answering all three parts of the question correctly.,Correct,1.0,0,0,0.4736084
b51a0ae058d74107a8303b5730d76c52,"What is ""frame bursting""? Also, give 1 advantage and disadvantage compared to the carrier extension.","Frame bursting reduces the overhead for transmitting small frames by concatenating a sequence of multiple frames in one single transmission, without ever releasing control of the channel. Advantage :it is more efficient than carrier extension as single frames not filled up with garbage. Disadvantage :need frames waiting for transmission or buffering and delay of frames","The sender buffers a number of frames and concatenates them, so they can be sent in a single transmission. The disadvantage is, that the end-to-end delay is increased, because the sender buffers the frames instead of sending them out as soon as they are created. The advantage is that no ""rubbish"" data has to be sent, like with carrier extension, so the data efficiency is much higher.","The response correctly answers all three parts, the frame bursting definition, its advantage and disadvantage.",Correct,1.0,0,0,0.58555317
30cf1d8d5dc54360a3e64cac3bb35941,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),xxx.xxx.xxx.0 xxx.xxx.xxx.255,Missing: LoopbackNetwork and Broadcast are x.0.0.0 and x.255.255.255 with x between 0 and 127,Incorrect,0.0,0,0,0.15224278
e55dc52646b24861bf1f92634c6c9777,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),0.x.x.x -> network address 127.x.x.x -> Loopback (x.0.0.0 -> Gateway in all Types of network) (x.255.255.255 -> Broadcast in all Types of network),Correct,Correct,0.5,0,0,0.5356401
a2d53b7213c643f99d773718d0b3c253,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),"Class A contains all IP addresses with first octet from 0 to 127 (IP address format is octet1.octet2.octet3.octet4) According to slide 45 of Internet Protocols: Addresses in range 127.0.0.0 to 127.255.255.255 are reserved, because they are used for loopback testing. Addresses in range 0.0.0.0 to 0.255.255.255 are reserved, because they refer to hosts of the current network. (So, excluding these 2 groups, each network with starting octet X, 0<X<127 of Class A has address X.0.0.0 for the network, X.255.255.255 for broadcasting and the rest addresses between these 2 for hosts).",Correct,Correct,0.5,0,0,0.5266901
27fef14816334f60884ba5b6655082e7,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),(0.0.0.0/8 Depends if 0 is countes as a class A network): Current Network 10.0.0.0/8: Private networks 127.0.0.0/8: Loopback Quelle: RFC 5735,Correct,Correct,0.5,0,0,0.48902273
7d6e69ce3bbc40feb3dffbdd9b8cfb81,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),0.0.0.0 to 0.255.255.255 10.0.0.0 to 10.255.255.255 127.0.0.0 to 127.255.255.255,Correct,Correct,0.5,0,0,0.23869276
19adc8612d374467bf857c5b8ebf07bd,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),0.0.0.0/8: current network adresses 127.0.0.0/8: loopback adresses,Correct,Correct,0.5,0,0,0.35782617
685a888ecb2543beb70144ecd3c41a24,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),10.0.0.0 - 10.255.255.255172.16.0.0 - 172.31.255.255127.0.0.0 - 127.255.255.255,172.x.y.z is not in Class A anymore,Partially correct,0.25,0,0,0.19190854
09b65d0c0ece4515b1ffa27036ce3ca1,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),0.0.0.0 to 0.255.255.255: current network 127.0.0.0 to 127.255.255.255: loopback adresses,Correct,Correct,0.5,0,0,0.4027818
d2e912872ef24e8a8f24b133361c8eaf,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),127.255.255.255 (Broadcast) 1.0.0.0 to 126.0.0.0 (Network ID),"Please watch your notation: 1.0.0.0 - 126.0.0.0 does not mean, only addresses with .0.0.0, but every address in this range, for example 13.8.255.4, tooBroadcast is x.255.255.255 with x between 0 and 127Missing: Loopback",Incorrect,0.0,0,0,0.40065816
7533404600ce43549f5e89a6e412effb,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),127.X.X.X (127.0.0.0～127.255.255.255),Correct,Correct,0.5,0,0,0.3227319
0eded6d918f94287ae0a1da94abaed5b,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),10.0.0.0 bis 10.255.255.255 private netze,Missing: Loopback,Partially correct,0.25,0,0,0.4044891
a430d8c276534b3c9732f5d7228c26af,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),Network Addresses: [0-127].0.0.0 Broadcast Addresses: [0-127].255.255.255,Missing: Loopback,Partially correct,0.25,0,0,0.44978085
ec44176ed8854a2bbfcfb170a5413969,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),"Just to note: originally I understood the task to mean reserved addresses within the network (i.e. concerning the host part), but then there was an official statement in the forum that the network part was meant. If it is indeed the host part, then *.0.0.0 and *.255.255.255 would be reserved within each Class A network. Reserved addresses in Class A networks: 0.0.0.0 - 0.255.255.255 (host at this network)10.0.0.0 - 10.255.255.255 (Class A private network range)127.0.0.0 - 127.255.255.255 (local host)",Correct,Correct,0.5,0,0,0.54315215
7678409f55594442991350d8cf6d149c,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),from 0.0.0.0 to 127.255.255.255,Not all addresses in Class A are reserved,Incorrect,0.0,0,0,0.29961592
1758098f23c44449a54c33c026091622,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),IP Ranges: 0.0.0.0 - 0.255.255.255 127.0.0.0 - 127.255.255.255,Correct,Correct,0.5,0,0,0.48379126
7e09091a6fd94bb4b0d8e2f282032e73,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),127.0.0.0~127.255.255.255,Correct,Correct,0.5,0,0,0.34531942
c351b68c5a18403eaf08a5869bd891b1,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),"0.0.0.0-0.255.255.255 10.0.0.0-10.255.255.255, 100.64.0.0-100.127.255.255 127.0.0.0-127.255.255.255,",Correct,Correct,0.5,0,0,0.17627467
ae8d3e3dba054d43a74497e83751e35e,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),"All 0 -> 0-127.0.0.0: Network Address (or excluding 0.0.0.0 and 127.0.0.0 in respect to reserved addresses according the IETF Special-Purpose IP Address Registries from RFC 6890) All 1 -> 0-127.255.255.255: Broadcast Address (or excluding 0.255.255.255 and 127.255.255.255 in respect to reserved addresses according the IETF Special-Purpose IP Address Registries from RFC 6890) Additionally the following Class A Network (Parts) are reserved according to RFC 6890 https://datatracker.ietf.org/doc/html/rfc6890#section-2.2.2 127.0.0.0/8 loopback adresses 10.0.0.0/8 Private-Use 0.0.0.0/8 ""This host on this network"" 100.64.0.0/10 Shared Address Space",Correct,Correct,0.5,0,0,0.5049016
efac355536c54fd5b24e27e6da35f850,Write-down all addresses in Class A networks that are reserved.,126 Class A nets can be addressed in classful IP addressing (1.xx.yy.zz - 126.xx.yy.zz) 127.xx.yy.zz is reserved for loopback testing 0.xx.yy.zz can be accepted if stated accordingly (definitions defer whether this is in Class A),For each of the 2^7 = 128 networks the first and the last address are reserved. - Network address (all zeros) - Broadcast address (all ones),Missing: Loopback,Partially correct,0.25,0,0,0.46284035
1c8af18448da49ab8f466a5e28c81cd7,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1:(A, B, forward)(A, C, forward)(A, D, drop) // C and F do both not send packets to A over D Hop 2:(B, E, forward)(C, F, drop) // E and G do both not send packets to A over D Hop 3:(E, G, forward)Hop 4:(G, H, drop) // no destination other than G is left for H",The response is correct.,Correct,2.5,1,1,0.7752203
87ebea20f832442a92639697dbac1ab6,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A, B, forward), (A, C, forward), (A, D, forward) Hop 2: (B, E, forward) (C ,F, forward) Hop 3: (E, G, forward) Hop 4: (G, H, forward)","Packets will be considered dropped if it is not forwarded further by the receiver node.(-0.75 for reasoning (A,D, drop), (C, F, drop) and (G, H, drop) .",Partially correct,1.75,1,1,0.64285004
31653180a8714c98ac4491d909505e06,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A, B, forward) (A, C, forward) (A, D, drop) <= D can't forward packet further because costs would be higher than on other routes Hop 2: (B, E, forward) (C, F, drop) <= F can't forward packet further because costs would be higher than on other routes Hop 3: (E, G, forward) Hop 4: (G, H, drop) <= H can't forward packet further, no further nodes there",The response is correct.,Correct,2.5,1,1,0.69689023
99b483a54ae14b6ab2d0119a4806776b,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A, B, forward) (A, C, forward) (A, D, drop) because A sends to D, but D doesn't forward anywhere else (neither to C or F, because those nodes are reached over other links) Hop 2: (B, E, forward) (C, F, drop) because F won't forward the packet anywhere else (F / E / G, because those nodes are ) Hop 3: (E, G, forward) Hop 4: (G, H, drop) because H is only connected to G and receives the packet from G, so it doesn't need to forward it anywhere else",The response is correct.,Correct,2.5,1,1,0.8198279
5b68249deb784b7f9d8eab2069fed07c,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A, B, forward) (A, C, forward) (A, D, drop): Because D recognize that F and C won't receive packets via D. Hop 2: (B, E, forward) (C, F, drop): Because F recognize that E,D and G won't receive packets via F. Hop 3: (E, G, forward) Hop 4: (G, H, drop): There is only one possibility for H to receive the packet (via G ) and it can't be send it anywhere else.",The response is correct.,Correct,2.5,1,1,0.74063855
b7400185afd94f8cbf01c2f329a467e9,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop1: (A, B, forward) (A, C, forward) (A, D, drop) // D will receive the packet and won't forward it Hop 2: (B, E, forward) (C, F, drop) // F will receive the packet and won't forward it Hop 3: (E, G, forward) Hop 4: (G, H, drop) // H will receive the packet and won't forward it","The reason should explain why it is not forwarded, for example, (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A.  For (G,H,drop), it has no other neighbor",Partially correct,2.0,1,1,0.7165632
6b26ecb4abba4853bd60baf4308116e4,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A,C,forward)(A,B,forward)(A,D,forward) Hop 2: (B,E,forward)(C,F,forward) Hop 3: (E,G,forward) Hop 4: (G,H,drop) => dropped because the package arrived from the port with shortest path to S but there is no other port to forward the package to.","Packets will be considered dropped if it is not forwarded further by the receiver node.(-0.5 for reasoning (A,D, drop), (C, F, drop) ).",Partially correct,2.0,1,1,0.6525475
7bf37f373a0340e5830fded62a295f9a,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop1 (A,B, forward) (A,C, forward) (A,D, forward) Hop2 (B,E,forward) (C,F,forward) Hop3 (E,G,forward) Hop4 (G,H,forward)","In  RFB, (A,D, drop) and subsequent flow will change accordingly. Also (C, F, drop) and (G, H, drop) will occur. Please consult the model solution.",Partially correct,1.5,1,1,0.6233492
ab6e09685e35475b86d2c2bb6c1e60e6,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1 (A, B, forward) (A, C, forward) (A, D, forward) Hop 2 (B, E, forward) (C, F, forward) Hop 3 (E, G, forward) Hop 4 (G, H, forward)","Packets will be considered dropped if it is not forwarded further by the receiver node.(-0.75 for reasoning (A,D, drop), (C, F, drop) and (G, H, drop) ).",Partially correct,1.75,1,1,0.6349907
088c16c3e31c45d0b54b22585ce56063,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A, B, forward) (A, C, forward) (A, D, drop) <= There is no edge over which it is the best route to send packets over D to A Hop 2: (B, E, forward) (C, F, drop) <= There is no edge over which it is the best route to send packets over F to A Hop 3: (E, G, foward) Hop 4: (G, H, drop) <= H does not have any other neighbor to send the packet to",The response is correct.,Correct,2.5,1,1,0.76873326
1cc46e82e9e3414095585aabfa39689b,What are extension headers in IPv6 and where are they located in a packet? What is the main advantage of extension headers compared to IPv4?,"Extension headers are used to extend the fixed IPv6 header with additional, optional network layer information. If present, they are located between the fixed header/main header and payload/upper-layer header/ transport-layer header. Main advantage: One of the following advantages are considered fully correct: 1. It allows the appending of new options without changing the header. 2. IPv6 packets with optional headers are typically processed faster/simpler by intermediate devices as most of the options are ignored (except “Hop-by-Hop Extension”) while they are processed by all routers in IPv4 unless ordered otherwise.",Extension headers are optional headers that can augment the main header. They are located between the main header and the payload. Their main advantages are that they cause less overhead since they can be omitted if not needed and that new headers can be added in the future.,"The response answers the description and location of extension headers correctly. As even the option field in the IPv4 header is optional and could be 0 bits long, there is no added advantage over the IPv4 option field in terms of unnecessary overhead. The other advantage is correct.",Partially correct,0.75,0,0,0.58950335
ec9d5d69e13e45b68381315abf9a8479,WHICH PROPERTY of spanning trees makes them appealing for broad- and multicasting? EXPLAIN how you can modify Link State Routing to construct a spanning tree for multicasting.,"Property: There is a single unique path between every pair of nodes in the tree. Alternatively, you can say that spanning trees are subnets of a network that do not contain loops but contain all nodes. This means that no unnecessary duplicates are distributed in the network when forwarding packets using that tree structure. Spanning Tree with Link State Routing: Each intermediate system knows which multicast groups it belongs to, but initially doesn’t know which other IS belong to the groups. Therefore, you can add multicast group information to the link state packet and each node can construct multicast trees once the full network topology and group information are distributed in the whole network, as each node then has the complete state information stored locally (e.g. with Prim or Kruskal)",1. There is no loop,"The response lacks the explanation of the link state's modification to construct spanning trees. To calculate the spanning trees for multicasting, you also have to know which nodes belong to which groups. The link-state packets have to be expanded with multicast group information so other nodes can construct multicast trees by themselves.",Partially correct,0.5,0,0,0.17227788
046864f20b2346409a823479c57ed4a3,Name the 3 service classes the Data Link Layer offers and explain the differences between the classes.,"1.unconfirmed connectionless - no ACK, loss of data possible, no flow control, no connect or disconnect. 2.confirmed connectionless - with ACK, no loss of data (timeout and retransmit instead→ duplicates and sequence errors possible), no flow control, no connect or disconnect. 3.connection-oriented - no data loss, duplication or sequencing errors. Instead a 3 phased communication with connect and disconnect, and flow control","The 3 service classes are: Unconfirmed connectionless service (1), Confirmed connectionless service (2) and Connection-oriented service (3). The main difference between this services is the handling of the loss. While in (1) data packets are only send to the receiver, packets can get lost and loss is not being corrected. In service (2) data packets has to be acknowledged by the receiver and packets will be resend after a certain timeout. This leads to inefficient communication and can be done on a higher level. Service (3) consists of 3 phases (Connection establishment, data transfer, Disconnect). Just like in service (2) we have no loss, but Flow Control is possible in contrast to services (2) and (1).",The response answers the services' names and differences correctly.,Correct,1.0,0,0,0.49720094
5634bcd481474cf3ad93fc38b0efba31,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"Before sending data from Node A to Node B, A has to reserve a frame in the bus where A comes after B. Outer nodes are restricted to sending only in one direction, while nodes in the middle may make reservations in both directions and thus have a higher chance to get a reservation.","The response is partially correct as the nodes located close to the generator have a higher chance of getting a reservation rather than the ""middle"" node. So unidirectional or bidirectional alone does not decide fairness.",Partially correct,0.5,0,0,0.4728441
83d72740e0cd4a73b5b3245e67f46114,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"The problem with DQDB is that if we have several participants in the network and they want to exchange data, the distance between them and the propagation delay causes a fairness issue. This is because when stations are closer together, they can communicate over the bus faster than stations further away, this would still be acceptable for normal data packets, but network control packets are also sent over the bus and so network changes can spread much slower than in other architectures.",The response correctly states the fairness issue in DQDB and also provides an appropriate reason for it.,Correct,1.0,0,0,0.48137563
bafcedfaaa274543a669ca42dd9473c6,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"The problem with DQDB is that there is a difference in fairness depending on the location, as not everyone has the same access to data.",The response correctly identifies the fairness issue in DQDB which is due to the location of station.,Correct,1.0,0,0,0.3749742
8299940c5d894ef6be2d55097d49d953,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"The problem with the “Distributed Queue Dual Buses” is that it does not ensure fairness. The location of the node has an influence on its likelihood of gaining access to the data or acquiring the right to send, which results in an inequality between the nodes. At the beginning of a bus all frames generated by the frame generator are empty. So the first node can reserve however many frames it wants. At the end of the bus it can happen that all frames are already reserved so the last nodes may not be able to send anything.",The response is correct as it correctly explains the fairness problem with Distributed Queue Dual Buses.,Correct,1.0,0,0,0.4735896
c86fc1493d724e759af520ce0a9895af,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,The Distributed Queue Dual Bus (DQDB) architecture uses two unidirectional buses for sending and receiving data. The main challenge here ist to guarentee fairness between all participating nodes as different nodes may have advantages (if at the beginning of the bus) or disadvantages (if at the end of the bus) in write access depending on their position in the bus.,The response correctly states and explains the fairness problem of reserving transmission right in DQDB.,Correct,1.0,0,0,0.5450427
0156bb098aa841f199053d2f19a157e9,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"Depending on the stations location in the network, they might be able to more easily reserve bandwidth on the BUS for sending data. Stations which are farther back will have less opportunities for reserving a BUS than stations at the front. This can be fixed by introducing some formulas describing how often each station can reserve a BUS.",The response is correct as it correctly states the issue with Distributed Queue Dual Buses.,Correct,1.0,0,0,0.5662335
bc31ae67273d4b01937cec7ed7d6de57,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,The problem that was discussed in the lecture is fairness. The nodes reserve slots on one bus and send on the other bus. One node might reserve a lot of the available slots which makes it hard for the following nodes to reserve the space they need.,The response correctly identifies the problem associated with Distributed Queue Dual Buses based on the station location.,Correct,1.0,0,0,0.4933422
27347428ce4c4a2fa1a3976a5e9ce2b3,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"The problem with DQDB Architecture is that the waiting time for a node to be allowed to send is heavily dependant on its location in the queue.If you are location on any far end of a bus (extrem right or extrem left) then you will have to wait the most before you can send, if you want to send in the opposite direction.",The response correctly explains the fairness problem with Distributed Queue Dual Buses.,Correct,1.0,0,0,0.39888114
2319ca9ff4794ed3b5972826def38e60,"Please explain the problem with ""Distributed Queue Dual Buses"" that was discussed in the lecture in 1-3 sentences.",Depending on your position in the bus station have a disadvantage/advantage when reserving transmission rights.,"Distributed Queue Dual Buses = 2 buses (transfer data in opposing directions), every node connected to both buses Distributed Queue Dual Buses is an architecture whereby every node is connected to 2 buses (write and read access). These buses are responsible for data transmission in opposing directions. The problem is because of transmission of data: Both buses are connected to a frame generator which generate a fixed size frame every 125 milliseconds. Depending on the position of the nodes in the bus they can reserve the bus for sending data with a higher probability. E.g. for a node in the middle we have a probability of 50% to successfully reserve a bus. As a consequence, fairness is a problem due to the bus topology: Depending on the position of the node the node may be more or less successful in reserving a bus for data transmission.",The response correctly explains the fairness problem of reserving transmission rights in DQDB.,Correct,1.0,0,0,0.47308433
a6a838beab144ea4a78fca00d53d7fee,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"The receiver cant differentiate between a new correct package or an ""old"" duplicated package, which leads to multiple data processing.",The response is correct.,Correct,0.5,0,0,0.56642365
9bb4a26854b74f7b9549f74c7b8c046e,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"The duplicate packets reduce effective tool bandwidth, waste tool processing power, and consume tool storage capacity, reducing their effectiveness.",The response is correct.,Correct,0.5,0,0,0.49932724
c56412c2ff7a44328d5f56be3b219a53,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"The receiver does not know which ""data"" it should use and will probably re-execute the transfer, which could lead to more network traffic.",The response is correct.,Correct,0.5,0,0,0.5853802
1a0ef9584fb6475ba9c7e7067924453c,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,The receiver cannot differential between the correct date and the duplicated date.,The response is correct. The response can also state what will be the consequence in such a scenario.,Correct,0.5,0,0,0.44611138
032cfd7372b94561b21e08618bef14a4,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"Yes because the receiver will think they are different and process them multiple times, which leads to unexpected result.",The response is correct.,Correct,0.5,0,0,0.5747617
e01360ebc96748e499e02ef99ee129bb,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,Besides increasing the traffic load duplicates can cause unwanted behavior when not handled properly.,The response is correct.,Correct,0.5,0,0,0.51919186
00f4bbf4e7c34628bb783fb468d1e0b9,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"Network has varying transit times for packets, certain loss rate and storage capabilities, as well as packets can be manipulated, duplicated by flooding and resent by the original system after timeout.",The response is not precise about the problem or consequences caused when duplicates are present.,Partially correct,0.25,0,0,0.513221
b26aa057fbf3449a8e46f6c74fb0045d,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"Duplicates of packages could lead to the reinitiation of a transaction, which was already considered finished by one part of the communicating party.",The response is correct.,Correct,0.5,0,0,0.4664781
fc4af0675355436888dc0402a086eaa7,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"Wenn der Empfänger nicht in der Lage ist, zwischen gültigen und duplizierten Paketen zu unterscheidenkann er auf dieselbe Information zweimal reagieren.",The response is correct.,Correct,0.5,0,0,0.14487028
fd160d45b5c94dd78d12dbeec113c05f,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,"If people doesn't use additional infomation to identify the packes, receiver cannot distinguish the first arrived packet and later pulicate packet, then it would re-execute the transaction.",The response is correct,Correct,0.5,0,0,0.5699802
ca47bd5a6ede472d81c4aa8284a9ad04,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","In the class we learned about two control plane distributions, the first one being replication and the second partitioning. The first relays on the dealing with failures, if the primary server fails, the secondary, also called slave, will take over. A downside of this is that the secondary is just there for back up, it won't “help” the primary as a peer in order to support large-scale deployment. Then the partitioning is quite the opposite. We have two different servers with their own partitions, they are peers (coordinated and consistent) and have knowledge about their neighborhood. The downside of it, is that if one of the servers fails, it doesn't have a backup like in the first case.",The response correctly identifies the two modes and their drawbacks. Note that coordination and consistency are requirements in partitioning mode.,Correct,1.0,0,0,0.59484136
f6e714a3700e44c38fc13658e943f778,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","- Replication: Holding a backup to take over if the master (primary) is not available. However, this is not an efficient way to use resources. - Partitioning: Large networks can be supported more easily while using resources efficiently. However, coordination and consistency have to be managed (creating overhead) and typical P2P issues arise.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5418715
45ce57811e8e43c089745990ef2880fa,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The first mode is Replication. Here, a master/slave architecture is used where one server in the network is the master and the switches act as its slaves. It comes with the drawback that this server might be a single point of failure. However, a secondary master can be used in the network but this can require some overhead in order to be started up. The second mode is Partition. Here, several servers in the network divide their payload of switches they are responsible for. It comes with the drawback that there needs to be additional coordination by these servers in order to make the network reliable.","The downside of the replication mode is incorrect as the slaves are the replicated servers, not the switches and it results in wastage of resources. Apart from that, the response is incorrect.",Partially correct,0.75,0,0,0.4911947
1fdafd8fe28e4d6bb58f07870418137c,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication and Partitioning. In replication, as long as the primary controller is running, the secondary controller is on standby and not being used. In partitioning the coordination between the controllers has to be managed to make sure they have the same and consistent view of the network.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.4775824
a906aab2b07144f69a7e7ecaf5b34875,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Reactive Routing: A lot of requests will be made to the controller (and control network), because of every unknown destination will result in a controller request. Proactive Routing: Flow tables in switches/routers may be very big, while the size is limited this can result in problems.",The response is not related to the question. The two modes are replication and partitioning.,Incorrect,0.0,0,0,0.3437786
3c3612fd3c2c45c9bd6a9d5a1f69692a,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",There is Proactive and Reactive Routing. Disadvantage of the proactive routing is that it occupies space in the flow table even when there is no traffic over that proactive defined route. This is bad because there is only a limited size for the table. Disadvantage of the reactive routing is that there is an delay at the first package because the rout needs to be established. Problem with connection-less protocol can send at full speed instantly without warning.,The response is not related to the question. The two modes are replication and partitioning.,Incorrect,0.0,0,0,0.23823535
3c3b35644b9746e8bb41446c4e0adfd3,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication: Double the cost of building and maintaining a single controller. Partitioning: The different parts of the controller must coordinate with each other like in peer to peer networks which could reduce speed or consistency.,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5345731
5ad6529095e14126bea060a6ac52677a,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication needs more hardware than needed most of the time. Only if the primary hardware fails, the secondary is needed. Partitioning needs coordination between the partitions. This increases the complexity and results in overhead.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.46995044
91a2bbe779ae4cefa1a557d1f78e1654,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","- Replication : In the implemented OpenFlow standard, which are located in the interface of a single switch, there are no aspects of the control plance distribution defined. - Partitioning: The same issues of P2P networks may occur, so the knlowledge of the neighbourhood are necessary or coordination and consistency need to be maintained.",": OpenFlow is just an instantiation of SDN, as there are many existing and under-development southbound APIs. Additionally, OpenFlow offers replication functionality. Therefore, the stated replication drawback is incorrect. Partitioning has similar issues as peer-to-peer networks, that is correct. However, coordination and consistency are always needed in partitioning.",Partially correct,0.5,0,0,0.5361734
0bb974b70c5843659263aa2760e6a159,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication: All communication goes to one primary controller and in case of a crash there exists a secondary redundant controller as a backup controller. Drawback: wasting of (unused) resources as the secondary controller is on standby for most of the time Partitioning: Different controllers control different parts of the network. Drawback: coordination between the controllers i.a. to maintain consistency, is needed",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.52257377
93062e982a424e2180c5981720ad0d15,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","- Distributed routing The network needs time to converge to the optimum due to its distributed way, so there is a lower resource utilization. - Centralized routing If the centralized entity fails, the whole system and network fails.",The response is not related to the question. The two modes are replication and partitioning.,Incorrect,0.0,0,0,0.33429685
d10fac7e895c4fdda8dfc1b538bea86b,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","- Replication: waste of resources ‘only’ for fault tolerance - Partitioning: requires knowledge about neighbors, coordination and consistency",The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.55415535
5551a2dfa24a4d9db7d81bd8470c5969,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication --> Larger networks are harder to manage, because there is only one active (primary) controller. Partitioning --> Drawback: different controllers have to be coordinated to generate a consistent view of the network.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5107773
a6ab7dc89b28485188824b4f7e4ab2b3,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The first mode is called replication, in which multiple control plane hosts are available but only one acts, while the others stand by and only come into action if the primary acting host fails. This has the downside that it is inefficient, as the secondary hosts do nothing at all unless the primary fails. The second mode is called partitioning, in which the data plane is divided into distributions, which are controlled by their unique control plane host separately. It has the downside that it raises challenges of implementation, as each host needs to coordinate with other hosts on the network and need to have knowledge about the neighbourhood in some way.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5591736
808395c4da3741858edee185fe51c0fc,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Two modes are: 1. replication:In this we have problem of scaling 2.partitioning: it Raises issues of coordination and consistency,The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.55898815
8445cedf67a74fd49a0e85184934ecfb,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The first mode is called replication. A downside here is the redundancy caused by the copied control logic of the slave controller nodes resulting in more memory needed. The second mode is called partitioning. The control logic is split up into several parts which need to be coordinated, adding more complexity to the control plane.",The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.53208065
1b05c3bf154d4e1bbfe528d9f159fa68,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","1. Replication In this mode, SDN controllers are parallel with each other. If one controller is penetrated by eavesdropper, the whole information of the network structrue can be leaked, because a single controller knows how the network is constructed, which router links to whom and information like this. 2. Partitioning In this mode, each SDN controller links to some but not all of the routers. Therefore if one controller is down, the routers that it links to will be unreachable.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.3797939
8fa09ca123af470a8c120dd57668ede3,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication with a hot standby may have consistency issues due to synchronization between both API nodes/clusters. Partitioning doesn't has consistency issues, but suffers availability problems, since not every node/cluster has all data available. This leads to higher latency for API calls.","Partitioning mode also needs to take care of consistency, namely that the data remains consistent with the neighbouring controllers. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.43522385
301881b6298f4ebf8e94dff011106564,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Mode 1 - Replication: One primary controller handles all the control logic for the switches, while backup-switches are on standby. Downside: High load on controller, and if it fails, the backup has to get all the information. Mode 2 - Partition: The control of switches is separated to N controllers, each controlling separate sets of switches. Downside: A lot of coordination between switches, if one fails, the whole part of the network fails.","There is coordination between different controllers, not switches, in the partition mode. Additionally, if a controller responsible for a part of the network fails, only that part of the network is paralyzed. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.49376795
fb78eacc3e584b65828b676358523c7b,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication - requires maintenance of additional resources, in case they are required (redundancy). Partitioning - work is required to maintain coordination between the partitioned control panes.",The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.56071836
2122989d7b4d494695dd70c9538b3a7e,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",The two modes are replication mode and partitioning mode. Downside of replication mode: Consistency issues when switching from primary to secondary controller if the last synchronization between them was too long ago. Downside of partitioning mode: Coordination between controllers and assigning controllers to data plane devices causes extra overhead.,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.55903876
eb0d7653ae19483e87881db4867123b8,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Two modes of control plane distribution: [1] Distributed Routing. Downside: It requires time to converge to optimum route with lower resource utilization. [2] Logically Centralized Routing. Downside: Added extra redundancy through controllers - challenges with load distribution between controller instances,The response is not related to the question. The two modes are replication and partitioning.,Incorrect,0.0,0,0,0.507722
c1fb3368986441b5b95f6ff7acab921c,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","1. Replication: This mode is using two different control plane instances, a primary one (= „master“) and a secondary one (= „slave“) which is on standby. In case of the Master‘s failure and only in that case, the Slave will take over. So one of the main downsides is the resource-wasting of the secondary control plane instance because it is mostly running on standby. 2. Partitioning: In this mode the control plane is split in two parts. Both of them are working together and coordinating their actions. So in case of failure of one of these two control plane instances, there will be problems. That’s why one of the downsides of this network is the low robustness.",The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.5963949
8b7c07e6e36c4d95ab0a20b6aa995c2b,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication Partitioning Downside of Replication : a downtime may happen during the turn over (when the master fails and the slave takes over) Downside of Partitioning: it can lead to inconsistency if the coordination is mixed up,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.49851105
ed961fb4ffe74207b9671c2c1f79450e,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Physically distributed controller: Has the downside that no standard way of distribution is defined. Logical centralization: Makes the implementation of the controller hard.,The response is not related to the question. The two modes are replication and partitioning.,Incorrect,0.0,0,0,0.4471513
3aad9c8144df420888932211629b1bc6,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",• Replication (Downside: you need to have more connections) • Partitioning (Downside: not completely redundant),"In the partitioning downside, the actual drawback is availability because there is no redundancy. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.5595542
c1990c5ae24e47c49cf573d73974dece,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication Partitioning,Only the modes' names are mentioned with no downsides.,Partially correct,0.5,0,0,0.48757607
cbcab50957f745b8859dc5ea39f4b208,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication - master and slave have to be synchronized all time, hight data traffic Partitioning - no backup if one controller dies",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.4308347
b06e477e1aa94aa694564f26b42352de,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication Bad scalability because each connection has to be doubled for each replication without providing better control over a large network. Partitioning Servers need to coordinate with each other which leads to similar problems like in P2P.,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.49821448
3d6afa40095e4481a91df2b49676d044,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",We can choose between the mode of Replication and the mode of Partitioning. Replication has the downside of requiring more resources than other strategies. Partitioning on the other hand has additional overhead of coordination and consistency.,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5209433
8767bed0ec3e4b29bf9fca04abc704fc,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","- Replication (waste of resources ‘only’ for fault tolerance) - Partitioning (requires knowledge about neighbors, coordination and consistency)",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5842098
9d088423151742ba96429b0bf72ed38a,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",The control plane can be distibuted or centralized. Distributed needs multiple steps to converge to a perfect solution. Centralized needs to share the path with the router.,The response is not related to the question. The two modes are replication and partitioning.,Incorrect,0.0,0,0,0.526059
f87925914d4b4dfba326fcad26dcd7cb,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",The two modes are replication with the downside redundancy and partitioning with the downside of coordination between the different parts.,"In replication, redundant nodes exist, but the response does not clarify how this can be a downside. Apart from that, the response is correct.",Correct,0.75,0,0,0.54348934
b8bb2b9157864004ac1969301124828d,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication: Wastes control logic computation power, because one controller is only used for backup. Partitioning: Needs some kind of coordination to agree on what is a valid data set.",The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.51645887
ab29b650ce0e4c4bb47ac7214ea636b7,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",- Replication - Partitioning one downside of Replicating: Poor performance one downside of partitioning: Raises issues similar to P2P networks In large-scale deployment,"The downside of replication is incomplete because it does not explain how replication reduces the overall performance. There can be many reasons for poor performance such as the continuous update of redundant controllers with no immediate advantage. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.57366186
b0abdcbb766e4af09f14a15970734a21,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","1. Replication (One Master and one slave on standby) Drawback: You need to install at least double the hardware than actually required, because Master AND Slave must be capable of managing the network on their own 2. Partitioning Drawback: Coordination and Consistency overhead between the controllers.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.550809
0799c3d30deb4497aea436d2b5018c92,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Repliaction: Ressource heavy Paritioning: Common P2P Problems,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.49021268
b1a8bc73e0324e92ad6d832412fdbbb6,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication: - Downside: The replicas always have to be synchronized even though the slave is not active, so that it can intervene if necessary Partitioning: - Downside: The coordination overhead is larger and it is harder to establish a high availability because there is no backup.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5075901
3924281d7c8f4c7f8356832b538952b6,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication: every replica is on standby until the master shuts down/has some sort of problem - every replica on standby is unused hardware. Partitioning: additional overhead, because the controllers have to communicate with each other.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.4908614
0f41b7e6a06f42e2a7e80f3056aa847d,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Partitioning: One has to deal with coordination between the parts Replication: problem: keep synchronization and consistency and who of the parts are the master and who are the slaves (especially with regard to OpenFlow standards which allows connections from switch to multiple controllers),The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.47529602
d799ea5e24b3412e977aab9d5c58a80d,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication: Allows for global view onto the system. Partitioning:No standard way of distribution defined.,"The stated downside of replication mode is a benefit, not a downside. The question expects the general drawback related to partitioning, like peer to peer network problems. Apart from that, the response is correct.",Partially correct,0.5,0,0,0.48772937
e7f50f5b0a6948ae98aa6f5b6aa88d8d,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The controlers can be distributed with Replication or Partitioning. The replication again needs a reliable master, the partitioning has the problem that it needs to know its neighbors.","Replication provides reliability, so it is not a downside of it. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.57845694
fbd9eb7afddf4688b91d4d0a3a6eecb9,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication and Partitioning. Downside of Partitioning is, that it Raises Issues similar to P2P Networks, in that it needs an own protocol for communication just between the controllers. The Downside oder Replication is, that you essentially need to have multiple sets of the same Hardware, which doesnt increase the computing power, but is just for the case that the master system fails.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5057274
bb9a1a0700cc4802860bcd3143140a41,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","1. Replication: there are multiple copies of the routing tables and we have to keep them consistent and that might become a problem. 2. Partitioning: it supports large-scale deployment however it raises issues similar to P2P networks such as the need for knowledge about neighborhood, coordination, and consistency assurance.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5053003
677fd7276a3847b4967b5dd65f855016,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The two modes are (along with one downside each): Replication: The secondary SDN controller is only used once the primary one fails, before that it's idling and not being used at all. This introduces redundancy, which reduces the maximum possible network performance. It also adds cost to the network. Partitioning: There are networking issues similar to a peer-to-peer network (routing, reliability). If one of the SDN controllers should fail, part of the network won't be managed/controlled anymore and will most likely stop working, so the reliability is relatively low.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.4655605
27daef37e6ec47ee937b4d1d985887d3,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication : In case of this mode, if the master fails then the control can be taken over by a secondary. The downside is over-provisioning as we need to make sure the secondary is always available and that can be connected to when the master fails by replicating the master controls. Partitioning : In this mode the load is divided by two separate controllers. The problem is the synchronization and coordination and the control need to have the knowledge about the neighbour devices.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5935704
5c62411127e24dfdb6e69a42e3782856,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication and Partitioning Downside: Replication may create state inconsistences and generate additional delay in case the primary controller fails. At the same time, the size and dynamics of the network will influence the scalability. In Partitioning, there will be some issues that also in P2P networks raises. Furthermore, partitioning will be difficult to coordinate and consistent and forwarding delay between the controllers may happen.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.55637825
e6bdcfa3154046dc994ffcc30d1243a9,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication: Downside: Consistency Partitioning: Downside: Need of Coordination,The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5637683
9f85621633da458cb888cd10950a1f1d,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The downside of replication mode is the higher traffic to the current master, which also increases the network load in the adjacent nodes. In contrast, in partitioning mode the load is split between the control plane nodes, but they have to coordinate each other to operate consistently.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.52686656
f51a098bb684416ea617eb5f75a413bb,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability",Replication: Higher load on primary while the secondaries are on standby Partitioning: They have to agree on a common routing rules. This means that could be harder to implement consistency and coordination between the controllers,The response is correct as it identifies the modes and the drawback of each correctly.,Correct,1.0,0,0,0.49131578
b478b88e746e427cb00a3fc1048dd464,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","Replication The slave host is in stand-by, so its capacity is wasted Partitioning A constant communication between the two parts / controllers is needed (and therefore further protocols are required)",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,0,0.5282998
2de44931d1184fe3bdddd59d52b1c23d,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,Multi-layer switches: Forwarding based on layer 2-4 headers. Hardware switches: Hardware support for fast matching. Software switches: Connect multiple virtual machines to physical interface of host. Hybrid switches: Implement SDN and standard L2/L3 forwarding.,The response is incorrect because the question requirement is to describe the functions of meter and flow tables while the response states different types of switches.,Incorrect,0.0,0,0,0.20318899
619a0da5f9574884a40c391e0048b3f2,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,Switches implement the data plane which allows packet forwarding. Typical multi-layer switches use forwarding based on layer 2-4 headers. Hardware switches support fast matching and Software switches connect multiple virtual machines to the physical interface of the host. Hybrid switches implement the SDN and L2/L3 forwarding.,"The question asked for the different types of table functionality, not about different types of switches.",Incorrect,0.0,0,0,0.32217395
429510d710bc4d34a2fdda92bb13ba55,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,"I could not ascertain from the question whether to sumarize the different types of switches or tables, hence, I have provided both: Hardware Switches: support specific data structures that are used to make forwarding very fast Software Switches: virtual switches, that connect multiple VMs to physical interface of the host. Hybrid Switches: are used to implement a SDN and standard L2/L3 forwarding. Flow tables are like routing tables, where routes are defined in terms of flows. Each flow table contains flow entries. Meter Tables are also contained within a switch. They provide additional functionality, like statistics.","The meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain QoS goals, is not stated. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.5820255
33c92596adc34bc48242a35ebf7d7112,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,Flow Tables Flow tables stores rules on what to do with an incoming package. They can for example forward the package to the next table or to a specific output port. Meter Table The Meter Table stores statistical information which can be used to measure the flow rate for example.,"The Meter table not only measures but also limits the flow rate. Apart from that, the response is correct.",Correct,1.0,0,0,0.58259404
e63bdbc17cbf41b5a4636613a5a7b231,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,typically multi-layer switches: forwarding based on layer 2-4 headers hardware switches: hardware support for fast matching software switches: connecting of multiple virtual machines to physical interface of host hybrid switches: implementation of SDN and standard L2/L3 forwarding,"The question asked for the different types of table functionality, not about different types of switches.",Incorrect,0.0,0,0,0.23824388
4a45b12df51a4fbca44a03e6f09ee66b,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: - The control logic has a global view of the system, allowing for easier algorithms/programming. - The routing can be adapted in a flexible way based upon the used applications. Drawbacks: - The controller is complex to implement. - The control plane might be a bottleneck when not partitioned appropriately.","The two stated drawbacks cover a similar point: the high complexity of control servers. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.5748163
919f42dda3a64bec8e268103b8e7e4df,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: 1.The network control logic can be easily modificated making the software exchangeable . 2.The complexity of the switch will be reduced by removing the control logic on the switchers and hosting it on servers. Drawbacks: 1.One drawback is that if something were to happen to the controller, we wouldn't be able to create any new table or route. 2.Also the security that was provided by the switchers and physical routers will be lost, making a cyber attack possible.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.56678176
d1d30dd396104afda7ebdf8664236ea8,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","- Benefits: o Easier modification/management of the network logic through APIs via the Control Plane possibly using high-level programming languages, without the need to modify each local router while achieving a faster convergence. As an example, this is advantageous for complex networks as found in VLAN or virtualization infrastructures while providing a consistent and secure layout for routing and firewall rules. o Reduce the complexity of the local HW (Data Plane) by separating it from the Control Plan. - Drawbacks o The concept of SDNs introduces new security issues to be tackled and is possibly more vulnerable for attacks or outages of not setup correctly. o The Control Plane requires additional complexity.","The stated drawbacks of SDN are partially correct. The first drawback doesn't explain what kind of security issues may occur with the implementation of SDN. Also, SDN indeed requires a complex control plane but the response lacks what kind of complexities are there while designing the SDN controller.",Partially correct,0.75,0,0,0.5795038
60efb772a78e40a4891ef873b5e97157,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","The benefits of SDN are, easy modification of the network control logic, it has API in order to program the network, it accommodates high-level programming languages, reduced switch complexity, it has an integrated system consisting of application and network, and it reduces the complexity of implementing control logic. One of the drawbacks of SDN is the security that came from physical routers and switches.","The second drawback is missing.  Apart from that, the response is correct.",Partially correct,0.75,0,0,0.3496438
45deee562fa94effb5a82e9b51a5448b,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",One benefit of SDN is that it enables a global view and management of the system and its devices. A second benefit is that SDN supports high-level programming languages for its logical implementation. A drawback of SDN is that the entire network infrastructure needs to be changed and reconfigured to use SDN. A second drawback is that there might be a single point of failure in SDN.,"The first advantage is partially correct because it does not clarify how the system's global view and management are advantageous. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.33005822
afd8b14ccef942e9b341b439141797ff,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: One benefit of SDN over traditional networking is, that as the logic is no more ""hard-coded"" in the routing process of each switch but an exchangeable software the network control logic can easily be modified without having to access physical routers. Another benefit of SDN is, that as the control logic is hosted on an external, logically centralized server, routers do not have to have a routing process and their complexity can therefore be reduced while maintaining the performance of forwarding in hardware. Drawbacks: Firstly, a controller with both a Northbound Interface to the control logic as well as a southbound interface to the data plane has to be implemented which is hard, as a lot of the overhead has been shifted to the controller. Secondly, as the control logic is no longer in every router, if a controller in the control plane fails or breaks down, all routers which draw their information from that controller are not longer usable until the controller has been fixed or another controller takes over. Furthermore, information loss during the downtime can be a big factor.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.57432044
062a75977b184abc91c71af78c43d21f,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","A benefit is that you can modify your network to your specific needs. You have an API to program the network and make use of high level Programming languages in that process. It also reduces switch complexity because you could outsource the logic part of the switch to a separate server. The switch will only take care of the forwarding. --> Individual switches get cheaper. But on the controller side the logic is more complicated than the logic in a single switch. There also exists a CAP Problem where you always can only reach 2 of 3 CAP properties maximum: consistency, availability, partitioning tolerance.","While the controller's logic may be more complicated than the logic of a single switch, all the logic needed to make decisions over the entire traditional network should be the basis of comparison.",Partially correct,0.875,0,0,0.59012604
4e2242fa275f47f297dee18f43ca8813,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Pros: -With Software defined networking, you reduce switch complexity compared to traditional networking by having the control logic hosted on a server and removing it from the switch. -You also drastically reduce the amount of work and likelyhood of errors when adjusting something in the network since the modification does not have to be done at every single device of the network. Cons: -With SDN you lack hardware security. Since you are eliminating the use of physical switches and routers you also lose the security that they bring (firewall). -You also have the vulnerability of the controller. Having the controller manage the whole network you have a single point of failure, so it is important that it is completely secure.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.46442148
85c1e2b4f9044b13b2600f663699a416,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","One benefit of SDN is the easy modification of the network control logic, because you can change the software instead of the “hard-coded” logic. Another benefit is the reduced switch complexity, which is reached by the removal of the control logic from the switch and host it on servers. A drawback is the implementation of a controller in a network, which isn’t an easy task. A good technical understanding and networking skills are required. Also the compatibility with other networks should be given to ensure correct intermediate routing.","The response is partially correct because the drawback of network compatibility may also occur in traditional networking. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.48062003
606c178069ad4f808f8edb36170d2826,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: A primary advantage of SDN networking is greater visibility throughout the network. In traditional networking, any security that impacts traffic is overarching. With SDN, it's granular. This means that engineers can selectively block malicious traffic throughout your network on a granular basis. Traditional networking requires significant people power and technical expertise spread throughout your network. Each hardware component must be maintained, and connections must be monitored broadly. A SDN network allows all of these hardware components to be managed via a single touchpoint. Drawbacks: One of the problems with virtualizing any infrastructure is the latency that arises as a result. The speed of the interaction with an appliance is dependent on how many virtualized resources are available. One of the most significant security risk factors is the possibility of a compromised SDN controller attack at the control plane layer. Due to the centralization design of the SDN, the SDN controller becomes the brain of the SDN architecture. Attackers can focus on compromising the SDN controller in an attempt to manipulate the entire network.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.42054266
1f6be65acd5d46bc987ae64b53660760,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","One benefit of SDN is the increased flexibility as they can be reprogrammed more easily using standardized software interfaces and don't need the support of dedicated hardware like traditional networks. Another benefit is the more centralized approach with a central SDN controller which reduces the load on the switches in the network and allows for more efficiency e.g. in calculating routes. A drawback of this centralized approach could be, that a single controller makes the network more vunerable to failures. Also, SDNs still lack in availability compared to traditional networks.","The second drawback is not correct and no explanation is provided to support it.  Apart from that, the response is correct.",Partially correct,0.75,0,0,0.46435678
b03387c3b3ef4a8e9c6282eb21fe9e13,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: Freedom from hard-coded logic inside hardware like switches and routers, which not only costs less and as such is more scalable but also makes it easier to modify the network control logic. One may program the network themselves using high-level languages. Drawbacks: With the loss of the hardware which is hard to modify, it is easier to attack the entire network if one has insider access to the controller. With the centralization of the network control it is easy to distribute new and modified logic to the entire network but implementing a bug-free controller may be increasingly difficult. A bug in the controller may bring the entire network down.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.5442816
746a01908a4a43e59c02b7ec89113a8a,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",Software-defined networking allows to easily modify the network control logic. It also drastically reduces the switch complexity. Two drawbacks of SDN are that the implementation of the controller is hard and that you have to update the whole network infrastructure if you want to switch from traditional routing to SDN.,"The response does not explain why the implementation of the controller is hard. Additionally, hybrid networks are also possible so that one does not have to switch the entire network's infrastructure.",Partially correct,0.75,0,0,0.4617593
cc6c641477024c96916bc3012de82950,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","One benefit of SDN is, that it reduces the switch complexity which means that the switches still have the same forwarding performance but the control logic is removed and host on servers instead. Another benefit is, that SDN allows easy modifications of the network control logic. So by removing the ""hard-coded"" control logic from the switches this allows to modify it and get exchangeable software instead which can be adapted to the specific needs of the network. A drawback is the CAP problem which means, that for a distributed SDN controller only two out of three CAP properties (Consistency, Availability, Partitioning tolerance) are possible. A second drawback is, that the logically centralization makes the implementation of the control logic simpler but the implementation of the actual controller harder, because all the logic is delegated to the controller which has to become very smart to provide a consistent view of a logically centralized network. If it's distributed the controllers have to communicate with each other, have to agree on a global view so some of the overhead is delegated to the controller.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.44049898
a1a3f31193e144af917ba324e7f35fc6,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",The control plane is a central point for decision making for the whole network. Physically it can be distributed on multiple machines. It is separated from the data plane to simplify the decision making processes. It has a global view of the network which improves performance of the control plane. The data plane is distributed on different devices in the network. Its main purpose is the forwarding of the packets. It only has a small view compared to the control plane. Is often implemented by using Routers/Switches and performance can be increased by utilising hardware for the forwarding (e.g. managed switch).,Only one correct benefit is mentioned. The remaining response does not relate to the question.,Partially correct,0.25,0,0,0.32697487
f4266ef2ce43457891fdf69b5980393d,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","A benefit of SDN is that the complexity of switches is reduced as the control logic is hosted in the control plane while switches still support forwarding in hardware which ensures the same performance as in traditional networks. Another benefit is that the usage of high-level programming languages is possible in SDN, where traditional networking controllers/devices mostly have different and often low level programming languages through the presence of many different manufacturers. A drawback of SDN is that the logical centralization of the controller complicates its implementation as the controller ideally should support all CAP properties, i.e. consistency, availability, and partitioning tolerance. Another drawback is the security. If the centralized control plane is compromised the whole network can be controlled by a miscreant.",The response correctly explains the advantages and disadvantages of SDN.,Correct,1.0,0,0,0.42432705
6701c8916dd4463b840d9d5fd86f436a,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","2 benefits: +SDN offers a API above to program the network and to have a good overview of its application. So the software defines the network, which makes the development and integration efficient, timesaving and flexible.. +SDN has a reduced switch complexity. Instead of using switches and routers, there is one centralized, intelligent controller and not many switches. 2 drawbacks: -For implementing a SDN protcol with its controller you need to make changes in the whole network infrastructure for SDN. - Security concerns about the centralized SDN controller: The central controller manages the network instead of switches and routers. So if the controller is not secure and robust, this will be a problem. Before routers and switches have had an integrated security, now with SDN the security belongs to the controller only, which could make the whole system and network vulnerable and could result into a lack of hardware security.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.51531017
acbe5967fd5149369d54aebd5b2fd732,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits of SDN: - reduce switch complexity (customers are able to configure their hardware without manufacturer-support and can buy the hardware they need, without additional features they might never use but still have to pay for) - more flexible (control logic performed by hosts which distributes transparency and allows for a global view onto the network) Drawbacks of SDN: - security problem of controller and hardware - cannot defense DDoS attack","The stated drawbacks are incomplete. The first statement did not clarify what sort of security or hardware problem SDN is vulnerable to. Stating SDN offers no defense against DDoS is not completely correct as SDN has its way to handle DDoS though not to the same extent as traditional networking. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.38784736
16c5510b8a2f4628b16bee84000a75d1,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","advantages SDN: + offers more flexibility than the traditional networking we learned so far because it is possible to modify the network control logic easily (move from ""hard-coded"" logic to exchangeable software). + Reduced switch complexity which leads to better performance. disadvantages of SDN: - more complex because it requires more effort to built a network with the help of SDN - more complex because programming skills are required, you cannot use the built-in ""hard-coded"" logic anymore because SDN offers an API which allows to ""program"" the network so that the network is defined by the software application.","It is highly debatable whether traditional networking or SDN requires more effort. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.46389055
13b076264c3145be8e288f3c95e83f2e,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefit (1): Reduced switch complexity. Instead of implementing the control logic in the switch itself, in SDN the control logic is implemented on servers. Benefit (2): Flexibility. In traditional networking the logic is implemented in a ""hard-coded"" fashion, whereas in SDN it is built in exchangeable software. Drawback (1): ""Hard coded"" parts are more secure than software regarding hacker-attacks. Drawback (2): If the SDN controller is malfunctioning the system is not working at all.","In the second drawback, if the controller is not working, the switches may still continue with their old forwarding tables, the changes in the forwarding table may not be implemented. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.41830853
b88c0cc59d7c4fe09d4d308224b1ce76,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","A benefit of SDNs is that they are solving the problem of increasing switch/router complexity by removing the control logic from the switches and putting it onto a logically centralized control plane, which is physically distributed to still ensure high availability and scalability. SDNs offers easy modification of the network control logic. Software defines the network, high level programming languages are used, reducing the complexity of implementing the control logic. Traditional network infrastructure lacks this kind of flexibility, as for example changes cannot be made to the hardware without support of the manufacturer. One drawback of SDN is that the entire network infrastructure needs to change to implement the SDN protocol and controller, which means an increased cost for reconfiguration and new components and also training of new staff. Also, as with every new technology, it will introduce new security risks. Possible vulnerabilities in SDN include a compromised controller, that can gain access to the network elements and manipulate actions or a malicious application, which is integrated with the controller using Northbound APIs.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.47864938
4091b9e250f1429999f7eee369b4d79f,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","One such benefit would be the reduced switch complexity, since the control logic is removed from the switch and being hosted on servers. However, the same forwarding performance is preserved because the switches still support forwarding in hardware. The application and the network can be realized as one integrated system via SDN which enables a global view onto the system, therefor simplifying the implementation of control logic. Control plane distribution is required to ensure failure tolerance, but for keeping control logic implementations simple, the distribution needs to be transparent for them, what makes the implementation of the controller harder. Only two out of the three CAP properties - consistency, availability and partitioning tolerance - are possible. Depending on how often the switches are reconfigured, the traffic between the control nodes and switches may become relevant and even slow down the overall network traffic. A solution to that would be a dedicated switch control network, but this might be expensive.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.48446238
a3938936701347b69b3df77962727b03,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",Two benefits of SDN are the increased flexibility and the reduced switch complexity. Drawbacks are that SDN is slower and it costs more than traditional networking.,"In both benefits, it is not explained why SDN is more flexible or how the switch complexity decreases. The first drawback is incorrect because it does not specify the parameters that are slower. The second drawback is extreme and incorrect without any support/explanation.  Apart from that, the response is correct.",Partially correct,0.25,0,0,0.39850205
a5e34f3d57c6425bb89ced514219f28d,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: 1. Support high-level programming languages for implementation of logic. This could benefit from powerful integrated developing environments. 2. Reduced switch complexity by removing control logic from switch and host it on servers. Drawbacks: 1. SDN controls the network by controller. However programmer has to test that whether one controller works with the element in the network. 2. Since there is SDN-C layer, the routing security has to be focused on.","In the second drawback, it is not clear what is meant by SDN-C layer. If it means the control layer, security against what kind of attack needs to clarified further.  Apart from that, the response is correct.",Partially correct,0.875,0,0,0.5687799
6c10fbd1a20e486881fa15fc29f027b5,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Traditional networking is way faster (SDNs are slower) since the (full) featureset of a switch can be fully offloaded to specialized hardware. On the other hand, SDN is more flexible. While the hardware can't be changed remotely SDNs can implement new features quite easily through the open API. SDNs are also less complex since they are programmed with open APIs in high-level programming languages. Frameworks can offer very high level interfaces to allow less skilled people to maintain the network. This leads to a more complex overall network, since not only the switch, but also the API service has to be hosted highly available to avoid any outages.","Having all features set while using only a few actually slows down the working of the switch. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.5013867
bea57323b38f4e65bfe120a67377d0e3,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: - API to “program” the network: since the network is now “software defined”, we may have quite much freedom to program and customise the network to fit any needs in terms of a diverse number of quality of services on the market. - High-level programming languages: with API for software to define networks on its own, many high-level programming languages could be leveraged and involved in customisation of networks instead of too much being focused on low-level details. Drawbacks: - Logically centralisation makes implementation complicated: while the control plane takes virtually all control logic of the devices (router/switch) away from itself and do all the job, that should take a such considerable amount of overhead when it comes to implementing such an optimal control plane. - CAP problem of distributed SDN controllers: trying to build an efficient distributed SDN controller (e.g. in the case of partitioning control plane distribution) could possibly satisfy two of three criteria, i.e. Consistency, availability, partitioning tolerance, and these problems in the field of control plane distribution have been invested by current research communities.","There is an overlap between the two benefits. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.5323508
922e3eadc3ed435ab24964900a70bfcf,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","SDN makes routing much faster, by separating the control and the data plane, so that all the logical computing takes place in the control plane and the data plane is responsible only for forwarding packets. In traditional networking, each switch must maintain its own routing table and compute the path forward, this slows down packet forwarding. SDN maintains logical centralization and physical distribution, the logical centralization helps to maintain a consistent global view of the network, the physical distribution ensures that if one component of the system fails, other components can jump in and take over without the system being affected, ie, high availability, and scalability. While logical centralization makes the implementation of control logic simpler, it makes the implementation of the controller harder. Only 2 out of consistency, availability and partition tolerance can be implemented. A drawback of physical distribution is the required maintenance of redundant components.","The response only states one correct disadvantage of SDN: the CAP problem. The drawback of redundant components' maintenance is also an issue in traditional networking. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.5796844
e55381af2ad8408da2dcfb2118f899ab,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","SDN allows for easy modification of the network control logic, as configurations can be changed on the fly for the whole network which was not possible with normal switches. SDN also reduces the switch complexity as forwarding rules, protocols etc. can be implemented dynamically and do not have to be preconfigured into the switches hardware. SDN enabled switches are often way more expensive than normal switches as they have to employ specialized hardware that allows for fast forwarding and filtering at the same time. SDNs are generally not as decentralized as autonomous switches/routers as they have to be connected to controllers at all time to receive updates on their flow tables while autonomous switches can calculate them themselves.","In the second benefit, switch complexity is reduced because the control logic of the switch is moved to the controller, switches still contain forwarding rules. The first drawback is incorrect as SDN switches are cheaper because of less memory requirement. Apart from that, the response is correct.",Partially correct,0.625,0,0,0.44684112
0601c893975441dabe44d431bc357a61,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits of SDN: - Control logic is no longer hard-coded, so it can be modified easier - Logic can be written in a high level language Drawbacks of SDN: - SDN controller is a single point of failure if no backup controller is available, while traditional networking might still work if a device fails - Requires new hardware if data plane device does not support the desired southbound interface protocol or does not support SDN at all, while in traditional networking the control and data plane are guaranteed to be able to communicate with each other","In traditional networking, there is no distinction between control and data plane. It would be more appropriate to speak of ""control logic"". Apart from that, the response is correct.",Partially correct,0.875,0,0,0.32069403
4340ffb4eea04a068579963019c08176,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: [1] Traditional network infrastructure has limited flexibility. SDN controller helps and assists with easy modification of the network control logic - From “hard-coded” logic to exchangeable software. This would enable to program the network at a higher level - “Think of it as a general language or an instruction set that let’s me write a control program for the network rather than having to rewrite all of code on each individual router,” - Scott Shenker [2] It helps to reduce switching complexity by removing control logic from switch and host it on servers, and this happens while preserving same forwarding performance. Drawbacks: [1] Since functionalities of Routers and Switches are provided through Controller, Controller can be vulnerable to security attacks, therefore added extra security features can be an overhead. [2] SDN is basically not required for small scale networks which have static routes configuration where changes in routes is actually not a requirement. For these kinds of static networks implementation of SDN can be a burden.","SDN's stated drawback for small-scale networks is not a disadvantage, more of a case exempt from the benefits. Instead, the response should elaborate on why SDN implementation can be cumbersome.",Partially correct,0.75,0,0,0.5567224
a6a22d77446a432488c264844d970551,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: • Switch complexity can be reduced since the control logic is removed from switches. • With SDN, modification of the network control gets easier, because before that it was hard-coded and now with SDN it is exchangeable. Drawbacks: • To implement SDN in a network, a change in the entire network infrastructure is required, which increases costs. • The controller is very vulnerable. It manages the whole network so if something happens to it (failure, security issues, ...) it effects the entire network.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.5375473
33443a114c7b4d838078829475601e54,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",One benefit of an SDN is the easy modification of the network control logic because the logic is not hardcoded anymore. Another benefit is the reduced switch complexity because the control logic is removed from the switch and hosted on the servers. A drawback is a significant amount of energy consumption and the limited memory size in switches.,"The stated drawback of energy consumption is not a disadvantage as traditional networking hardware also consumes energy. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.3597537
b65180b41ceb474891baa0161f3fa170,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits of SDN: 1. easy modification of the network control logic 2. reducing the switch complexity Drawbacks of SDN: 1. the controller is vulnerable to attacks, which can affect all the switches 2. SDN is new technology which means more unstable Benefits of traditional networking: 1. more secure because of the hard-coded nature from the manufacturer 2. more stable because of it is an older and mature technology. Drawbacks of traditional networking: 1. Limited flexibility. For example in adding new hardwares. 2. increasing the switch or router complexity",The response is partially correct because the stated advantages don't explain how these points are beneficial in comparison to traditional networking. The drawback of security doesn't describe what kind of attacks the SDN controller is vulnerable to.,Partially correct,0.625,0,0,0.44972575
593d2a4085eb4ca1b8bd95e88889e2c7,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: 1.) The Network protocols are no longer hardcoded logic, but instead exchangeable software. Therefore modifications are easily feasible. 2.) The logic is implemented using high-level programming languages. Therefore powerful integrated developing environments are accessible. Drawbacks: 1.) Logical centralization used in SDNs makes the implementation of the control logic simpler, nevertheless it complicates the implementation of the controller. 2.) Much programming and testing are needed to ensure that controllers and system elements are working together properly.","It is true that implementation of SDN controllers is complicated but the response doesn't explain what kind of issues occur during implementation. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.54695946
b9b05aedf3084725a35fc91b1be96b9d,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: The modification of the network control logic is easier to realise since you can change the logic by reprogramming the software instead of having to replace the hardware. It reduces switch complexity by removing the control logic from the switch and hosting it on servers but still preserving the same forwarding performance. Drawbacks: The cost of the SDN compatible Equipment is really high. So far it is not a standard, you would be dependent on one company because if there is no standard you can not easily combine parts of the network from different companies.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.4569217
c153fd7e69c543e4b789796863cf094f,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits of SDN: 1. Software defined-networking leverages increased flexibility; 2. Remove the control logic from the switch and host it on the server and preserve same forwarding performance, reduce switching complexity.Drawbacks: 1. It requires networking infrastructure changing to support the SDN controller and the protocols. 2. Security is a problem","The first benefit does not provide any example or reasoning behind the flexibility of SDN. The second drawback does not specify why security is a problem or what kind of attack SDN is prone to. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.38789922
1a7bfdf21b614a7eb3bce677d8f6161e,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Two of the main benefits of SDN are the following ones: - First of all, the network control logic can be easily changed and updated, since the administrator does not has to change the logic in all hardcoded (sic!) switches (like in classic networks), but only the software of the control units in the control plane. This plane then communicates the new rules to all switches. - As it can be concluded from the answer before, the switches at all get less complex and therefore cheaper, since they don’t have to include a complex control logic anymore. They get the entries of their forwarding tables by the control plane and don’t have to figure them out by themselves. Of course, there are also disadvantages of Software Defined Networking: - Security protection is a major concern in SDN since the complete control logic of the network is centralized in the control plane. So the systems running the control plane gets an interesting target for attacks in order to take over control in the network. - In order to establish SDN, the existing network needs to be completely reconfigurated - new control units for the control plane and improved switches that can receive control configurations by the control plane. This requires a high investment in the network to get the SDN running.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.46999303
e9e160473fd645fa816e4085ab8b7944,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits of SDN: - SDN is much more flexible than traditional networks - switches have less complexity, since all control logic is on the controller and not on the switch itself Drawbacks of SDN: - the controller is vulnerable if not completely secure (this is a problem because the controller is responsible for managing the whole network) - lack of hardware security, since all the security provided by routers and switches is not take into account (for example the firewall provided by routers is not used)",The first benefit does not provide any example or reasoning behind the flexibility of SDN.,Partially correct,0.875,0,0,0.37982652
8642661c064d4db1b15040362d74a9e6,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","It is easier to maintain the networks, due to outsourced services that are administration the different network tasks. SND provides redundancy, which makes the network more reliable (Controle Plane Distribution Replication) With the new components of the network controller, there is another component, that has to be secured. In order to implement SDN in an existing network, the whole network has to be redesigned.","The first advantage is incorrect because it is unclear how the outsourced services offer easy maintenance. Additionally, redundancy is also possible in traditional networks, so it is not advantageous. The drawback of security does not explain why securing the network controller is crucial and problematic.",Partially correct,0.375,0,0,0.40346304
00447c4d73f842619bcb50a9942ffe8d,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","+ Better routing decisions because of centralized view of the topology. + Easier expandable as the control logic is managed over the control plane mostly by software. - Dependency on control servers. The network can’t adapt when it can’t reach a controller. - The distributed SDN controller leads to the CAP problem where it can only have 2 of the three properties (consistency, availability, partitioning tolerance).",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.5922437
92a724a4fef54638aceda20a1f2cd163,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Pro A benefit of SDNs are the freedom to create flexible network control logic and the possibility to use high level programming languages to do so. Reducing switching complexity by “outsourcing” control logic to servers, but keeping forwarding performance. Cons SDN systems are still a new technology. Being a new technology, there are still areas that could use improvement. Many soft-ware defined networks can track who and when people make changes, but companies must carefully monitor who has access to the controller and keep access secure.","It is true that the SDN is modern technology and needs improvements, but the answer does not specify what kind of improvements are needed. Therefore, the drawback is incomplete. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.32404238
037859057b7b4bc4b51481456888e7bb,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: 1. By separating control logic from the actual package forwarding, we can simplify switches and at the same time keep the forwarding performance of hardware-based forwarding in switches. 2. But not only is the switch simpler, this change of architecture also allows us to change the control logic later on, without having to replace or modify the many devices that previously each had their own logic. Instead we only have to change the single controlling software, making it far more versatile in the long run. Disadvantages: 1. If we decide to use centralised controlling, the implementation of the controller is very hard. 2. However, if we choose to use distributed controlling, we run into the well known CAP problem, which states that it is impossible to guarantee the three properties “Consistency”, “Availability” and “Partition Tolerance” in any distributed system simultaneously.","The response does not explain why a centralized controller would make the implementation harder than distributed controllers. Additionally, the response should distinguish between logical centralization and physical distribution.",Partially correct,0.75,0,0,0.5221825
f4b2adef865b4f00813cca1394c81e2f,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits of SDN: - reduce switch complexity (customers are able to configure their hardware without manufacturer-support and can buy the hardware they need, without additional features they might never use but still have to pay for) - more flexible (control logic performed by hosts which distributes transparency and allows for a global view onto the network) Drawbacks of SDN: - security problem of controller and hardware - cannot defense DDoS attack","The stated drawbacks are incomplete. The first statement did not clarify what sort of security or hardware problem SDN is vulnerable to. Stating SDN offers no defense against DDoS is not completely correct as SDN has its own way to handle DDoS though not to the same extent as traditional networking. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.38784736
d6b5a5e9b77749b29cb90b0d464712fd,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","advantages: - easy modification of the network control logic, since the hard-coded logic is exchanged into software - supports high-level programming languages, and thus the user has benefit from powerful integrated developing environments drawbacks: - single point of failure if the controller becomes vulnerable - lacking of hardware security e.g. firewalls, since the SDN system eliminated the use of physical hardware such as routers and switches.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.45708564
567b61853e3f4e769a2154e4751aebc3,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Separating the data plane and control plane gives the IT department an aerial-like view of the entire network, so this makes changes much easier, for example the changes can increase the speed of the entire network and one more benefit is companies have better security, for example the people with access to the controller can clarify secure routes in the system without a firewall to block any invalid routes but security is also a drawback because “all eggs are in one basket”- in the SDN Controller Layer, so if this is compromised the whole Network (Datacenter ect.) can be controlled by a miscreant. The vulnerability of the controller is a problem because the controller is the way that the IT-Department will manage the network, so that means the controller must be completely secure and software plays a major role in SDN and software has bugs especially new software.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.46031934
37e9f2dde107474085c86705d9d5f076,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",SDN enables modification of the network control logic instead of hard-coded logic. Another benefit is the API to program the network where software defines the network. One drawback is the high cost. Another disadvantage is the vulnerability of the controller where the whole network is managed.,"The first drawback does not mention why SDN will cost more than a traditional network. It is a generic statement without any explanation. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.30919847
e64a3263562343b08c6571a072fd28ed,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","SDN allows the user to have more flexibility in comparison to traditional networking techniques by allowing them to define their own protocols adapted to their applications. Furthermore, there is a reduction in the complexity of the hardware due to the separation of the control logic from the data plane. This means that the control logic is migrated from the switches to the servers, which leads to a reduction in the cost of the switches. One drawback of SDN is that the employees need to be schooled to be able to perform SDN and that they need new management tools to be able to do so. Another problem is the security aspect as everything is handled by the controller and hardware security is missing.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.38600853
d69e2da8a8bb4dbe8b7cc79e18776785,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefit 1: Software defined networking allows more flexibility, because a device's logic is not hardcoded in the hardware. Instead of designing and building a new piece of hardware, with SDN one can simply change the logic by using a high level programming language. Benefit 2: SDN allows us to source out the control logic of a switch, where performance is expensive, to a server where much more performance is available. This also reduces the complexity of the switch itself, because the logic is handled by the server. Drawback 1: The CAP problem occurs, meaning that with SDN we can only achieve two of the following attributes at a time: consistency, availability, partition tolerance. A prioritization has to be made for each network. Drawback 2: Because the controllers are now responsible for the control logic of the entire network, the controllers get very complex and, in case of a distributed network, even have to handle communication with each other.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.48393312
c604597889424cda88c5e10ed1a03975,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: 1. The modification of the network control logic get’s easier since there is a change from “hard-coded” hardware logic to exchangeable software. 2. Reducing the complexity of implementing control logic by implementing it in a centralized system. Drawbacks: 1. The whole network infrastructure needs to support the SDN protocol and controller, including the switches, so the network needs to be reconfigured entirely. 2. If an attacker gains access to the controller, all switches controlled by the controller will be under the mercy of the attacker.","The response correctly states the benefits and drawbacks of SDN over traditional networking. Note that even hybrids network are possible, so one is not required to replace the entire traditional network.",Correct,1.0,0,0,0.5306654
61787656800342a0be1fd31e08386ca1,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: -SDN leverages increased flexibility. Traditional network has limited flexibility. -SDN provides easy modification of the network control logic. It changes from ""hard-coded"" logic to exchangeable software. Drawbacks: -If the controller fails, the entire network will be paralyzed. -Reconfiguration from traditional network to SDN increases the costs.","The first benefit does not provide any example or reasoning behind the flexibility of SDN.  Apart from that, the response is correct.",Partially correct,0.875,0,0,0.3967643
4b2f2cef1df14f05a5456f849df3e9fe,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",Benefits: In SDN the network logic can be modified easier. SDN gives a global view over the Network. Drawbacks: The control plane represents a single point of failure since if the control plane fails the SDN can not adapt to changes in the network anymore. The load on the SDN controller will be intense if there are too many routers.,"In the second benefit, how or what benefits are derived by having a global view is not mentioned. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.39287347
7c18d7cacda949e9974fd852f030a4e0,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.",SDNs can integrate higher level languages in the packet control flow and can greatly reduce complexity.,Both the stated benefits are incomplete. The benefit derived from using high-level language is not stated and which or what component complexity decreases is also not stated. No drawbacks were mentioned.,Partially correct,0.25,0,0,0.4753091
b57129ba65694012b33b20e9a00c0423,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","+ Switches don't have to implement routing protocols, because it's all done by the control logic. + Protocols can be easily exchanged, as they run in software on the control logic as opposed to the hardware implementation on switches - Since the controller has to make all decisions, it has to become really ""smart"" - The CAP theorem shows, that there can't be a perfect controller","The response correctly states the advantages of SDN. However, the drawbacks are partially correct. First, it is true that the SDN controller has to make all the rouging decisions but what kind of problems can occur because of it is not mentioned in the response. Second, the CAP problem is present in SDN but the explanation is missing.",Partially correct,0.75,0,0,0.59548753
6c9aa65995eb41ca8c3f7f03102c9a10,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","The advantages of SDN over traditional networks include the global overview of the control plane over the entire network and the fast and flexible possibility to restructure the network using high-level programming languages if necessary. Disadvantages of SDN can be for example the scalability of the switches and the slower adjustment to topology changes. Depending on how many switches are integrated in the system, the work of the Control Plane increases as the switches need to be maintained, patched or upgraded frequently.","The first benefit does not mention what benefit is derived by having a global view of the system. In the second drawback, it is not mentioned how the topology adjustment is slower compared to traditional networking where no such global view is possible. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.41245568
1b4963d785364904a67dc133bb487c9e,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: - The network control logic is easily adaptable, because it is based on software and no more on hardware. - In addition, one can program the logic in high level programming languages (and use their IDE) and not in hardware description languages Drawbacks: - One has to deal with the CAP-Problem - Due to the additional layers and distinction of data and control plane, the complextity increases","It is always better to explain the abbreviations, like CAP, when they are not common. The second drawback is incorrect as there is no additional layer, only separation and abstraction to simplify the network model.  Apart from that, the response is correct.",Partially correct,0.75,0,0,0.4729256
8593723362db48d099c6085f3444452e,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: 1.SDN leverages increased flexibility. 2.Reduced switch complexity. Drawbacks: 1. SDN costs more, in order to implement SDN protocol and SDN controller, it requires complete reconfiguration of the network. 2. The controller can be a single point of failure.","In the first benefit, parameters or an explanation need to be provided for what makes SDN more flexible than traditional networking. Apart from that, the response is correct.",Partially correct,0.875,0,0,0.47313994
4f895879f5f6420d930ae69a07c7a482,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","In SDN, software is more easy to adapt and exchange since its not hard wired or hard coded. Also, it scales better for growing architectures and high lavele languages are useable. The disadvantage is that some kind of controllers are needed.","Scalability as a benefit is not entirely correct as it is under review due to the centralization of the control logic which hampers scaling if multiple components are present. The first drawback does not specify the problem of having a controller. The second drawback is not stated. Apart from that, the response is correct.",Partially correct,0.5,0,0,0.38468218
e560465caa4b41838238fe594d943acd,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Two problems of SDN are the control plane distribution, which is still subject of research and that the implemenation of the controllers is fairly complex. Benefits are, that we have a way of simply changing or implementing the control logic e.g. routing algorithms also does centralized optimization account for a way faster convergence, which leads to better ressource optimization.","The first drawback does not state the problem under research, i.e. the CAP problem. Additionally, there is no example or reasoning for why the implementation of SDN controllers is complex. Two benefits are stated, but the second benefit is stated as an example of the first one. Apart from that, the response is correct.",Partially correct,0.625,0,0,0.42769688
a84670432a6e4e618f6c1aa5a40bda85,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","The benefits of SDN: 1. Reduces switch complexity by removing control logic from the switch and hosting it on servers, Preserve the same forwarding performance! Switch still supports forwarding in hardware. 2. Provide high-level programming languages for the implementation of logic, to benefit from powerful integrated development environments. 3. Easy modification of the network control logic. From “hard-coded” logic to exchangeable software. Drawbacks of SDN: 1. Security is a big challenge in SDN: One of the disadvantages of an SDN network is that since you are eliminating the use of the physical routers and switches, you won't have the security that comes with them. The main one that you will be missing is the firewall. This can leave your network more vulnerable if you're not careful. 2. CAP Problem (i.e. Only two out of the three CAP properties possible: Consistency, availability, partitioning tolerance). 3. It requires a change in the entire network infrastructure to implement SDN protocol and SDN controller. Hence it requires a complete reconfiguration of the network. This increases cost due to reconfiguration.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.4895126
e029336370024617a4ba6b4a08232631,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: - network logic can be easily exchanged/updated Because the logic is not hardcoded, it can be easily updated to newer versions that support new features or solve problems. Updating is easier and cheaper than replacing the hardware. - high level programming languages Benefit from powerful development environments and therefore deploy new updates much faster (and probably with more features). Drawbacks: - vendor lock When deploying a SDN, the choice of vendor/manufacturer will have long-term effects on the available network components, because often hardware/software from different vendors can't properly communicate with each other and therefore can't be used inside the same network. - more expensive Because of the processing power and generalization needed, the hardware is more complex and therefore more expensive. The cost of software development and support also increases cost. There is also less offerings/demand on the market.","The first drawback regarding vendor lock is more prevalent in traditional networking compared to SDN. So it cannot be accepted as a disadvantage over traditional networks.  Apart from that, the response is correct.",Partially correct,0.75,0,0,0.53659904
7fc2362842ab42398ac09d5fd6f4256a,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Easy modification of the network control logic API to “program” the network Drawbacks: Consumes significant energy, silicon space Limited memory size in switches (hundreds to hundred thousand entries)  Remember the day of the 512k problem!","The first and second benefits are overlapping. The drawback of energy consumption is incorrect because traditional networking hardware consumes energy as well. Apart from that, the response is correct.",Partially correct,0.625,0,0,0.4123435
b8b71a2c194149d0b30f54afc7d9ba29,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: Reduced Switch Complexity: By moving as much control logic away from each switch to e.g. a control server the switches are more restricted and won’t have to manage all on their own. This reduces the necessary complexity of the switches by maintaining the same level of performance. Operational Control: By centralizing the control logic it is able to influence the overall operations using a single console with the intention of boosting the ability to have better control over task allocation and network traffic. Drawbacks: Reliability: If the control server implementing the control logic for the network breaks the whole network will go down. CAP Problem: With SDN you will always have a tradeoff between consistency, availability and partitioning tolerance. Only two of those properties can be provided at the same time.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.52206653
29552a202c9b42268f08133ba278575b,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Compared to traditional networking, one of benefits of SDN is increased flexibility of the network architecture, it can easily modify the network control logic. The other one is reduced switch complexity, because control logic is removed from switch and hosted on servers. One of drawbacks of SDN is that it is difficult to manage, because there's not a unified industry standard and the program provides by the equipment vendor. The other is, the functional distinction between routers and controllers is still subject to discuss, and functional configuration is still an open question.","The second drawback is the extension of the first drawback. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.4791779
bf9ad34d9fa342558cadd4cefb2dc069,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: Firstly, SDN provides a centralized view of the entire network that helps to centralize enterprise management and provisioning. Secondly, SDN can reduce overall operating costs and result in administrative savings since many of the routine network administration issues can be centralized and automated. Thirdly, SDN unifies the cloud resources since networking components that make up massive data center platforms can all be managed from the SDN controller. Fourthly, SDN can help to simplify implementation of control logic which gives consistent global view onto network Drawbacks: Firstly, SDN centralize security control into one point that can be easily attacked. Therefore, these controllers will be vulnerable. Secondly, SDN will have synching of data or data authenticity problem with distributed controller. Thirdly, SDN provides sometime controller redundancy. Fourthly, during deployment of SDN, bugs always exist in software and the tester need much time to test and fix them.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.363751
44fddd5de5a640ffa73c43bdff04fad4,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefits: - The complexity of the switches is reduced, they don't need to support a variety of protocols, they simply use the forwarding tables calculated by the SDN controller. - The knowledge of the topology of the whole network leads to better route selection, and therefore enables a bigger focus on QoS and QoE. Drawbacks: - The controller is a single point of failure, unless you use control plane distribution. - The controller logic is very complex, because SDN moves the complexity from the switches to the controller. Due to this complexity, specialists are required for the controller development and administration.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.57196116
9cc8cc70ea5c44499aabe4cd63e6a683,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","The main benefit of SDN is the increased flexibility which comes with the ease of modifying the network control logic. Another benefit is the reduced switch complexity while preserving the same forwarding performance on a switch as in traditional networking. A drawback of SDN can be the limited storage capacity of switches, which in turn leads to reactive routing and maybe to a latency (or even DoS) problem if many new types of packets belonging to different flows occur. Another drawback (if many new packets come in) is in turn the high load on the pyhsical controllers. Therefore, multiple controllers have to be in use, which may additionally lead to a consistency problem in short term (since they have to coordinate each other).","The response correctly states the benefits and drawbacks of SDN over traditional networking. Note that in SDN based networks, the TCAM memory of an SDN switch is considered as a crucial resource constraint in flow rule placement and measurement problems.",Correct,1.0,0,0,0.43282902
958fcddbffa9444b8d79f886c113c830,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","Benefit 1: Software defined networking allows more flexibility, because a device's logic is not hardcoded in the hardware. Instead of designing and building a new piece of hardware, with SDN one can simply change the logic by using a high level programming language. Benefit 2: SDN allows us to source out the control logic of a switch, where performance is expensive, to a server where much more performance is available. This also reduces the complexity of the switch itself, because the logic is handled by the server. Drawback 1: The CAP problem occurs, meaning that with SDN we can only achieve two of the following attributes at a time: consistency, availability, partition tolerance. A prioritization has to be made for each network. Drawback 2: Because the controllers are now responsible for the control logic of the entire network, the controllers get very complex and, in case of a distributed network, even have to handle communication with each other.",The response correctly states the benefits and drawbacks of SDN over traditional networking.,Correct,1.0,0,0,0.48393312
7b8f26fcf83c42c1bbdff40ba1542fa9,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","One benefit of the SDN is the possibility to modify the network control logic easily, because the control logic is no longer “hard-coded” in the switches . Another benefit is the reduced complexity of the switches with the same forwarding performance. A drawback is that the controller is vulnerable and must be complete secure. Another drawback is if SDN is a new technology you need to change your whole system to implement it.","The stated drawback of controller security is partially correct because it does not specify the SDN controller's vulnerabilities. Additionally, hybrid networks are possible so that one is not required to replace the entire network.",Partially correct,0.75,0,0,0.40044838
75d1d047b49b4e74b79ce161df4fb5b9,"What are the benefits and drawbacks of SDN compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? Describe two benefits and two drawbacks in 1-2 sentences each.","Benefits: ● Reduced complexity of the switches: They only have to act according to their flow tables and do not have to make any local routing decisions. ● Due to centralized routing, the routing can converge way faster to a global optimum than with decentralized routing because of a global view ● Better Integration of application and network provides a better global view of the system. ● Increased flexibility : 1. We can update the routing logic on the fly, routers/switches are not limited to hard-coded routing algorithms anymore (Note: this is also possible with programmable switches). 2. API to “program” the network: Software (application) “defines” the network 3. High-level programming languages for implementation of logic and making use of powerful integrated development environments. Note: In case the reasoning/example sufficiently explains the benefit, naming like reduced complexity, increased flexibility can be omitted and response can still be granted 0.25 for each benefit. Drawbacks: ● High complexity of the control servers: They have to make all the routing decisions for the (sub)network and can therefore be a bottleneck. ● Centralized routing in distributed systems in general: The routing completely depends on the control server(s). To achieve better availability and fault tolerance, the number of control servers can be increased. However, this can lead to synchronization and consistency issues. → CAP problem (consistency, availability, partition tolerance) ● New technology adoption challenges: ● Switching to SDN from traditional networking. ● Training personnel on SDN. All these will cost depending on the reconfiguration level but then for the long term, it depends upon the ROI. ● Security-related concerns : ○ Lack of hardware security: eliminating the use of the physical routers and switches, one also loses the security that comes with it.","The benefits of SDN compared to traditional networking is 1. SDN increases flexibility. That means the network is built on high-level programming languages and easy modification of the logic. 2. it's an integrated system. That means it is now possible to have a global view of the full system. The drawbacks of SDN are 1. Software. The software is one thing SDN depends on, which are prone to failures. 2. Security. Physical routers bring security/firewall with it; an SDN is, therefore, more vulnerable.","The second benefit does not mention how having a global view is advantageous. Additionally, the stated drawbacks are partially correct. Not only software, but hardware is also prone to failure. The second drawback implies no security/firewall mechanism being present in the SDN. However, SDN switches can act as firewalls, although they are not hardware replacements.",Partially correct,0.625,0,0,0.39559066
623830644af046e7a364ec916c566578,"Software-defined Networking (SDN) introduces separate control and data planes to manage network flows. Please explain the responsibilities of each plane in 1-2 sentences. Further, name two tasks the SDN controller takes care of.","Control Plane: The control plane is logically centralized, but can be physically distributed (multiple coordinating control servers for higher availability and scalability). One of the following responsibilities should be given: ● decides the route for the packet/data ○ Control servers manage the network graph, define routes, and update the flow tables of connected switches. ● handles unprocessed packets coming in from the data plane Data plane: Responsible for packet forwarding. Individual switches just execute actions according to their flow tables decided upon by the control plane. The following are the tasks taken care of by the controller: ● Configuration of forwarding tables ● Injecting packets ● Events from switch (packet-in) ● Collection/Monitoring of traffic statistics ● Discovery of topology ● Inventorying what devices are within the network and the capabilities of each device ● Interfaces with control logic (control “application”) via the northbound interface(s) ● Implements a southbound interface to interact with the data plane. ● Implements the control plane.","The control plane knows the network topology and does the routing. The data plane has only limited knowledge of the network and forwards data according to the routing done in the control plane. The SDN controller computes the routing, distributes the result to all the nodes in the data plane and discovers the topology.",The response correctly states the responsibilities of both planes and the tasks of the SDN controller.,Correct,1.0,0,0,0.58201814
2d4a2d93a6fd4269a7eacd5453703825,"Software-defined Networking (SDN) introduces separate control and data planes to manage network flows. Please explain the responsibilities of each plane in 1-2 sentences. Further, name two tasks the SDN controller takes care of.","Control Plane: The control plane is logically centralized, but can be physically distributed (multiple coordinating control servers for higher availability and scalability). One of the following responsibilities should be given: ● decides the route for the packet/data ○ Control servers manage the network graph, define routes, and update the flow tables of connected switches. ● handles unprocessed packets coming in from the data plane Data plane: Responsible for packet forwarding. Individual switches just execute actions according to their flow tables decided upon by the control plane. The following are the tasks taken care of by the controller: ● Configuration of forwarding tables ● Injecting packets ● Events from switch (packet-in) ● Collection/Monitoring of traffic statistics ● Discovery of topology ● Inventorying what devices are within the network and the capabilities of each device ● Interfaces with control logic (control “application”) via the northbound interface(s) ● Implements a southbound interface to interact with the data plane. ● Implements the control plane.",Replication: Clients need to implement the OpenFlow standard in order to use the slave. Otherwise only primary will be used and thus has higher load. Partitioning: Introduces overhead because Control planes have to coordinate decisions. Preserving consistency is not an easy task.,"The task is to state the control and data plane's responsibilities, including two roles of SDN controller instead of explaining replication and partitioning.",Incorrect,0.0,0,0,0.38696057
6bae34ebc2ef4fb789a93834be0fabaf,"Software-defined Networking (SDN) introduces separate control and data planes to manage network flows. Please explain the responsibilities of each plane in 1-2 sentences. Further, name two tasks the SDN controller takes care of.","Control Plane: The control plane is logically centralized, but can be physically distributed (multiple coordinating control servers for higher availability and scalability). One of the following responsibilities should be given: ● decides the route for the packet/data ○ Control servers manage the network graph, define routes, and update the flow tables of connected switches. ● handles unprocessed packets coming in from the data plane Data plane: Responsible for packet forwarding. Individual switches just execute actions according to their flow tables decided upon by the control plane. The following are the tasks taken care of by the controller: ● Configuration of forwarding tables ● Injecting packets ● Events from switch (packet-in) ● Collection/Monitoring of traffic statistics ● Discovery of topology ● Inventorying what devices are within the network and the capabilities of each device ● Interfaces with control logic (control “application”) via the northbound interface(s) ● Implements a southbound interface to interact with the data plane. ● Implements the control plane.","Switches/Routers implement the data plane and forward the information. Routing tables implement the control pane and manage the network topology and where to forward information. The SDN controller manages the flow tables, injects packets, handles package receival and manages traffic statistics.","The control plane decides the routing tables, not the other way round. Apart from that, the response is correct.",Partially correct,0.75,0,0,0.5496733
02628350025c4651b00ab5586b9e0abb,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Considering that you want to submit your queries indepentently as single data requests it would make sense to use a connectionless service. In that sense, no state for a connected session is required.",The response is correct.,Correct,2.0,1,1,0.638994
8767c875ed29461ca9681d5b7769060f,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use a connectionless service. This is due to the fact that the other party does not have to maintain a connection while you refine your query (which could take a bit of time). Additionally it would be impractical for the search engine provider to maintain a connection with every querying person for a longer period of time.,The response is correct.,Correct,2.0,1,1,0.61080134
4b8e6c0975954c01b31c92776ca4358d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service. Even though the information is important connection-oriented by itself doesn't imply reliability. Since we are going to be doing a bunch of iterative searches, it is better to jump directly to the data transfer stage to save some time.",The response is correct.,Correct,2.0,1,1,0.62939966
0915dc58f4c242758e9da6ad45f6c785,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented service is better for this scenario as the information is very important and thus the data should be reliable. Thus, as there is no time restriction the connection oriented may take longer but the information will be reliable.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.46564204
058d57c86b87402db5bfc14fbba65fe0,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Since I am looking for a very specific important piece of information, it should be guaranteed that the information I receive at the end is correct. A connection-oriented service is a more reliable connection service because it guarantees data packets transfer from one end to the other end with a connection. Furthermore, it is also beneficial for our multiple searches, because there is no congestion as it provides an end-to-end connection between sender and receiver during transmission of data.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.46395388
b3e475ebdfc34c35bba42b1fd4399306,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It's better to use a connectionless service. In our case here there is no need of an continuous connection like in a call between two persons, but we want to have a high reliability of receiving the information, so many possible ways to send the data (in a connectionless service) is reducing problems when one router is down.","The type of service selected is correct but the explanation is not complete in the presented scenario as it does not explain why there is not a need for connection-oriented service or what advantage one gets in using connection-less services here. Further, the connection-oriented services guarantee data transfer and have higher reliability.",Partially correct,1.5,1,1,0.6417983
ae7013cc1fd24c74ac7de3de6c421b48,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this scenario, it's better to use a connectionless service. A request will then be fired as quickly as possible without any connect request/accept response or security protocol negociation and it is assumed to arrive at destination, and so the benefit of this is less time.",The response is correct.,Correct,2.0,1,1,0.6067065
2a3b0670d331470b9c307fd3827f9cd1,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connection-oriented, because for every request we want the full (loss-less) results back to optimize our query on and to not miss any information.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.46817425
90f4d4b9fbc24a339c9f99abf93012c5,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this case it is better to use a conncetionless service, because it is not necessary to hold a connection in the time you are reading the first results. So more people can search at the same time.","While the connectionless service is the correct service but the explanation is not complete. The main reason in this scenario is one will communicate with various partners (websites) for short periods of time. If one would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Partially correct,1.0,0,0,0.48250613
072ad32f61654810ba3c1f3d98934a2d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I believe it would be better to use a connection-oriented service, because by iteratively searching and updating your query after every search, a connection-oriented service would maintain the flow of information from the person searching and the web. Especially when searching for something specific from something as large as the web (and it is expected to take a long time), the initial cost of the connection is insignificant. One could also argue for the use of a connectionless service, however, I think the process of refining the search query based on the top search results is indicative of the need for a connection-oriented service.","As stated in the response "" when searching for something specific from something as large as the web (and it is expected to take a long time"" either way but then we'll connect to each website when we just want to skim them and move on to the next one which will further increase time, so it makes sense to use connectionless to reduce connection setup and teardown overhead.",Partially correct,1.0,0,0,0.51602566
817141f8bfe24cfbac0c76a7c744ed69,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","As a matter of fact, that the required information is very important, it is crucial, that the information is downloaded safely, correctly and completely. So every received part(bit) of the information should be acknowledged. If the connectionless service is used, the data might be possibly found faster (if the search and its requests could be done automatically, i.e. via a piece of code), but I cannot assure, that the data was downloaded correctly and completely.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.366638
0f7ea05c4d934e3290d1629f607f9156,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service, because in comparison to a connection-oriented service, there is no connection establishment phase. With that, the process goes straight to the data transfer phase and also no connection teardown phase is needed. Especially the fact, that we want to see the results as fast as possible and just want to skim the first few websites shows that a connection-oriented service would not be the optimal solution because of its overhead of handshake procedures, which can be contra productive for short communications.",The response is correct.,Correct,2.0,1,1,0.73067003
46f70f6a94514824b093cd81a86d7163,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service, because subsequent telegrams from sender to receiver use different lines. This method can avoid connection failure.","our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather than establishing a time-consuming connection and teardown with each, for this reason, connectionless is a better option for faster access.",Partially correct,1.0,0,0,0.5371659
5efb6cfd2349443f8a6cef2601e15274,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Connection-oriented service is better.,The response is incorrect and does not provide an explanation.,Incorrect,0.0,0,0,0.42799246
553ca2b4683545aa9f0eb8f1311eb1b3,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented service will be better, because you don't want lose any piece of important information. Furthermore, the iterative precess ensure you can find every resource and with connection-oriented service will ensure you get everything from every search.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.45914572
e937df79372a4b95a7f7051027452a6e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented process should be used. Assuming the search engine also has some kind of internal state, the results it provide could be optimized not only for the current query but also for past similar queries which helps the user narrow down his topic.","The correct answer is connectionless service as we need to consider skimming of websites also to refine our query. Since it is an iterative process with many iterations searching for specific information, we need to put many inquiries through the network. So it makes sense to use connectionless. Just in the case of losing the specific information, one can reframe the query and submit it again.",Partially correct,1.0,0,0,0.37515828
2128ac42e2db4fa5905a3a552189b68a,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented process should be used. Assuming the search engine also has some kind of internal state, the results it provide could be optimized not only for the current query but also for past similar queries which helps the user narrow down his topic.","The correct answer is connectionless service as we need to consider skimming of websites also to refine our query. Since it is an iterative process with many iterations searching for specific information, we need to put many inquiries through the network. So it makes sense to use connectionless. Just in the case of losing the specific information, one can reframe the query and submit it again.",Partially correct,1.0,0,0,0.37515828
15e7b27f8dc14a22b19429b0ec3d6ad7,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would choose a connection-oriented service because i would want to ensure that the whole piece of information is transferred because it features no loss, no duplication and no sequencing error. In a connectionless service it wouldn't be reliable enough as there is no inherit sequencing nor loss correction though the latter depends on if its a confirmed connectionless service or unconfirmed.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.5570404
ab7aa2bf27b34a318c9deb34c70a6dd9,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would choose a connection-oriented service because i would want to ensure that the whole piece of information is transferred because it features no loss, no duplication and no sequencing error. In a connectionless service it wouldn't be reliable enough as there is no inherit sequencing nor loss correction though the latter depends on if its a confirmed connectionless service or unconfirmed.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.5570404
6ca19c2daa6d4f3c86b24f4c68a36bd3,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","i would use connection oriented service because i am looking for a very specific information. In this case i have to be sure, that every element on the website is loaded completly. But both services are receiving all pakages ( conn. less service may not receive the right order), so the layers above can create the website correctly. Is this right?","While the stated points are true and may be good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.4273238
9e258e8cc5bc4aabb8ed5b1eab97e19d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connection oriented service since you will be communicating especially with one search engine multiple times, and a loss of the query data is not acceptable.",The provided perspective is correct but it does not answer the part where one needs to actually skim through the first few websites where connection-oriented could be time-consuming.,Partially correct,1.0,0,0,0.5159961
1abbad6ac45f46769fa644a0ced6e9dd,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Browsing in Web bedeutet das Anschluss des Users zum bestimmten Network mittels IP-Adresse usw. , d.h. connectionless service. Aber wie im Szenarion beschrieben ist, sucht der User spezifische und wichtige Information, was voraussetzt, dass der User keine Information bei der Übermittlung oder durch Fehler verlieren will. Daher ich denke, dass connection-oriented service passt zu diesem Szenario besser.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.31760865
297ee6def0294dfd8c79254b2f3a29ca,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service, because the transfer of isolated unit data is short(due to the user just skimming the first few websites) and because the user doesn't need to establish and maintain connections due to the many unknown amounts of query search. If the user would use a connection-oriented service, he would have to establish and maintain a connection for each query search and this would very inefficient in terms of the time he needs to find the specific important piece of information.",The response is correct.,Correct,2.0,1,1,0.63488185
0865e96d8b234885b78ee51b1b9f2041,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It's better to use a connection-oriented service for communication because the query should be refined after each search, so it's important to have a reliable connection without errors or lost data.",The response is true but it does not take into account the overhead caused in skimming the websites using connection-oriented services.,Partially correct,0.5,0,0,0.4268469
b11c7ba04cc44de39b0e397f57974f50,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Für das gestellte Stenario ist Connectionless Service besser. Da durch Skalierbarkeit mehrere Webseiten gleichzeitig aufgeruden und gefunden werden können. Dadurch lässt sich schneller ein Ziel definieren und finden.,The response is correct but the explanation provided is not complete. The main reason here is the iterative search and skimming of websites that don't require a reliable connection.,Partially correct,1.0,0,0,0.35078654
01ac33e56a2f43bfa842e3f41b5d3b14,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Da es in unserem Scenario um wichtige und spezifische Informationen geht ist der Connection-oriented Service besser, da dieser zuverlässiger ist und dieser garantiert kein Verlust oder Fehler zu haben. Hingegen beim Connectionless Service kann es zu Fehlern führen.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.3506133
dc12206ffa8b40ef80bdbd058ef0df6c,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service in this scenario. Since you are entering many queries in a short time you would prefer the connectionless service that is faster than the connection-oriented one. By eliminating the need to establish and teardown connections the connectionless service saves time. The possible loss of a few packages should not be a problem, as you only want to get a quick overview and skim for the first few websites.",The response is correct.,Correct,2.0,1,1,0.67826164
fd7ec30bc3ab4afa8df0a375cf495c01,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",I would go for a connection-oriented service. Since the information I`m a searching is very specific and important I would want to secure my search results agains corruption and loss to make sure I get the right information which is done by using connection-oriented services.,The stated information is correct but it does not answer what one should use when we just need to skim the websites as in such cases connectionless will cause less overhead compared to connection-oriented as we just need very short data transfer.,Partially correct,0.5,0,0,0.30993164
7ce2c75507494261b80cef1b8c575bf5,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this scenario it would be better to use a connection-oriented service, as the overhead of the the connection setup/handshake is negligible in a communication that is longer. The benefit of using a conenction-oriented service is better service.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.47375762
21e719db6e4843bd8428a0dd448381bb,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Connection-oriented service is better due to the importance of the information so in this waz will be losed.,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.46804273
46cf52f0ae8a42feaf39e9e9871717e0,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use connection-oriented service. Since the piece of information is very specific we don't want to miss a good result that is lost because the unreliable connectionless service. With the risk of not retrieving the piece of information in the next iteration anymore. Hence we want a reliable connection. Also we don't need the speed of connectionless service.,"By specific and important information, it is meant that one needs to search for it and the possibility is low to find it on the first search, and one needs to refine his query based on received results. While the stated points are true and may be good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.51781183
d8c4c6c9860343aab0a79be21a79cb85,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",I think it is better to use a connection-oriented service. After establishing a connection to the search engine you can send a query and get results without the possibilities of congestion (can result in a long waiting time for query results) and the loss of packets. The risk of losing query result packages makes it impractical to use a conectionless service.,"The response is correct but it does not explain the reasoning in the context of the scenario described in the question i.e. using an iterative approach, skimming initial websites for which there is less overhead when one uses connection less service.",Partially correct,1.0,0,0,0.5381602
64ea69a6a69a47f7a4cdafdc84e577ab,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use a connction-oriented service because it is more reliable. We want to make sure that we get all the very specific and important information in its complete form and we do not want any loss. It will take longer be will be more reliable.,"While the stated points are true and may be good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.Further while skimming, the content of the websites is scanned and therefore does not have to be  fully correct.",Partially correct,0.5,0,0,0.27377546
760ed05606524a508739928132da059a,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",I would choose connection-oriented service because is the information is specific and important. With connectionless service results could be lost.,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.5316312
4502256002ab48bc98bc7af0c94c98da,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would prefer a connection-oriented service, since the piece of information we are looking for is important. For that case, we need a reliable protocol, that also ensure that the data delivered is correct. Connectionless does not guarantee reliability.","While the stated points are true and may be good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.5431292
e979a166c8f94eb7aab0aee83c193e4f,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection ortiented, since your information comes from the searches from few websites. You need to be connected to them in order to find the information you are looking for.","We only need to skim these first few websites, so connection-oriented service is not a must.",Incorrect,0.0,0,0,0.36056554
e6bf20e92eaf40bc96f71799df52fa94,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Ein Verbindungsorientierter Service ist dafür am besten geeignet, da ich die Informationen vollständig und korrekt erhalten möchte. Ein verbindungsloser Service wäre zu unzuverlässig.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.1413756
c49f64df03884e5889101a607afe402a,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connectionless, because communication with each website is short, so the overhead from handshakes can become a problem.",The response is correct.,Correct,2.0,1,1,0.6393142
fc2811ee9c464589a2a9d9f02cc7d99c,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connection-oriented service for this, which can keep the state of the iterative process.","By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent.",Incorrect,0.0,0,0,0.42266744
129ff16b83eb480abce2b3a4455d1993,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","If we need a specific and important piece of information, we need to use connection-oriented communication. Since the connectionless service doesn't guarantee the data can be received in any order by the receiver, so the specific and important piece of data may be lost during this process.",The stated information is correct but it does not answer what one should use when we just need to skim the websites as in such cases connectionless will cause less overhead compared to connection-oriented as we just need very short data transfer.,Partially correct,0.5,0,0,0.5741547
f7c3466941aa410db44ad2a590f8b806,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",A connectionless service is more suitable for this scenario because it is more performance efficient due to the lack of the connection and disconnection phases compared to connection-oriented services (e.g. building a connection to every web resource in order to look for the specific information is very costly). Since the process of refining the query after every search happens iteratively we don't need to rely on a response from every website which can compensation for the unreliability of connectionless services (e.g. when packet are lost within the network).,The response is correct.,Correct,2.0,1,1,0.6559068
8de9a38f20014390ad69188538def0ec,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","If one would use a connection-oriented service in this scenario a new connection would have to be established to each of the visited websites only to transfer a small amount of data. So a connectionless service should be preferred, because otherwise the user might be noticeably slowed down by the handshake overhead.",The response is correct.,Correct,2.0,1,1,0.7241341
224b81c879554d46ac7b568df8e6e893,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It does not make a great difference since the order of the packages or the speed in which packages are transmitted doesn't matter in this scenario, because you would only ask for the results of one query a time and then wait for the answer before refining the query and sending the next package. But since your next query depends on the results of the previous one, reliability is an priority in this scenario. That's why a connection oriented service is better here.","Since it is an iterative process with many iterations searching for specific information, we need to put many inquiries through the network. So it makes sense to use connectionless. Just in the case of losing the specific information, one can reframe the query and submit it again.",Partially correct,1.0,0,0,0.35111994
df03d4fb1cbe420798318e60c3ef7ba2,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use the connectionless service because the communication is enabled with a certain error and duplicate rate. By refining the query after every search the communication works with a lot of errors, but gets closer to the goal each iteration. Therefore the high error rate in the connectionless service helps to increase the precision of the search and finally receive the wanted piece of information.","Though it is correct one needs to use connectionless service but the reasoning behind it is that for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather than establishing a time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,1.0,0,0,0.5291258
420a6d705c3645978d87f5fcdaa1e749,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connectionless, because we don't need a long stable connection, as I simply skim through the first results and then enter a new query. The overhead for a connection-oriented service might be too high, so connectionless makes more sense for the small queries. Furthermore, if many other users searched for things at the same time (and thus the network is congested), connectionless would still allow me to communicate (albeit slower).",The response is correct.,Correct,2.0,1,1,0.72478604
62747561d3f446f7bcf7ceca05ca007d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connection-oriented service for this use case. A connection-oriented sevice checks, whether a message is recieved and is more reliable than a connectionless service, and as the information we need is very specific and important, we cannot afford too miss any search result to a faulty connection.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.43604004
7104e9e23c8148d18baf95e5faaa027a,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connection-oriented service, because when you do a search query you get a response containing a list of the websites and since you want to skim the websites and want to go back to the results list after opening a website, you need to use a connection-oriented service, because else the information about the results list is lost after opening a website.","In case one is opening a website for skimming that could possibly be done in a new tab, this would be faster as then this could be connectionless.  As we are just skimming it, in case some information from that website is lost, it should not be an issue so connectionless services will be better.",Incorrect,0.0,0,0,0.53857815
343fd1d037c74123823fbf77ad509112,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connection-oriented service, because when I get the results for a search, I skim over a few websites by opening them. To get back from these websites to the result list, I need a state.","In case one is opening a website for skimming that could possibly be done in a new tab, this would be faster as then this could be connectionless.  As we are just skimming it, in case some information from that website is lost, it should not be an issue so connectionless services will be better.",Incorrect,0.0,0,0,0.47030234
1a916163a8194e0faecd025c53e80ee1,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this scenario, it is better to use the connection-oriented service, because of browsing for a specific and important piece of information. So it is important, that the information arrives completely at the receiver, although you are skimming the first few websites. And with connection-oriented services like TCP retransmits lost packets/information, which is quite important to find the specific information. With connectionless services lost information will not be retransmitted, so it could lead to incomplete information, which in the worst case is exactly that specific information.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access. If in the worst case, the lost information was our desired information, we still have the chance to reframe our query and submit it again.",Partially correct,1.0,0,0,0.55971044
4380859d1b6a42d4acd1a41a80dea362,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this scenario I would prefer to use a connection-oriented service, since it allows the search-engine algorithms to take into account your earlier (and unsuccessful) attempts at finding your information.","The user will refine his query based on previous results, so each query submission will be independent, so connection-oriented service is not necessary.",Incorrect,0.0,0,0,0.4483158
675b046b248a4dcc97811328d3d9f566,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service. Connectionless service is used in the network system to transfer data from one end to another end without creating any connection. So it does not require establishing a connection before sending the data from the sender to the receiver. It is not a reliable network service because it does not guarantee the transfer of data packets to the receiver, and data packets can be received in any order to the receiver. Therefore we can say that the data packet does not follow a defined path. A connectionless communication has an advantage over a connection-oriented communication, in that it has low overhead. It also allows for Browsing, multicast and broadcast operations in which the same data are transmitted to several recipients in a single transmission.",The response is correct.,Correct,2.0,1,1,0.6203127
d9d2667a6e0e484aa226b89534ae4fac,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","For the https protocol their is mostly using TCP and that s an connection oriented service protocol. But in this scenario I would recommendation connectionless service, because for my iterative process for looking information, i will save overhead (no handshashe). Overhead is significant in short communication and and in this scenario their is no need of build up an connection (connect, transfer, disconnect), because I don't want to have an long communication with my partner. I only get the information and go to the next website.",The provided answer is correct.,Correct,2.0,1,1,0.655766
6c8a1af1b61a4b4fa09edbdde1f709f1,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this situation, I believe that connection-oriented service is a better option for the communication. First of all, in the scenario, I am browsing very specific and important information. Connection-oriented service is usually used when the trust of data transmission is important. Also, the service's packets are transmitted to the receiver in the same order as the sender has sent.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.48183274
ee1c621540084b3bb751865e51b6ed87,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would go for the connection-oriented service, because the information I am looking for is very specific and I don't want to risk to receive an invalid piece of information. The latency is not that important and I dont want to have realtime upates, so a connectionless service doesnt make much sense in this case. Its more important to receive the correct data and with an connection oriented service it is easier to ensure that","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.5644092
c57cf60823c34c32a0ec004281e9d1c1,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Connection-oriented(?),Incorrect and no explanation provided.,Incorrect,0.0,0,0,0.45402417
90e1c553861946508c9765d35edc6e4f,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It might be better to use a connection-oriented service, because no important information will be lost. This produces a higher overhead because of the connection handshakes performed for each website one is skimming through, but it might be worth that no information is lost.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.5595148
15320bbf82874ce0b3d1bc1c021642b8,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use a connection-oriented service. The reason is that the information you are searching is important. So the connection-oriented service can provide more reliable transmission to get correct information.,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.3254847
732a92de2de5435b9b30c2040a2570e2,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service is better because the piece of information is important, user can't loss it, so a stable and guaranteed connection method is needed. And Connection-oriented service is a more reliable connection method than connectionless service.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.45481294
8887f85a1a5b43a48bedc49bd0e47d60,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection oriented service since iterations can be seen as states. First searching for the desired stuff, analyzing and narrowing the search until the information is found (disconnect).","There is no need to maintain a persistent state between subsequent questions. By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent.",Incorrect,0.0,0,0,0.41150016
e79ad9de92724fd4be9078b2af994d84,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service, since the process is iterative and the next step needs the information from previous step.","By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent, so the need for connection-oriented does not arise.",Incorrect,0.0,0,0,0.39342365
6ab1e5304af44973aa458105ca4b113e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service, since the process is iterative and the next step needs the information from previous step.","By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent.",Incorrect,0.0,0,0,0.39342365
721760ba911148578b9710f7b517005a,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Because we are browsing for a very specific and important piece of information it is better to go with connection-oriented service because it ""guarantees"" that all data packets are received in the same order as those sent by the sender which isn't necessarily the case with connection less service and therefore wouldn't be reliable","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.53416026
9ad583dfbece4142ac4fdaf8cd3d49e8,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","We'd have use connection-oriented service for the communication, as we're going to adopt an iterative process. So it's important to get the search results and refine it for the next request. With connection-oriented we ensure that we'll know if we have received the result or not, so we can make another request in case connection fails.","By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent. Further, the content of the websites is skimmed and therefore does not have to be fully correct.",Partially correct,0.5,0,0,0.45953256
214fe62fbe4341ff95c8b1147b198028,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","We'd have use connection-oriented service for the communication, as we're going to adopt an iterative process. So it's important to get the search results and refine it for the next request. With connection-oriented we ensure that we'll know if we have received the result or not, so we can make another request in case connection fails.",The stated information is correct but it does not answer what one should use when we just need to skim the websites as in such cases connectionless will cause less overhead compared to connection-oriented as we just need very short data transfer.,Partially correct,0.5,0,0,0.45953256
4521341d487c4d07bd56f9c3c1779732,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented service can be used to have access to previous results in a form of a session, especially if the next query n+1 is based on the previous n-k queries. A connection-oriented service provides storage for the previous queries and can provide the possibility to return to prior queries. When using a connection-less service there's only the current response.","The state of the user does not need to be stored as he is doing the search iteratively by himself. By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent.",Partially correct,0.5,0,0,0.50393724
e9c7fa00cc414e71a81e4b6fff1d3f74,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented service can be used to have access to previous results in a form of a session, especially if the next query n+1 is based on the previous n-k queries. A connection-oriented service provides storage for the previous queries and can provide the possibility to return to prior queries. When using a connection-less service there's only the current response.","The state of the user does not need to be stored as he is doing the search iteratively by himself. By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent.",Partially correct,0.5,0,0,0.50393724
5e87ec36ef1b40a5b68ec073e3db8497,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It would be better to use a connection-oriented service to make sure, that possible errors are corrected by the system. In this case, reliability of connection-oriented service is more important than a fast transmission of data, as offered by connectionless service.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.42366987
ab1f799864044ad88b6479a63d2b6012,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connectionless service. This service not only supports long communications but will still communicate despite congestion.Thus, despite the number of queries raised communication will still occur, although it may be delayed.","The stated advantages are correct but it does not answer what one should use when we just need to skim the websites, as in such cases connectionless will cause less overhead compared to connection-oriented as we just need very short data transfer.",Partially correct,1.0,0,0,0.57490927
2ac4a8cb01694d178bc7e7c77d0d93fb,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would go for a connectionless service. The advantages that a connection-oriented service offers can not really be used. There is no real state between the different request, as for each query, the user receives a straight answer. Furthermore, the refining of the query is done user side and a new connection is opened up each request anyways. Therefore the user can save bandwidth by using a connectionless service.",The response is correct,Correct,2.0,1,1,0.6071658
e859ec65f6124f748e75a9ae7dbf9313,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",I think a connection oriented service is better since it guarantees that all parts of the communication is correctly transmitted. When using connectionless it is possible to drop a query or the results.,The stated information is correct but it does not answer what one should use when we just need to skim the websites as in such cases connectionless will cause less overhead compared to connection-oriented as we just need very short data transfer.,Partially correct,0.5,0,0,0.57728887
eb241ac0e65a4d19ae292905c3f6c457,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Conenction-oriented is better solution, because it is more stable, reliable. The results, which are returned from the internet will effect the refining process, therefore we want to receive all information without losing any of them. With a dedicated connection we can control if package is lost, redo an interactive step of the process, which will improve the process.","Since we are looking for specific information, setting a dedicated connection to each website while skimming can be time-consuming. In such cases, 100% correct data is not required.",Partially correct,0.5,0,0,0.29045558
957efc774c2b47ceba9fddd77333f5fa,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use connection-oriented because it will need a two-way synchronization of segment counters. The paket will be send in several packet and will be pack together after the receive.,"The role of segmentation is not clear in this scenario. our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather than establishing a time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.4011762
05013c73e9fc408b8dbbebf98b44a87d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I think a connectionless service (like Googles QUIC UDP Protocol) would be better for the communication, because it doesn't need a connection establishment phase (handshake) which would cause an overhead for short communications like a search. Also we don't need to maintain a distributed state which a connection-oriented service like TCP needs (this would be not scalable).",The response is correct.,Correct,2.0,1,1,0.6608386
6e6b69310b314a70a472631326296cea,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-orientated service would be better because it saves some bandwidth in this specific case (multiple messages being transmitted between the same two parties). With only a single message transmitted, the overhead would be too large. But in this case it seems to be the better approach since only one connection establishment with the search engine is needed.",The provided perspective is correct but it does not answer the part where one needs to actually skim through the first few websites where connection-oriented could be time-consuming.,Partially correct,1.0,0,0,0.5383049
d8950e79914743a5bbd7ef7a709a1534,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",A connection-oriented service would be better since information could be lost or delayed in a connectionless service. Since you want to refine your search queries it is important that the shown results are in order. The amount of websites you can check after each query is limited and the results should be as precise as possible to have the smallest amount of iterations needed to reach the piece of information you are searching for. In addition to that the assumed process would be time intensive and therefore the time needed for the handshake should be negligible in comparison to a connectionless service.,"Since most of the communication occurs when connecting to presumably different web servers and the content is merely skimmed over, connectionless communication is better overall since it does not cause unnecessary overhead for connection setup.",Partially correct,1.0,0,0,0.5156093
a33ff5cbe3354d4ab5c31ba214157bff,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In this case, it is better to use a connection-oriented service since we search a specific and important information and want to refine our query after every search. The connection oriented service is comparable to a telephone and is more reliable than the connectionless service. Because of the fact that we should not lose our search history which is needed to refine our search, a connection oriented service is better.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access. Users can refine their query by themselves like changing the query keywords without the need to maintain any state.",Partially correct,0.5,0,0,0.42584148
e41a469bb20141b2891cf79f9ccf44c9,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use a connection-oriented service because it guarantees that the information cannot be lost or skipped. This is important since the information to be found is very specific and important.,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.43303585
6c442e4974f049e88b2fa6e3b08fca55,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service would be better, because there are small amounts of data needed from different websites, without needing to send information back to theese websites. The connection-less structure would also allow to get information from multiple websites at once, without having too connect to them one be one which would take way longer.",The provided answer is correct.,Correct,2.0,1,1,0.7206981
1b070459e1b34b698d4b007f76cfdbbf,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service would be better, because there are small amounts of data needed from different websites, without needing to send information back to theese websites. The connection-less structure would also allow to get information from multiple websites at once, without having too connect to them one be one which would take way longer.",The provided answer is correct.,Correct,2.0,1,1,0.7206981
329a94c2741741a69e02a1e2390bfa99,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service would be better, because there are small amounts of data needed from different websites, without needing to send information back to theese websites. The connection-less structure would also allow to get information from multiple websites at once, without having too connect to them one be one which would take way longer.",The response is correct.,Correct,2.0,1,1,0.7206981
c5817dd40cb7494ea57457d50d67c778,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would use a connection-oriented service, because I need my data to be sent with the exact order I sent them and with the lowest possible loss. Connection-oriented establishes a connection between the users and makes it easier for this to happen.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.5783521
2eece7a08bfd4a31a346e291c51a60e6,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connectionless service is better because you don't need to wait for the other side of the connection to accept the connection. so it doesn't need the connection establishment(three-phase) each time. communication partners can communicate even when the network is congested, however, the connection can be stall.",Correct.,Correct,2.0,1,1,0.65990734
2d342047d48645d3bfa5a4632a069951,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I think it is better to use a connectionless service because you have no connection establishment phase, so you save time and you do not need it anyways. Also if you refining your query after every search you enhance the reliability of your results to a good level.",The response is correct.,Correct,2.0,1,1,0.62233293
5f03bccc8b26456aaf70101168f206b3,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","The connection-oriented service is the better option. Firstly, the ressources for searching are needed for a long period of time. Secondly, congestions are not common for that service. It is a more reliable connection where less errors occur, good when a piece of important information has to be found.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.42923957
b88b13717169406cae77e1da39554877,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It is better to use a connectionless service, because I have to visit many websites and it is not really relevant, if the data of one website gets lost. Because a connectionless service is stateless, it is faster.",The response is correct.,Correct,2.0,1,1,0.65145576
364a1c57a6f341489076a98a2d8f0109,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","For this specific use-case it is better to use a connection-oriented service. First, the associated state of the connection could be used for the iterative process. Secondly, since the requested information is important we want some kind of reliability which can be provided by connection-oriented transport protocols like TCP. Transmission overhead compared to the connectionless service can be disregarded since it is insignificant in this case of a longer connection/communication.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.4887445
1a2ede4eede748f99483fb72eba27961,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","When refining a search query, this iterative process in each iteration builds upon the results of the preceding steps. A connection-oriented service is able to preserve such kind of results (i.e., the query from the previous iteration) while a connectionless service can't do this. By that, in each iteration, only the latest refinement needs to be transmitted and the previous query does not need to be preserved by the client. In web application this kind of service is often realized through sessions.","The query is readjusted by the user based upon the results obtained in the previous search, for example, the user enters specific words he is searching for which he got from the previous search results so the need for connection-oriented does not arise.",Partially correct,0.5,0,0,0.3659897
e064a3e9ed594b528d5443207a3e72b2,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",In this case a connectionless service would be better because it may be necessary to connect to a large amount of websites. In this case the connection-oriented service would be more time costing.,The response is correct.,Correct,2.0,1,1,0.68107104
c6042d7827334424ba8bdbea20c25a35,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","For the fastest way to get the information you need the best matching results of each search, so you know how good qour query was. If now a result ist lost in the communication and you do not get an acknowledgement about it the whole process slows down, because you get misled about your query. So it is better to use connection-oriented communication.",The stated information is correct but it does not answer what one should use when we just need to skim the websites as in such cases connectionless will cause less overhead compared to connection-oriented as we just need very short data transfer.,Partially correct,0.5,0,0,0.2796597
041d17d79323460d9a9a64558a71ea2e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Es ist besser einen verbindungslosen Service zu Benutzen, da",No explanation for the service type chosen provided.,Partially correct,0.5,0,0,0.107511796
fec7bfeff67746efba986dbcad13fb6e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented is better to use, because memory is needed to remember information from each search and refine the query after every search. Also, ""state"" needs to be maintained, because multiple queries are made iteratively and multiple different websites are visited in each iteration.","By iterative approach, it is meant that the user writes a query and based on the results refines the query for which persisting state is not required. Secondly, multiple websites are skimmed, connection-oriented in such cases can cause a lot of overhead.",Incorrect,0.0,0,0,0.37492448
7e8a56b2b70348d28ba5d662649ea2b4,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It's better to use a connectionless service, since you need to connect to many nodes and using a connection-oriented coomunication would take a lot of time. If you use connection-oriented coomunication, you'd need to establish a 1-to-1 connection with each node, and each time, it'd take time to make sure the connection is working correctly.",The response is correct.,Correct,2.0,1,1,0.6031631
e3e72d422a2f489382b3e9388f92c405,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connectionless service would be better because you are only browsing the web and a handshake method is unnecessary. connection-oriented service is usually used for long and steady communications while connectionless services are for short and ""bursty"" communications like browsing the web for a very specific and important piece of information.",The response is correct.,Correct,2.0,1,1,0.6362156
8b8550012bf04d4eabed3efd6715153f,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connnectionless would be better. * Less overhead, better for an iterative process * ""browsing"" => HTTP => connectionless",The response is correct.,Correct,2.0,1,1,0.6175302
d2f66b4bda084746be96f7c7441c3d81,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Connection oriented service would be more suitable in this scenario 1) because sometimes data will be redundant so connection oriented would help 2) it can send the accurate information about already visited site,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.5279614
b5faac4130054480ada38ff2e7a419de,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would use a connection-oriented service in this scenario. A connection-oriented service offers the reliability needed to make sure that the important piece of information that we are looking for is actually reaching us. If it would get lost during transmission, the service would repeat to send it until it is acknowledged to have arrived in contrast to a connectionless service, which does not per se offer these guarantees. Also, as our search is an iterative service, we could use the same connection multiple times, and thus the one-time overhead of setting up the connection is amortized over multiple queries.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access. By iterative, it is meant the repetitive process, not the iterative service.",Partially correct,0.5,0,0,0.5431089
adbc7bdb3579434ea7b1b96e3a598e99,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented should be better: With connectionless it is in no way guaranteed that you get the data you are asking for. With connection-oriented you are guaranteed that once you find the optimal result on the search page, you always retrieve the information.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.5227885
652929af0d1a4665a4e9e8761f96a105,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service is a better fit, because you communicate with many different websites while skimming to find the information. The overhead created by a connection-establishment and connection-teardown on each visit might lower the performance.",The response is correct.,Correct,2.0,1,1,0.6920651
0dc111716f5d4907ae20d1c8cbe77669,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","In my opinion, a connection-oriented service should be used in this scenario. This would allow for the service to store some information about the user, for instance which website she/he has already visited and therefore not always display the exact same results. In addition, it would allow QoS guarantees for the user to ensure timely results. In general, connection-oriented communication is suitable for longer communication, hence in this case it would make sense to maintain one continuous communication stream throughout the search.","Since we are refining the query, different results will be made available. Further, the scenario stated here points out the possibility of skimming many websites before reaching the required one, in such case use of connection-oriented service will result in a lot of overhead.",Incorrect,0.0,0,0,0.48719382
7e14a37de98348c68a50eb9f51996e9d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service is better because of the stateless communication. It provides a faster and more scalable communication system that can speed up the iterative process. Also, there is no need for a ""real"" channel, as only the website information is requested. Even if the network is busy, communication can take place since the information to be retrieved is not time critical.",The response is correct.,Correct,2.0,1,1,0.60813105
e3f34cc65f9b47e69e37df86f000ac74,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service is better because of the stateless communication. It provides a faster and more scalable communication system that can speed up the iterative process. Also, there is no need for a ""real"" channel, as only the website information is requested. Even if the network is busy, communication can take place since the information to be retrieved is not time critical.",The response is correct.,Correct,2.0,1,1,0.60813105
b3230ba076df4e3d9bbbad8e5cfedb2e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","connection-oriented this service has no loss, no duplication, and no sequential error, which are what the user need.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.40138692
27216c10b4a1448ab6e792bb8c751b66,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",I think the connection-oriented service would be better because the search is important and I want to know if my packets will be received. Furthermore I want to receive the right order of the most important websites and the order should be corrected if I receive them in a wrong order or a frame is faulty. Moreover I wanna have the same reply for the same request so that I can refine my search. Another thing is that my connection is more reliable and I don't broadcast my packets.,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.413604
e3ca88e91c5742e88914a04990f7a226,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented service is preferable, because it can provide reliability that prevents loss of results on the way. As the search is done iteratively the overhead of establishing a connection is negligible.","By iterative, it is meant that the user searches for information, based upon the results obtained he/she will input a new query, for example with modified keywords, so this query and the previous query submission will be independent, so the need for connection-oriented does not arise.",Incorrect,0.0,0,0,0.5119797
019a29390af840dab1db8b469d380f5c,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connection-oriented service (e.g. TCP) is required, which establishes and maintains the connection to transfer the information which then gets acknowledged and releases the connection once finished. A connectionless service (e.g. UDP) does not require a handshake and sends data without acknowledgements.",The response does not explain the requirement based upon the given scenario.,Incorrect,0.0,0,0,0.5935611
5333b070124a49e688bdcd1b11c208a7,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It's better to use a connection-oriented service, because only then can be assured, that all search results are shown to the user. With a connectionless service, there is the chance, that some information is not transmitted and an important search result is missing. The iterative search process will propably fail, if an important result is missing.","While the stated points are true and may be good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.45143297
98969e446d6145a39a85a3bcd4cad5a5,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",Considering that each iteration of refining my query can be seen as a single process with my changes to the query in between connection-oriented ist not necessary. Therefor connectionless is adequate. Benefits for connection-oriented,The response also needs to explain why connectionless service will be better along with the provided assumption.,Partially correct,1.0,0,0,0.43402523
9cada7c5b16f4a4ba8c6d04835710089,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would prefer a connection-oriented approach in this case, but it's possible to make arguments for both systems. The short ""bursty"" communication is an argument for connectionless, but on the other hand this situation also behaves like a conversation, where you send something and then wait for the answer, what makes a connection-oriented service. A reliable connection is also often assumed when talking about connection-oriented, what makes me say that connection-oriented would be better for this communication.","The correct answer is connectionless service as the request-reply process also works here. While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.47536993
91ebd49bb4944a0a83b714cda2d07251,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",A connectionless service should be fine for a simple question-response scenario. You don't want the overhead of establishing connections to hundreds of websites when the result is always a short response.,The response is correct.,Correct,2.0,1,1,0.6693031
83ffff1aeb454dbc887b310b94616e85,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It's better to use a connection-oriented service. Because i will need to adopt an iterative process of refining my query after every search. That means, there will be several package sending between my computer and server to find a very specific and important piece of information. So it is better to save the state in both side and build a ""tunnel"". That will make the service better.","Since query after refining again will be submitted again to the search engine by the user, connectionless service without much overhead still serves one purpose.our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather than establishing a time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.4012589
3c515f3919984097ab8b6bda76ba60bb,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I think, it is better to use connection-oriented for my communication in this scenario. Because the user needs a stable connection for the specific and important piece of inofrmation. Additionally, using a established connection is necessary for the iterative process. Because connectionless service does not maintain connection state.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access. There is no need to maintain a persistent state between subsequent questions.",Partially correct,0.5,0,0,0.55328417
73bef8edf59f4e0a87af49385a2ed1d8,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service. We need a reliable connection for getting correct information. There are so many data on the web, so flow control or congestion control is also required.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.4177521
e3b2693e2c044d888abebd9a35afdf5e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service is better, cause it has to use this, for an iterative process with very specific and important information.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.44728875
6569b771cdc140feb60b5804ac592af5,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","connection-oriented. Connection-oriented Service gives the guarantee of reliability (important information). In connection-oriented Service, Packets follow the same route, which shows the history of search and let you make new query avoiding repetition.","While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Partially correct,0.5,0,0,0.47627604
c7f88a45491d4a31ad2f156e8de4b79d,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service. It is mentioned above that the query need to be adjusted by the results of the first few websites. However connectionless service has no connection teardown phase, so the adjustment is not possible.","The query is readjusted by the user based upon the results obtained in the previous search, for example, the user enters specific words he is searching for which he got from the previous search results so the need for connection-oriented does not arise.",Incorrect,0.0,0,0,0.559887
2fa14b36b4f948a3bdf872c132e5c56f,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented service. It is mentioned above that the query need to be adjusted by the results of the first few websites. However connectionless service has no connection teardown phase, so the adjustment is not possible.","The query is readjusted by the user based upon the results obtained in the previous search, for example, the user enters specific words he is searching for which he got from the previous search results so the need for connection-oriented does not arise.",Incorrect,0.0,0,0,0.559887
1b012ac1983c4731844c26835c2ce432,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","connection-oriented service is better ,because this process is iterative ,and this iterative need very important imformation.","Since it is an iterative process with many iterations searching for specific information, we need to put many inquiries through the network. So it makes sense to use connectionless. Just in the case of losing the specific information, one can reframe the query and submit it again.",Partially correct,0.5,0,0,0.39884347
67e33c4899174e3e9f139b7edcebbd97,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",It is better to use a connection-oriented in this scenario. Because in cinnectin-oriented overhead of handshake an be significant in short communications. Connection-oriented an provide better service.,"While the stated points are true and maybe good to have once we have reached our desired website but our goal for the current scenario is to skim and reach the desired website first, which should ideally be quick when one is jumping from one website to another rather establishing time-consuming connection and teardown with each, in such case connectionless is a better option for faster access.",Incorrect,0.0,0,0,0.5154843
54907115d3404327b17cfbc4bba0f4a5,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",The answer is connection-oriented. An iterative search with a response is required. Only connection-oriented can communicate back.,"The question states that an iterative process of refining the query based on the results from the previous search so connectionless service will also work fine. Connection-oriented can be used once the desired website is found but during skimming, this will cause an overhead.",Incorrect,0.0,0,0,0.43531802
b276484650514278b1a9ebc984a07963,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.",The answer is connection-oriented. An iterative search with a response is required. Only connection-oriented can communicate back.,"The question states that an iterative process of refining the query based on the results from the previous search so connectionless service will also work fine. Connection-oriented can be used once the desired website is found but during skimming, this will cause an overhead.",Incorrect,0.0,0,0,0.43531802
a4c31c411dfa457cb8f7d67ca32c7f3e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-less Communication might be better, because no session needs to be established between sender and receiver. Thus no connection slots need to be brokered and used time to retrieve information can be minimised. Packets can simply be sent and hopefully retrieved. Especially as only a few websites are actually skimmed, it does not matter if packages are lost, if enough hosts are contacted.",The response is correct.,Partially correct,0.5,0,0,0.5563711
01010ab209924f50aab0d570edf888e8,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would say the connection-oriented service is better, because I am browsing for very specific and important information. Though I need the guarantee that my query responds consistent information, so that I do not lose important pages and the pages I receive should always be in the same order for the same query. If not I couldn't refine the query well.","Since it is an iterative process with many iterations searching for specific information, we need to put many inquiries through the network. So it makes sense to use connectionless. Just in the case of losing the specific information, one can reframe the query and submit it again.",Partially correct,0.5,0,0,0.3876982
35dc2a7ccb65425a9cb73e7b09ba5a5b,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","I would recommend using non-persistent CSMA for the following reasons: 1) The channel is expected to have a high load and non-persistent CSMA ensures a low number of collisions compared to other protocols and works thus better on high loads. 2) More systems will be added to the LAN in the future so scalability is very important. Non-Persistent CSMA is perfect in this case, because it requires no changes no matter how many systems are added in the channel. One Potential weakness of using non-persistent CSMA is that the throughtput will be low if only a few Systems are trying to use the channel. It can happen that multiple stations wait, even when the channel is idle.",Correct,Correct,3.5,2,0,0.523904
c59c6dc2977340e6802f883475ae4dc0,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","Non-persistent CSMA would be recommended in this case for 2 reasons. At first, CSMA avoid collision as much as possible by checking the channel before sending anything. Non-persistent CSMA provides the highest throughput in case the channel load is high. However, it has a potential weakness, the channel will be delayed longer than other MAC procedures. Other MAC procedures are not sufficient in terms of channel load and efficiency.",Correct,Correct,3.5,2,0,0.42665896
a8fbca380920480087cce283c20832af,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","The company should go with a standard CSMA/CD MAC procedure. The main reason for this is that it is possible to add stations easily to an existing network. Furthermore, it is a cost efficient MAC procedure which is a benefit due to the tight funding. A possible weakness is that the througput could be poor due to collisions due to high channel load.",Correct,Correct,3.5,2,0,0.4163385
fd4c2ed3ef33471aa8623d886f013575,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","I would recommend the non-persistent CSMA. First, it has high efficiency and high throughput. From a rate of about 5 attempts per packet time, it beats most of the other systems in terms of throughput. Second, the normalized throughput increases with increasing attempts per packet time. This enables and even supports expandability. A potential weakness is the throughput at low attempt rates. In these cases the non-persistent CSMA is inefficient.",Correct,Correct,3.5,2,0,0.44650108
2fdcf31a653f496c8baf88c2fdc31bd4,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","Based on the channel utilization slide of the lecture I would recommend the use of p-persistent CSMA (with a low value for p), because it has a high channel utilization that: (1) scales well for more systems sharing the channel (2) reduces the amount of collisions with the use of fixed time slots and medium sensing before sending (wait until medium is not busy) One disadvantage is that it can not terminate the sending when a collision occurs, instead, it waits until a random time interval, senses the channel and retransmit the frame if the medium is not busy.",Correct,Correct,3.5,2,0,0.5206783
bc92956350924f388abf3b9d0e6cff44,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","I would recommend CSMA/CD. The reason is that CSMA/CD checks the channel before and during sending frames. Also if the sending station detects a collision it immediately interrupts the transmission, which saves time, bandwidth and avoids wasteful transmissions. And because of the collision detection, its efficiency is better than the ""simple"" CSMAs. Furthermore, the advantage in contrast to coordinated access like Token Ring is if more and more systems are added it takes more time until a station that wants to send gets the token. A weakness of CSMA/CD would be if more systems are added the performance decreases.",Correct,Correct,3.5,2,0,0.5436136
b62d60e79e15403dbe371f9978c63972,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","Not sure what is meant with ""... expect the channel load to be high compared to the hardware they can provide."" Token Ring: + Good throughput even if the utilization is high and scalable for the future growth of the company. - It can come to some delays because of the waiting time for the token.",Correct,Correct,3.5,2,0,0.44869548
e4b1b84d9c6c448583f83c76012704a3,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","For this use case I would recommend CSMA/CD as MAC. The reasons for this are 1. that due to the high channel load collisions are expected and terminating the sending after an detected collision minimizes the time the channel is clogged up compared to CSMA without collision detection or even ALOHA. 2. CSMA is easier scalable than contention free access MACs since there is no need to authorize a sender in any form before sending, every sender checks the channel on its own and can send data when the channel is free. A potential weakness could be, depending on the access mode used by CSMA. Since currently the channel load is high compared to the hardware capacities using the non-persistent access mode with its higher efficiency could further strain the hardware. Although this could change in future when the system is expanded.",Correct,Correct,3.5,2,0,0.44042087
8eab99174102430e8b26503d79b31717,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","CSMA/CD is recommended because 1) it provides better throughput than other MAC procedures in overall, especially when the number of systems sharing the same channel is expected to increase further. This is important because the channel load is high due to the limited provided hardware. Secondly, 2) CSMA / CD saves time and bandwidth due to interrupting the transmission when a collision is detected (which is highly probable ). A potential weakness of CSMA \ CD's ability of collision detection depends on the maximum distance between the stations within the network. If the LAN network expands further there's a risk that CSMA / CD won't be possible anymore.",Correct,Correct,3.5,2,0,0.4644853
e78ffd9918dd45488b2f20a132b3f867,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","I would recommend non-persistent CSMA. It does not need a precise timer which is great for a tight budget and it has a high efficiency at the cost of longer delays for single stations. It can be expanded pretty easily by just adding new stations. ALOHA is not a good choice here, because of its low channel usage and CSMA/CD needs a reliable collision checking while 1-persistent CSMA has a low throughput at higher load and p-persistent CSMA needs a precise timer.",Correct,Correct,3.5,2,0,0.4372638
8835128bfe9e4fb3950daf85a4d73da8,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","CSMA/CD will be better. Because it's random access procedures and can add new systems more easily than coorinated ones. Using a collision detection will save more time and bandwidth than ALOHA and other CSMA procedure. The weakness is that the station in CSMA/CD procedure cannot send and receive frame at the same time, so this procedure is only suitable for Half-duplex commnuication.",Correct,Correct,3.5,2,0,0.42415667
382955b24a9f4029af43050e740a1540,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Wenn man im Internet an vielen verschiedenen Stellen sucht und connection-oriented Services benutzt, muss man auch mit vielen verschiedenen Stellen eine Verbindung aufbauen, die Zeit kosten kann. Auf viele Verbindungen ist das möglicherweise eine signifikante Zeit. Connectionless services vermeidet dieses und kann dadurch Zeit sparen. Es kann jedoch sein, dass der betroffene Server nichts von der Anfrage mitbekommt und man somit die Information nicht bekommt. Man sollte also Sicherungen bedenken, wie möglicherweise mehrmals Anfragen ausgeben.",The provided answer is correct.,Correct,2.0,1,0,0.39068002
5352d272a6d94cbb83a691b79ae5fc45,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","The connection-oriented protocol includes making and maintaining a connection and checks whether message is received or not, this takes much longer then in the connectionless protocol. This protocol does not guarantee the message delivery but it is possible to communicate faster and with multiple websites at the same time, so it suits better for the described application.",The response is correct.,Correct,2.0,1,0,0.59556705
5cc14f8927c441aa9189aaadf01c056a,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","A connectionless service is better as the user just queries the web for a specific piece of information, i.e the state of the user does not need to be stored as he is doing the search iteratively by himself. Also the handshake in the connection oriented service can be avoided when using a connectionless service.",The response is correct.,Correct,2.0,1,0,0.56566095
0ad38ebaf0694ae4aa7c1a943b1671ce,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","I would choose an connectionless service. This decition is motivated by the fact, that one search query does only consist of a request (by me) and an answer (by the search engine). Considering, that the time of the request is much shorter than the time I am rating the results, my decision avoids an unnecessary requirenment of holding the connection by the service provider. (It has been defined in the lecture, that) The type of the connection does not point out anything about the quality of service and so the connection oriented service would not have any adventage over an connectionless service during the whole process of this ""iterative research"".",The response is correct.,Correct,2.0,1,0,0.56276083
6d26254ba57a4620bae55018f10c3c8b,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","As it is highlighted that the data we are searching for is very important and specific, I would suggest a connection-oriented service. Such a service would be more reliable and would avoid data loss. On the other hand, a connectionless service would make rapid re-searching easier, as there is no connection-establishment and -teardown phase. As qualitative, complete information seems more important I would suggest a connection-oriented service.",The response is correct.,Correct,2.0,1,0,0.5621735
27bd9e4bc7ed4a61855153ba4f048c4d,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","Token ring Advantages: still expandable, high usage, due to token ring: sending only possible when sender has ring; prevention of collisions, no random waiting time Disadvantage: more expansive than other MAC procedures",Why is high usage an advantage? Extendability might be a strong suit but it has its flaws!,Partially correct,2.75,1,0,0.5178575
b422440f6d324eb6b827e2ad798c3f9e,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","connection less scheme would be better for this issue. because we don't know where the information is found there is a need to contact several servers in an iterative process. Creating a connection between every server to us has a big time overhead, so in order to reduce it we can use connection-less service, and we can save some time this way.",The response is correct.,Correct,2.0,1,0,0.59560037
3a3d9a2f3d374c14912bded7de9c987c,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Neither type of service is better or worse in this scenario for the user, unless the network itself is overloaded, in which case a connectionless service would be advantageous. For the server providing the search engine on the other hand, a connectionless service is advantageous, since the service must be provided for many users and each user may send multiple, independent queries, resulting in an overhead for connection build-up and tear-down.","The reasoning is not limited to the congestion scenario but since skimming and searching will require data for a short period of time, maybe from different servers, connectionless service is better in this regard.",Partially correct,1.5,1,0,0.59171915
ba0f888392a24c789d5465d6cf83b921,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","I'll choose CSMA/CD, because it costs efficient, it can detect the collision,but it has short frame.",Why is the collision detection an advantage? Why is the short frame an disadvantage?,Partially correct,2.5,1,0,0.45958272
41d4b3d115fc4aa7aa44115fc30d49ea,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","The advantage of a connectionless service is the qiucker establishment of a connection due to the missing connection establishment and connection teardown phase. Regarding an iterative process which takes a lot of repetitions saving time could be a significant factor. The advantage of connection oriented services on the other hand lies within the connection establishment and connection teardown phase. The handshake enables a reliable communication between client and server, since if connected, both are ready to communicate. This can be of special importance in a giant network like the internet, where data has to travel large distances since servers can be located anywhere. Since a failed connection can probably cost more time than it is saved by avoiding handshakes and teardown phases, it would be better to use a connection oriented service in this scenario.","Since most of the communication occurs when connecting to presumably different web servers and the content is merely skimmed over, connectionless communication is better overall since it does not cause unnecessary overhead for connection setup.",Partially correct,1.5,1,0,0.5333804
9eecdae17da5411f853f9577f91b51fe,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","Connection-oriented communication is suitable for communication with the search engine, since the search queries are refined and the same server is addressed (the same connection is reused). However, since most of the communication occurs when connecting to presumably different web servers and the content is merely skimmed over, connectionless communication is better overall, since it does not cause the unnecessary overhead for connection setup. Conclusion: connectionless rather than connection-oriented.",The response is correct.,Correct,2.0,1,0,0.59347904
58bfe839c1f44dc4a6721516a0dea74c,"Consider the following topology from the exercise. This time, node A wants to distribute a packet using Reverse Path Broadcast (RPB). Assume that every IS knows the best path to A and also whether they are the next hop of their neighbors on the unicast path to A.Please list all the packets which are sent together with the information whether they will be forwarded or dropped at the receiving nodes. Use the following notation: (sender, receiver, drop) for dropped and (sender, receiver, forward) for forwarded packets. Please group these tuples according to the number of hops the packets have travelled so far. For dropped packets, please specify the reason why the packet has been dropped in a few words.Example for the notation:Hop 1:(C, A, forward)(C, B, drop) <= describe reason hereHop 2:(A, D, drop) <= describe reason here","Hop 1 :(A, B, forward),(A, C, forward), (A, D, drop) <= reason: remaining neighbors C and F do not use D as the next hop to get to A Hop 2 :(B, E, forward),(C, F, drop), <= reason: remaining neighbors D, E, G do not use F as the next hop to get to A Hop 3 :(E, G, forward)Hop 4 :(G, H, drop) <= reason: H is only connected to G, packet is not forwarded to incoming link","Hop 1: (A, B, forward) (A, C, forward) (A, D, forward) Hop 2: (B, C, drop), C hat das Paket bereits empfangen. (B, E, forward) (C, B, drop), B hat das Paket bereits empfangen. (C, D, drop), D hat das Paket bereits empfangen. (C, E, drop), E bekommt Pakete von A normalerweise über B. (C, F, forward) (D, C, drop), C hat das Paket bereits empfangen. (D, F, drop), F bekommt Pakete von A normalerweise über C. Hop 3: (E, C, drop), C hat das Paket bereits empfangen. (E, F, drop), F hat das Paket bereits empfangen. (E, G, forward) (F, D, drop), D hat das Paket bereits empfangen. (F, E, drop), E hat das Paket bereits empfangen. (F, G, drop), G bekommt Pakete von A normalerweise über E. Hop 4: (G, F, drop), F hat das Paket bereits empfangen. (G, H, drop) H hat keine Nachbar, an die das Paket weitergereicht werden kann.","In  RFB, (A,D, drop) and subsequent flow will change accordingly. Also (C, F, drop)  will occur. Please consult the model solution.",Partially correct,1.5,1,0,0.518536
0536639a14844f69aa17bc8b261dbb1f,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","It's better to use connectionless service, collenctionless networks have no connection establishment phase, transfer of isolated unit data,go straight to data transfer phase and no connection teardown phase.",The response is correct.,Correct,2.0,1,0,0.56177115
0632012c4c3443dd93391906b49d75ce,"A company is planning to set up a new LAN at one of their locations and is looking for an appropriate medium access procedure. However, the funding is tight so they expect the channel load to be high compared to the hardware they can provide. Currently, they would like to have 20 systems sharing the channel, but it should be expandable later on. Which of the MAC procedures introduced in the lecture (Polling, TDMA with or without Reservation, Token Ring, Pure or Slotted ALOHA, 1-persistent CSMA, p-persistent CSMA, non-persistent CSMA or CSMA/CD) would you recommend?Give 2 reasons for your decision and 1 potential weakness of your recommendation in 2-6 sentences.","0.5 P for a sensible choice out of: Token Ring, p-persistent or non-persistent CSMA, CSMA/CD or TDMA with reservation 1P for the drawback and 1P for an advantage.The following properties may be considered: Scalability, waiting time, extendability, cost effectiveness, constraints, hardware requirements, compatibility, throughput, overhead, complexity and prioritization capabilities","Token Ring, +, Good throughput - even during increased utilization +, expandable -, Delays because of waiting for token",Extendability might be a strong suit but it has its flaws!,Partially correct,3.0,1,0,0.52073514
047deb430c1d4f49808213d8e5a5d7ca,"Consider the following scenario: You are browsing the web for a very specific and important piece of information. However, you are not quite sure how to find it and adopt an iterative process of refining your query after every search, depending on the shown results and a skim of the first few websites. Is it better to use a connection-oriented or connectionless service for your communication in this scenario? Explain your answer in 1-4 sentences.","Connectionless, because you will communicate with various partners (websites) for short periods of time. If you would initiate a connection with every website you skim, that would incur a lot of overhead in the connecting and disconnecting phase, just to have very short data transfers.","The advantage of a connectionless service is the qiucker establishment of a connection due to the missing connection establishment and connection teardown phase. Regarding an iterative process which takes a lot of repetitions saving time could be a significant factor. The advantage of connection oriented services on the other hand lies within the connection establishment and connection teardown phase. The handshake enables a reliable communication between client and server, since if connected, both are ready to communicate. This can be of special importance in a giant network like the internet, where data has to travel large distances since servers can be located anywhere. Since a failed connection can probably cost more time than it is saved by avoiding handshakes and teardown phases, it would be better to use a connection oriented service in this scenario.","Since most of the communication occurs when connecting to presumably different web servers and the content is merely skimmed over, connectionless communication is better overall since it does not cause unnecessary overhead for connection setup.",Partially correct,1.5,1,0,0.5333804
96298934541b4220a09d40f4e8b2e3b5,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,Flow tables define rules on how to forward packages from an import to an outport. Meter tables handle statistics by measuring the rate of flow and estimates a flow limit.,The response correctly answers the functionality of both types of tables.,Correct,1.0,0,1,0.6840224
e50cea44b9de4d4cb589aa238d077ee1,WHAT is the purpose of Reverse Path Forwarding and Reverse Path Broadcast? HOW do they work?,"Purpose: Both implement a more efficient kind (in terms of duplicate packets) of broadcasting than flooding / to minimize the number of duplicate packets in the network when broadcasting. Reverse Path Forwarding: Each node has a routing table stemming from unicast routing algorithms. When receiving a packet of sender S from neighbor N at node X, check the routing table and only forward the packet to all adjacent nodes (except for N) when you would send packets to S over N → the assumption is that the packet used the BEST route until now. Reverse Path Broadcast: Nodes monitor unicast traffic to learn which paths in the network they are a part of, that is node X knows that is on the best path between two nodes A and B if it receives unicast packets coming from A and going to B or visa versa. In other words, each node knows which spanning trees it is part of in the network. Reverse Path Broadcasting works identical to Reverse Path Forwarding with the exception that it only forwards packets on edges that are part of a spanning tree (again excluding the incoming line to N).","Reverse Path Forwarding: Used for ensuring loop-free forwarding of multicast packets in multicast routing and to help prevent IP address spoofing in unicast routing. Checks if the packet arrived at the IS entry port over which the packets for this station/source are usually sent. If packet is assumed taking the best route: resend over all edges (not including the incoming one). If packet is assumed not taking the best route: discard packet. Reverse Path Broadcast: Used to check if the set of shortest paths to a node forms a tree that spans the network. If the packet arrives at the IS entry over which the packets for this station/source are usually sent: Checks if Packet used the BEST route until now: if yes, select the edge at which the packets arrived and from which they are then rerouted to source. If no, do not send over all edges (without the incoming one). If the packet is not for this station/source: discard packet.","The purpose of the RPB algorithm is missing in the response. Additionally, the purpose is not limited to unicast and multicast but instead used widely in broadcast too.",Partially correct,0.9,0,1,0.84379905
08c7e79bf52c4b2a84167e1ed0cc0afc,Why can duplicate packets be a problem in a network? Please state your answer in a single sentence.,if the receiver is not capable of differentiating between valid and duplicated packets it may act on the same information twice.,The receiver receiving the duplicate might not distinguish it from a real packet and could perform a wrong (unwanted) action.,The response is correct.,Correct,0.5,0,1,0.8011605
d85fdcdbaf6e464bbf60b0117105d485,"Consider a single server queueing system with a buffer of size 10. Let us assume that 9 packets arrive per second and 10 packets are served per second on an average. Assume you monitor the system for exactly one minute after the system reaches equilibrium. How many seconds would you expect the system to be in a state in which there are less than 10 packets waiting in the queue? You need to justify your answer by showing steps involved; calculations, however, need not be included. headers.","Since we have a buffer size (N) of 10, we will always have less than 10 packets waiting in the queue unless there are exactly 10 packets in the queue. Therefore, we first calculate the probability of the system being full/having 10 packets in the queue. This is also called “blocking probability” or P_B. P_B = ((1 - utilization) * utilization^N) / 1 - utilization^(N+1) = ((1-0.9) * 0.9^10) / (1 - 0.9^11) = 0.0508 Alternatively to the blocking probability, it is also valid to directly calculate P(X less than 10) = (1 -P_B) by summing up the probabilities for 0, 1, …, 9 packets to be in the queue. To calculate the expected time where the system is not blocked in the 60-second observation time-frame, we simply multiply the time frame with P(X less than 10) or the complement of P_B (0.25p) = 60 * (1-P_B) = 56.9512 seconds","We expect the system to be in a state with less than 10 packets in the queue for 56.94s during the measured interval of one minute. First we calculated the utilization: (9pkt/s)/(10pkt/s) = 0.9 Then, we calculated the probability for the system to be in state 10, i.e. the probability that the system is full. p_10=((1-0.9)*0.9^10)/(1-0.9^11) = 0.051 Next, we calculated the counter probability of p_10 as we actually want to know with which probability the system is not in state 10. 1-p_10 = 1-0.051 = 0.949 To get the number of seconds the system is not in state 10, we calculated 60s * 0.949 = 56.94s as we measure the system for 60 seconds.",The response correctly states the non-blocking time and provides a valid justification for the calculation.,Correct,1.0,0,1,0.8199061
6635b38844d74d74be606f34313085d6,"Software-defined Networking (SDN) introduces separate control and data planes to manage network flows. Please explain the responsibilities of each plane in 1-2 sentences. Further, name two tasks the SDN controller takes care of.","Control Plane: The control plane is logically centralized, but can be physically distributed (multiple coordinating control servers for higher availability and scalability). One of the following responsibilities should be given: ● decides the route for the packet/data ○ Control servers manage the network graph, define routes, and update the flow tables of connected switches. ● handles unprocessed packets coming in from the data plane Data plane: Responsible for packet forwarding. Individual switches just execute actions according to their flow tables decided upon by the control plane. The following are the tasks taken care of by the controller: ● Configuration of forwarding tables ● Injecting packets ● Events from switch (packet-in) ● Collection/Monitoring of traffic statistics ● Discovery of topology ● Inventorying what devices are within the network and the capabilities of each device ● Interfaces with control logic (control “application”) via the northbound interface(s) ● Implements a southbound interface to interact with the data plane. ● Implements the control plane.","The control plane defines routes and manages the network graph. Therefore, the SDN controller collects information from the switches, detects the network topology, and computes and configures the forwarding tables. The data plane receives the forwarding tables from the control plane and takes actions on the packets according to these rules. If the data plane has no entry for a new packet, it may drop it or ask the control plane for a new rule (depends on the configuration).",The response correctly states the responsibilities of both planes and the tasks of the SDN controller.,Correct,1.0,0,1,0.72904444
75c224ecc88f44f09972a0aebf8d018c,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","1. replication downside: scalability problem → missing load distribution [Personal note: There are several methods of replication (all equal, single master/slave, multi master/slave, ...), each with its own downsides, so I concentrated on master/slave as the slide 27 did, then the bottleneck with respect to control network load seems to me the more important concern with this setup than consistency coordination.] 2. partitioning downside: no redundancy / availability problem → single point of failure [Personal note: Coordination of consistency is - in my opinion - a valid downside for both modes, but as the slide 28 suggests that there is no controller backup, availability seems to me the more important concern with this setup than consistency coordination.]",The response correctly identifies the two modes and their drawbacks. Note that the Single point of failure is not true because only that part of the network will be affected which was controlled by the failed partitioned controller.,Partially correct,0.875,0,1,0.650208
afcab339bcdd4bedb487a639de9cb198,Name the 3 service classes the Data Link Layer offers and explain the differences between the classes.,"1.unconfirmed connectionless - no ACK, loss of data possible, no flow control, no connect or disconnect. 2.confirmed connectionless - with ACK, no loss of data (timeout and retransmit instead→ duplicates and sequence errors possible), no flow control, no connect or disconnect. 3.connection-oriented - no data loss, duplication or sequencing errors. Instead a 3 phased communication with connect and disconnect, and flow control","- Unconfirmed Connectionless Service The Unconfirmed Connectionless Service sends data to the receiver, without announcing it (building up a connection) first in data frames without any flow control. Because of the missing connection and flow control, it is possible that complete data frames can get lost. - Confirmed Connectionless Service Wheras the confirmed connectionless service sends the data frames and waits for an acknowledgement of the corresponding recipient. If the recipient confirms the data frame, the next data frame is being sent. If the recipient doesn’t answer for a long time, the data frame is being resent. If for some reason, the ackknowledgement gets lost, the recipient will eventually get a data frame twice, and will not be able to detect the duplication. The correction has to be made on a higher level. It is much slower than the unconfirmed, because of waittime for timeouts and ackknowledgement messages. - Connection Oriented Service In the connection oriented service, the overhead is a lot higher, but the advantages are a detailed flow control, in which the recipient can detect duplicates, ask for a certain frame and can align the frames in the right order. And if the recipient reads slower than the sender transmit, it is possible to make a transmission. The participants first exchange a handshake and afterwards are transferring data. Afterwards the connection is disconnected.",The response answers the services' names and differences correctly.,Correct,1.0,0,1,0.64994395
644acd5953ec4041865c0d84876a2c0d,"Let us assume that you flip a coin 6 times where the probability of heads (H) showing up is 0.6. Please arrange the following events in the increasing order of their likelihood (i.e., least probable → most probable): ● Event A: you see at least three H’s ● Event B: you see the sequence HHHTTT ● Event C: you see exactly three H’s Include justification in your answer headers.","The correct sequence is BCA , where B is the least probable. One of the following justifications should be given: ● Event B is a subset/part/special case of C, and C is a subset/part/special case of A ● Event B is more specific/strict than C and C is more specific/strict than A ● An actual, correct calculation of the probabilities: ○ P(B) = 0.6 * 0.6 * 0.6 * 0.4 * 0.4 *0.4 = 0.6^3 *0.4^3 = 0.013824 ○ P(C) = (6 choose 3) * P(B) = 0.27648 ○ P(A) = P(C) + P(Y=4) + P(Y=5) + P(Y=6) = 1 - P(Y=0) - P(Y=1) - P(Y=2) = (6 choose 3) * 0.6^3 * 0.4^3 + (6 choose 4) * 0.6^4 * 0.4^2 +(6 choose 5) * 0.6^5 * 0.4 + (6 choose 6) * 0.6^6 = 0.27648 + 15 * 0.020736 + 6 * 0.031104 + 1 * 0.046656 = 0.8208 ○ The answer may be rounded to up to 2 decimal places, e.g. P(B) = 0.01 or P(B) = 0.014 ○ It is also sufficient to give a formula without the actual calculation, if it is apparent that P(B) less than P(C) less than P(A), e.g. by stating P(C) = 20 * P(B)","Event B Event C Event A Event B: This is because the probability of seeing exactly in sequence HHHTTT is very low as there can be many different combinations such as HTHHTH, HTHTHT and others similar to that but for having the sequence HHHTTT there is only a single combination so the probability is very low. Event C: Then the probability of seeing exactly three H's as the probability for showing up a head is 0.6 so there is more chances that a head shows up so the probability of head is more so exactly three H's probability is also low. Event A: The probability of seeing head at least three is more because the probability of head is more 0.6 so the probability of a tail is 0.4 so we consider for this circumstance 0 T, 1T, 2T and 3T so summation of all these gives us the probability of at least three H's",The response correctly states the sequence of the three given events. The justification for the events C and A is incorrect as the exact probability of H is not relevant (except when P(H) = 1 or 0) as C is a subset of A.,Partially correct,0.5,0,1,0.602473
378f95bc9e8d417999fa826387882927,"What is ""frame bursting""? Also, give 1 advantage and disadvantage compared to the carrier extension.","Frame bursting reduces the overhead for transmitting small frames by concatenating a sequence of multiple frames in one single transmission, without ever releasing control of the channel. Advantage :it is more efficient than carrier extension as single frames not filled up with garbage. Disadvantage :need frames waiting for transmission or buffering and delay of frames","Frame bursting allows the sender to concat frames in a single transmission to increase CSMA-CD distance. It has a higher efficiency than Carrier extension (extending min. frame length),but frames are needed to wait for transmission. Also, carrier extension has a higher overhead.",The response correctly answers all the parts of the question.,Correct,1.0,0,1,0.7904465
2bcec1f99c4041e8aeb9ea7e11dc4ce4,Name the 3 service classes the Data Link Layer offers and explain the differences between the classes.,"1.unconfirmed connectionless - no ACK, loss of data possible, no flow control, no connect or disconnect. 2.confirmed connectionless - with ACK, no loss of data (timeout and retransmit instead→ duplicates and sequence errors possible), no flow control, no connect or disconnect. 3.connection-oriented - no data loss, duplication or sequencing errors. Instead a 3 phased communication with connect and disconnect, and flow control","Unconfirmed Connectionless Service: no flow control Confirmed Connectionless Service: no flow control, duplication and sequencing error may happen Connection-Oriented Service: flow control, no loss, no duplication, no sequencing error",The response answers the services' names and differences correctly.,Correct,1.0,0,1,0.6815009
594cfe7114424846a674304c793a9da8,What are extension headers in IPv6 and where are they located in a packet? What is the main advantage of extension headers compared to IPv4?,"Extension headers are used to extend the fixed IPv6 header with additional, optional network layer information. If present, they are located between the fixed header/main header and payload/upper-layer header/ transport-layer header. Main advantage: One of the following advantages are considered fully correct: 1. It allows the appending of new options without changing the header. 2. IPv6 packets with optional headers are typically processed faster/simpler by intermediate devices as most of the options are ignored (except “Hop-by-Hop Extension”) while they are processed by all routers in IPv4 unless ordered otherwise.","Extension headers in IPv6 are placed between fixed header and payload. The advantages compared to IPv4 is that these are optional, it helps to overcome size limitation and allow to append new options without changing the fixed header.",The response answers the location and advantages of extension headers correctly and implicitly gives a description.,Correct,1.0,0,2,0.8502987
b44b8e88963349748f37edfedc89df14,"Software-defined Networking (SDN) introduces separate control and data planes to manage network flows. Please explain the responsibilities of each plane in 1-2 sentences. Further, name two tasks the SDN controller takes care of.","Control Plane: The control plane is logically centralized, but can be physically distributed (multiple coordinating control servers for higher availability and scalability). One of the following responsibilities should be given: ● decides the route for the packet/data ○ Control servers manage the network graph, define routes, and update the flow tables of connected switches. ● handles unprocessed packets coming in from the data plane Data plane: Responsible for packet forwarding. Individual switches just execute actions according to their flow tables decided upon by the control plane. The following are the tasks taken care of by the controller: ● Configuration of forwarding tables ● Injecting packets ● Events from switch (packet-in) ● Collection/Monitoring of traffic statistics ● Discovery of topology ● Inventorying what devices are within the network and the capabilities of each device ● Interfaces with control logic (control “application”) via the northbound interface(s) ● Implements a southbound interface to interact with the data plane. ● Implements the control plane.",Control Plane: The control plane computes the forwarding rules and install them on the data plane Data Plane: The data planes responsibility is the forwarding of packets to the right outgoing device port based on the forwarding rules. SDN Controller Tasks: - Discovers the network topology - Configures forwarding tables,The response correctly states the responsibilities of both planes and the tasks of the SDN controller.,Correct,1.0,0,1,0.74109715
c1c0383b4eba403696ac5c322c658dcd,What is the difference between asynchronous and synchronous transmission mode in the Data Link Layer.,"Asynchronous transmission: Every character a self-contained unit surrounded by a start bit and a stop bit, which is an easy and cheap pattern, but causes low transmission rates. Synchronous transmission: Several characters pooled to a continuous stream of data (frames), Frames defined by SYN or flag, higher complexity, but higher transmission rates. Requires synchronization between sender and receiver.","While in asynchronous transmission every character is bounded by a start and a end bit, in synchronous transmission several character are bound to frames, these frames are bound by SYN or flag. The asynchronous transmission is simple and inexpensive, but has a low transmission rate, up to 200 bit/sec, while the synchronous transmission has a higher transmission rate, but is more complex.",The response answers the differences correctly.,Correct,1.0,0,1,0.81281275
1afdd7ac12e848fca02d8434504aaae2,"To model the packet arrivals as a poisson process, we assumed that the arrivals for each time interval Δt are independent. Does this assumption hold for real INTERNET traffic? Explain your answer in 2-5 sentences.","No. Real internet traffic often comes in bursts. Therefore, arrivals are not independent because the probability of an arrival happening at a node is influenced by previous arrivals at the node. For example, on-demand video streams selectively load the next video segments when needed. This means the actual network utilization depends on the current playback state on the client-side. The packet arrivals are not independent, as it is likely that there is a low utilization directly after the next segments have been loaded.",This assumption does not hold in real internet traffic. In case of a video streaming service for example the packages are send in big burst. So the arrival of the first package does indicate the arrival of more packages and the more packages are received in a short time the more likely it gets that no more package will arrive for some time because the buffer for the video stream is full and the streaming service stops sending.,The response is correct as it associates the probability of a packet arrival happening at a node with previous arrivals at the node. The extent of the probability of receiving a packet after receiving several packets depends on many factors and may differ from client to client.,Correct,1.0,0,1,0.6141915
7f8ce5e4719149a8987c2c4af22729ca,Name the two modes of control plane distribution and name one downside for each of them.,"Two modes of physical distribution of control plane and associated drawbacks are: Replication ● Issue of scalability ● More resources, more cost ● Wastage of resources as the replicated node is on standby and no actual load distribution occurs. ● The problem to keep the data consistent in the replicated node is hard and complex. Partitioning ● Raises issues similar to P2P networks ● Knowledge about neighborhood ● Coordination and consistency ● Lower availability","The two modes are Replication and Partitioning. The disadvantage of Replication are the operating costs. You will have to operate two complex controller (Master and Slave) where only one at a time (primary) controls the network, the other one (secondary) being on standby waiting for the first to fail. With Partitioning the downside is, that if one Controller breaks part of the network goes down with it. Only the part connected and controlled by the other Controller is able to run.",The response correctly identifies the two modes and their drawbacks.,Correct,1.0,0,1,0.6138044
a600b2daa1194a6fa9426b622cf51050,"What is ""frame bursting""? Also, give 1 advantage and disadvantage compared to the carrier extension.","Frame bursting reduces the overhead for transmitting small frames by concatenating a sequence of multiple frames in one single transmission, without ever releasing control of the channel. Advantage :it is more efficient than carrier extension as single frames not filled up with garbage. Disadvantage :need frames waiting for transmission or buffering and delay of frames","Frame bursting is one of IEEE 802.3z features of shared broadcast mode.It allows a sender to put several buffered frames together and transmit those concatenated frames in a single transmission to the receiver, without giving up the control over the transmission medium. The advantage of frame bursting is the increased efficiency resulting from a higher throughput of individual data packets due to concatenation of single frames. The disadvantage is, that this method can increase the waiting time of other senders (that are currently not sending) and the end-to-end delay.",The response answers all three parts of the question correctly.,Correct,1.0,0,1,0.8002347
c5f4942e4d10425b844db460a2edcd90,What is the “Dynamic Host Configuration Protocol (DHCP)”? What is it used for?,"The Dynamic Host Configuration Protocol (DHCP) is a network management protocol used in Internet Protocol (IP) networks, whereby a DHCP server dynamically assigns an IP address and other network configuration parameters to each device on the network. Further, DHCP has largely replaced RARP (and BOOTP) Uses of DHCP are: Simplifies installation and configuration of end systems. Allows for manual and automatic IP address assignment. May provide additional configuration information (DNS server, netmask, default router, etc.)",It’s a network protocol used on IP networks to dynamically assign an IP address and other information to any device (host) on a network so they can communicate using IP.,The response only states the definition/description of DHCP correctly. The precise usage is missing in the response.,Partially correct,0.5,0,1,0.6303836
9a7267142136476e8025e943baf083b0,"In an SDN, switches maintain a pipeline of flow tables and a meter table. Summarize their respective functions in one sentence each.",Meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like QoS operation(rate-limiting being one of them). Flow pipeline: consists of flow tables that contain “rules” or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the routing logic in the switch,"-A pipeline of flow tables An OpenFlow switch matches packets with one or more flow tables. A flow table contains flow entries, and packets are matched (by the OpenFlow switch) based on the matching precedence of flow entries. The OpenFlow pipeline processing defines how packets interact with flow tables contained by a switch. -Meter table Meters complement the queue framework and monitor the ingress rate of traffic as defined by a flow. OpenFlow defines an abstraction called a meter table, which simply contains rows of meters. These meters can be manipulated in a similar manner to flows. Meters can receive packets and also (optionally) send packets.",The response correctly answers the functionality of both types of tables.,Correct,1.0,0,1,0.7532798
80770f18ce89499d9f3a9be6d1fca1a5,"In the lecture you have learned about congestion control with TCP. Name the 2 phases of congestion control and explain how the Congestion Window (cwnd) and the Slow Start Threshold (ss_thresh) change in each phase (after initialization, where cwnd = 1 and ss_thresh = advertised window size) in 1-4 sentences total.","Slow start: ss_thresh is constant, increment cwnd by one every time a segment is acknowledged until ss_tresh is reached, then slowed increase of cwnd Congestion Avoidance: cwnd is reset to 1 after adjusting ss_tresh = cwnd / 2","Slow start: in Slow Start phase, cwnd is increased by one from 1 each time a segment is acknowledged i.e. cwnd is increased exponentially, but untill cwnd reaches ss_thresh (cwnd = ss_thresh) or when there is a packet loss. The increament is lowed down when cwnd >= ss_thresh i.e. cwnd is increased successively. Congestion Avoidance. when congestion occurs, the size of ss_thresh is set to 50% of the current size of the congestion window i.e. ss_thresh = cwnd / 2 and cwnd is reset to 1. After that, Slow Start phase is entered.","In the slow start phase, what happens to the cwnd and threshold when the packet is lost before the threshold is reached. Also ""The increament is lowed down when cwnd >= ss_thresh i.e. cwnd is increased successively."" happens in the congestion avoidance phase.",Partially correct,0.88,0,1,0.84383035
